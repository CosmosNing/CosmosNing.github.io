<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CosmosNing的个人博客</title>
  <link rel="alternate" type="text/html" href="https://cosmosning.github.io"/>
  <link rel="self" type="application/atom+xml" href="/atom.xml"/>
  
  <updated>2020-08-20T16:46:12.068Z</updated>
  <id>https://cosmosning.github.io/</id>
  <icon>https://gitee.com/CosmosNing/MyPicGo/raw/master/images/avatar-32.ico</icon>
  <subtitle>探索·好奇</subtitle>
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Sci-Owl Weekly #3：如何阅读更多的书籍</title>
    <link href="https://cosmosning.github.io/2020/08/07/sci-owl-weekly-3/"/>
    <id>https://cosmosning.github.io/2020/08/07/sci-owl-weekly-3/</id>
    
    
    <author>
    <name>CosmosNing</name>
    <uri>https://cosmosning.github.io/about</uri>
    </author>
    
    
    <published>2020-08-07T11:01:46.000Z</published>
    <updated>2020-08-20T16:46:12.068Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.bootcdn.net/ajax/libs/lightgallery-js/1.2.0/css/lightgallery.min.css" /><div class=".article-gallery"<p>Sci-Owl Weekly，每周日更新。</p><p>本周刊欢迎读者的建议与投稿，请发送相关信息至 <a href="mailto:cosmosning@gmail.com">cosmosning@gmail.com</a> 。</p><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/joel-muniz-XqXJJhK-c08-unsplash.jpg" title="封面图" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/joel-muniz-XqXJJhK-c08-unsplash.jpg" alt="封面图"></a></p><p class="img-credit">Credit：<a href="https://unsplash.com/@jmuniz?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Joel Muniz</a>. <a href="https://unsplash.com/s/photos/reading?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Unsplash</a></p><h1 id="如何阅读更多的书籍"><a href="#如何阅读更多的书籍" class="headerlink" title="如何阅读更多的书籍"></a>如何阅读更多的书籍</h1><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/christin-hume-k2Kcwkandwg-unsplash.jpg" title="读书" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/christin-hume-k2Kcwkandwg-unsplash.jpg" alt="读书"></a></p><p class="img-credit">Credit：<a href="https://unsplash.com/@christinhumephoto?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Christin Hume</a>. <a href="https://unsplash.com/s/photos/reading?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Unsplash</a></p><p>人们买书，屯书，却由于其他更加吸引人的消遣品而没有时间在书籍中放飞自己的灵魂。如何在这个特殊的时代中挤出时间阅读更多的书籍？这篇<a href="https://psyche.co/guides/how-to-make-a-daily-habit-of-reading-more-books" target="_blank" rel="noopener">文章</a>在习惯的角度给了我们一些建议：</p><p>一、<strong>你得要思考你为什么想要多读书，你的目的是什么</strong>。有相关理论表明，足够的自我驱动力是习惯养成所需要的基石。比如，找个安静的地方停下来，想一想你为什么要这样做呢？这样做有什么价值呢？思考并回答这些问题，会给你足够的动力去阅读。</p><p>二、<strong>准备好舒适的阅读环境</strong>。无论是阅读纸质书，还是电子书，尽可能让书籍在你阅读环境周围唾手可得。如果你想让某事成为你生活中的一大部分，你可以让它首先成为你周围环境的一大部分。外在环境的暗示，会潜移默化地提醒你，别忘了多读书。</p><p>三、<strong>从你喜欢的书籍开始阅读</strong>。不要不经思考，就拿来别人或者是大 V 的书单。这些书籍很可能和你的兴趣并不相符，也就会逐渐浇灭你持续阅读的热情。去广泛的尝试，丢弃大部分不喜欢的，留下那些与你灵魂共鸣的少数反复阅读。</p><p>四、<strong>think big，start small</strong>。你并不需要立下多大的 flag ，这在很大程度上是虚假勤奋的表现。试试这个“两分钟法则”，每天翻看书籍 120 秒，并坚持下去，这很有可能会使阅读成为你生活中不可不做的一件事。</p><p>五、<strong>创造一种“行为联系”</strong>。具体的，在同样的时间、同样的地点，拿出书籍阅读。经过足够的时间磨合，那样的情景和阅读就产生了一种 “行为联系” 。这将会成为你阅读习惯养成的基础。</p><p>六、<strong>在你的日常活动中加入阅读</strong>。很有可能你的一天被各种日常充斥，无法留下空闲的时间阅读。那么，你可以在将阅读活动附加到某一项日常中，并坚持下去。</p><p>七、<strong>接受在培养阅读习惯中的各种挑战，别为所遇到的挫折太过烦恼</strong>。想要开始做一件事势必会遇到困难，但是这会逐渐变得简单的。只要你持续坚持下去，你会强化阅读的“行为联系”。而当“行为联系”得到强化后，对行为的控制逐渐会从一种花费精力的反射处理系统转交给自动行为系统。你会逐渐进入到一种状态，这种状态会自动触发阅读活动：你甚至不会思考你会去做什么，你就开始阅读了。</p><p>八、<strong>追踪你每天的阅读进度</strong>。这样做，会给你的大脑一个逐渐迈向目标的信号，激励你继续坚持。</p><p>九、<strong>加入有关阅读的社交团体、圈子</strong>。阅读也是一种与他人连接、交流的方式。</p><p>十、<strong>培养你对读者身份的认同</strong>。花些时间思考你想成为什么人，阅读更多书会怎样帮助你实现那样的目标。你阅读的目的可能并不是要读多少本书，而是成为一个读者。</p><hr><h1 id="聚焦"><a href="#聚焦" class="headerlink" title="聚焦"></a>聚焦</h1><ul><li><a href="https://www.zdnet.com/article/donald-trump-signs-executive-orders-banning-tiktok-and-wechat/" target="_blank" rel="noopener">特朗普签署总统令禁用 TikTok（抖音海外版） 和 WeChat（微信）</a></li></ul><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/macau-photo-agency-BkBPx42-y24-unsplash.jpg" title="wechat" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/macau-photo-agency-BkBPx42-y24-unsplash.jpg" alt="wechat"></a></p><p class="img-credit">Credit：<a href="https://unsplash.com/@macauphotoagency?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Macau Photo Agency</a>. <a href="https://unsplash.com/s/photos/wechat?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Unsplash</a></p><p>据报道，特朗普于本周签署了两条总统令：在 45 天之后，将会制裁任何与 TikTok 母公司字节跳动、腾讯旗下的微信开展业务往来的公司。</p><p>事件追踪：<a href="https://www.pingwest.com/w/215776" target="_blank" rel="noopener">白宫：总统令仅限于微信相关公司，不影响腾讯游戏运营</a></p><hr><ul><li><a href="https://36kr.com/p/824370599451778" target="_blank" rel="noopener">本土 RISC-V 企业芯来科技获小米投资，加速产业生态布局</a></li></ul><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/harrison-broadbent-nePxBIvqUlU-unsplash.jpg" title="芯片" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/harrison-broadbent-nePxBIvqUlU-unsplash.jpg" alt="芯片"></a></p><p class="img-credit">Credit：<a href="https://unsplash.com/@harrisonbroadbent?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Harrison Broadbent</a>. <a href="https://unsplash.com/s/photos/computer-chip?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Unsplash</a></p><p>芯来科技，一家 RISC-V 处理器内核IP和生态平台公司企业，获得了新一轮融资，由小米长江产业基金领投。据悉，芯来科技本轮融资资金将用于加速技术研发和商业落地，促进 RISC-V 处理器、专用算法、操作系统等核心技术的深度融合，同时在 AIoT 领域提供软硬一体化优质解决方案。</p><hr><ul><li><a href="https://www.engadget.com/sony-financial-earnings-ps4-game-sales-pandemic-074353666.html" target="_blank" rel="noopener">PS4 疫情期间游戏销量几乎翻倍</a></li></ul><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/fabian-albert-ePJUCF48vgo-unsplash.jpg" title="PS4" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/fabian-albert-ePJUCF48vgo-unsplash.jpg" alt="PS4"></a></p><p class="img-credit">Credit：<a href="https://unsplash.com/@fabiraw?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Fabian Albert</a>. <a href="https://unsplash.com/s/photos/playstation?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Unsplash</a></p><p>据索尼 20 年 Q1 财报显示，截止到 6 月 30 日，PS4 游戏销售额达到了 9,100 万，同比去年的 4,980 万上涨了 83 %。其中 74 % 的销售额由数字版游戏贡献。</p><hr><h1 id="好奇"><a href="#好奇" class="headerlink" title="好奇"></a>好奇</h1><ul><li><a href="https://www.csail.mit.edu/news/potential-covid-19-vaccines-get-boost-machine-learning" target="_blank" rel="noopener">机器学习助力 COVID-19 疫苗的研发</a></li></ul><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/shutterstock_1703465413.jpg" title="COVID-19 疫苗概念图" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/shutterstock_1703465413.jpg" alt="COVID-19 疫苗概念图"></a></p><p class="img-credit">Source：<span>MIT CAAIL Blog</span></p><p>最近，来自 MIT CAAIL（Computer Science and Artificial Intelligence Laboratory）的一个团队采用了一种全新的方法，让我们更加接近疫苗研制的解决方案：一个融合了机器学习的系统，它能够选取疫苗所需的多肽，这些多肽据系统预测将会令大多数人产生免疫作用。</p><p><strong>原理</strong></p><p>被称作 “OptiVax” 疫苗设计系统，向我们展示了设计新疫苗、评估现有疫苗、增强现有疫苗设计的许多方法。在这个系统中，机器学习算法为不同多肽所显示的免疫效果分别打分，并且在不断迭代中寻找能够最大化疫苗有效覆盖人口范围的多肽。</p><p><strong>未来工作</strong></p><p>一旦疫苗的动物试验证实有效，团队声称他们会在临床许可的条件下，在人体上做实验。目前，研究者们正在与国家健康所（National Institute of Health，NIH）合作，试图观察他们的方法通过使用 COVID-19 的病人数据，是否能用在其风险预测上。此外，该团队提及道，他们所提出解决方案的框架也能被用于更广泛的传染病疫苗研究，并且他们希望未来能够将其应用到其他病毒感染的研究上。</p><p><strong>更多</strong></p><p>你可以在<a href="https://www.cell.com/cell-systems/fulltext/S2405-4712(20)30238-6" target="_blank" rel="noopener">这里</a>找到论文的全文</p><hr><ul><li><a href="https://spectrum.ieee.org/automaton/robotics/robotics-hardware/robotic-third-arm-can-smash-through-walls" target="_blank" rel="noopener">强大的腰间机械臂</a></li></ul><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/robo-third-arm.jpeg" title="腰间机械臂" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/robo-third-arm.jpeg" alt="腰间机械臂"></a></p><p class="img-credit">Credit：<span>Université de Sherbrooke</span></p><p>在过去，当我们希望实际在人身体上增加一些机器部分时，这些机器通常受限于缓慢的运动和轻量级的任务。这些累赘也许并不是我们真正想要的。在 2020 年 的 ICRA （IEEE International Conference on Robotics and Automation）中，来自加拿大舍布鲁克大学（Université de Sherbrooke）的研究者给我们带来了一款强大的腰间机械臂。</p><p><strong>参数</strong></p><p>这款机械臂总重仅 4 公斤多一些，几乎和人类的手臂重量相同。它能够举起至多 5 公斤的物体，并且最大能以 3.4 m/s 的速度挥动。</p><p><strong>功能</strong></p><p>你可以将它想象成一个你的同事。无论是与你一起同时做相同的工作，以提高自己的生产力；还是去做其他繁杂重复的工作，从而可以解放自己的时间，并投入到需要创造力和判断力的工作中去。</p><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/robo-third-arm-applications.jpeg" title="机械臂的应用场景" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/robo-third-arm-applications.jpeg" alt="机械臂的应用场景"></a></p><p class="img-credit">Credit：<span>Université de Sherbrooke</span></p><hr><ul><li><a href="https://www.wired.com/story/what-can-ants-and-bees-teach-us-about-containing-disease/" target="_blank" rel="noopener">从蚂蚁和蜜蜂身上我们能学到什么应对传染病的知识</a></li></ul><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/salmen-bejaoui-pTWNamiyDkQ-unsplash.jpg" title="蚂蚁" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/salmen-bejaoui-pTWNamiyDkQ-unsplash.jpg" alt="蚂蚁"></a></p><p class="img-credit">Credit：<a href="https://unsplash.com/@slmnbj?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Salmen Bejaoui</a>. <a href="https://unsplash.com/s/photos/ants?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Unsplash</a></p><p>许多具有“社会性”的昆虫（例如蚂蚁、蜜蜂等）通常生活在一个封闭的环境中。这些环境中包含了许多种微生物，其中就有很多能引发瘟疫的病原体。然而，在实际情况下，类似的病毒大流行却很少在昆虫中发生。似乎这些生物能够以某种方式限制病毒的传染。</p><p><strong>以往的理论观点</strong></p><p>这些昆虫通常保持他们自己和居住地的干净。工蚁会把废物和尸体从巢穴中搬走。此外，它们经常互相清洗，保持自己的整洁。</p><p>一些蚂蚁会从树上采集具有抗生素作用的树脂，并且将它们传播到巢穴的周围。某些昆虫也会分泌一些用于杀死微生物的物质。这些物质包裹在它们的身体上，也留在了地面上。</p><p>当蚂蚁巢穴遭遇到某种病毒的侵袭时，它们会改变它们的接触策略，从而使得病毒难以传播——这种现象通常被称作组织性免疫（organizational immunity）。许多“社会性”昆虫拥有分配任务的复杂的社会系统。一些工蚁倾尽一生只会照顾蚁后，或是喂养幼虫，或是保卫巢穴。有数学模型表明，这样的社会分化可能也会延缓感染的发生。例如，只是和很少所指派的工蚁接触，蚁后可能更不容易生病。</p><p><strong>验证理论的方法</strong></p><p>以往的条件下，要实验验证这些理论十分困难。然而，自动化的昆虫追踪系统的出现，使得研究者可以为昆虫应对疫情的策略做更加细致的刻画。</p><p>为了制作一个蚂蚁社会网络，研究者们为蚂蚁贴上了十分小的二维码标记。一旦整个蚂蚁群落被标记完成，就将它们放在一个观察箱中。箱子上的高速摄像机，将会读取相应的二维码，并每秒两次，记录下每一个蚂蚁的位置。之后，通过高性能计算机处理这些数据，就可以刻画出一个蚂蚁群落的社交网络图。</p><p><strong>实验发现</strong></p><p>在一项实验中，研究者们发现，在引入病原体后，蚂蚁之间的接触更加分化。一些蚂蚁之间的接触比它和另一些蚂蚁的接触要更多。至少在理论上，这种模块化的网络能够减缓感染的蔓延。毕竟，相比于将其分为 20 组（每组 5 人）相互隔离的情况，人类病毒会在 100 个相互接触的人中更快的传播。</p><p>在另一项实验中，研究者放入了蚂蚁十分容易感染的真菌。结果表明，一旦蚂蚁侦测到病原体，这些网络也发生了变化：它们的模块度（modularity）增加了，并且群落中不同的任务组之间相互接触的更少。接触过病毒的采集者开始更少的和其他蚂蚁接触。甚至未接触的蚂蚁也产生了不同的行为，这使得大部分的接触行为限制在较小的蚂蚁圈子中。</p><hr><h1 id="百味"><a href="#百味" class="headerlink" title="百味"></a>百味</h1><ul><li><a href="https://www.boredpanda.com/tattoo-artist-turns-scars-art-ngocliketattoo/" target="_blank" rel="noopener">化腐朽为神奇：伤疤纹身艺术</a></li></ul><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/Tattoo-artist-makes-real-works-of-art-covering-sad-scars-5f227e9182f98__700.jpg" title="伤疤纹身" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/Tattoo-artist-makes-real-works-of-art-covering-sad-scars-5f227e9182f98__700.jpg" alt="伤疤纹身"></a></p><p class="img-credit">Credit：<span>ngocliketattoo</span> from <a href="https://www.boredpanda.com/" target="_blank" rel="noopener">Boredpanda</a></p><p>伤疤是人们希望隐藏起来的东西。然而一个纹身艺术家另辟蹊径，以伤疤为基础，设计出惊艳的纹身艺术。</p><hr><ul><li><a href="https://www.ted.com/talks/lucy_hone_3_secrets_of_resilient_people" target="_blank" rel="noopener">成为坚韧的人的三个秘诀</a></li></ul><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/LucyHone_2019X-embed.jpg" title="Lucy Hone" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/LucyHone_2019X-embed.jpg" alt="Lucy Hone"></a></p><p class="img-credit">演讲者：<a href="https://www.ted.com/speakers/lucy_hone" target="_blank" rel="noopener">Lucy Hone</a>. <a href="www.ted.com">TED</a></p><p>要想内心强大其实十分简单。Lucy Hone，一位 Resilience expert 、 researcher，向我们介绍了三个实用的技巧。</p><hr><ul><li><a href="https://mp.weixin.qq.com/s/wRcq37sXnNT_JJ0PvFvNoQ" target="_blank" rel="noopener">今天你内卷了吗</a></li></ul><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/alexandru-goman-CM-qccHaQ04-unsplash.jpg" title="思考" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/alexandru-goman-CM-qccHaQ04-unsplash.jpg" alt="思考"></a></p><p class="img-credit">Credit：<a href="https://unsplash.com/@alexgoman?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Alexandru Goman</a>. <a href="https://unsplash.com/s/photos/thought?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Unsplash</a></p><p>内卷，作为一个人类文化学家很早提出的概念，在近期又得到人们的广泛关注。那么什么是内卷呢？怎样应对内卷呢？这篇文章也许能解答你的困惑。</p><hr><h1 id="器术"><a href="#器术" class="headerlink" title="器术"></a>器术</h1><ul><li><a href="https://dev.to/devmount/10-awesome-pythonic-one-liners-explained-3doc" target="_blank" rel="noopener">英文 · 一行代码实现一个功能！10 个 Python 风格的代码解释</a></li></ul><p>这篇文章介绍了 10 行代码，每行代码实现一个简单的功能，并附有解释，任何基础的人都可以阅读。</p><hr><ul><li><a href="https://github.com/elyase/awesome-gpt3" target="_blank" rel="noopener">资源 · Awesome GPT-3</a></li></ul><p>近期，OpenAI 商业化了其设计的 <a href="https://arxiv.org/abs/2005.14165" target="_blank" rel="noopener">GPT-3</a> 模型，并开放了申请测试。一些开发者拿到了 OpenAI 提供的测试接口，并惊叹于 GPT-3 的强大。有网友将这些应用场景和相关资料做了一个整理放在了 GitHub 上。感兴趣的读者可以访问上面所示的链接。</p><hr><ul><li><a href="https://github.com/Delta2Force/MCVmComputers" target="_blank" rel="noopener">工具 · Minecraft 虚拟电脑 Mod</a></li></ul><p>Minecraft 作为自由度最高的游戏，为玩家提供了一个发挥创意的平台。近期，有 Mod 制作者开源了一个虚拟电脑 Mod。这使得你甚至可以在 Minecraft 中启动 Windows 95 虚拟机<a href="https://www.theverge.com/2020/7/25/21338092/minecraft-windows-95-pc-doom-vm-computers-mod" target="_blank" rel="noopener">玩 DOOM</a></p><hr><ul><li><a href="https://mp.weixin.qq.com/s/jhgH-tY7wIkcaA7s7WpOCA" target="_blank" rel="noopener">中文 · 谈谈职场中的决策与试错</a></li></ul><p>这篇有关职场思维的文章写的十分好，建议反复阅读。</p><hr><ul><li><a href="https://xie.infoq.cn/article/495e11547cc63794f693c1e73" target="_blank" rel="noopener">中文 · 两万字长文 50+ 张趣图带你领悟网络编程的内功心法</a></li></ul><p>有关计算机网络的常见知识的整理和讲解，建议收藏。</p><hr><h1 id="拾贝"><a href="#拾贝" class="headerlink" title="拾贝"></a>拾贝</h1><ul><li><a href="https://www.technologyreview.com/2020/08/06/1006079/instagram-reels-byte-triller-clash-tiktok-ban/" target="_blank" rel="noopener">对标 TikTok 的竞品有哪些</a></li></ul><p>自上周特朗普对 TikTok 发出禁令和强制收购言论后，许多以往不被人注意的短视频应用重新获得了关注。这里简单的介绍 4 个可能影响 TikTok 统治地位的 App。</p><p><strong>Byte</strong></p><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/ByteApp.jpg" title="Byte App" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/ByteApp.jpg" alt="Byte App"></a></p><p class="img-credit">Credit：<span>Byte</span></p><p>在 Vine 类应用的复兴的形势下，Byte 于今年早些时间发布了。Vine ，由 Twitter 联合拥有，是一个 6 秒短视频平台，几乎是最早的短视频应用，并且启发了包括 TikTok 等 App 的流行。然而不幸的是，Vine 在 2016 年被 Twitter 关闭了。作为 Vine 的创建者之一，Dom Hofmann 制作了 Byte，并且戏称这款应用是人们所钟爱的应用的精神续作。</p><p>当 TikTok 遭受美国政府仔细检查之前，Byte 十分死寂。“那里没有那么多的人。最受欢迎的视频不过收到了 300 个点赞”。然而，现在情况有些变化。在大量 TikTok 用户蜂拥而至后，仅仅几天时间内，人们在平台上有了更多的互动，并且受欢迎的视频内容也发生了明显的变化。</p><p><strong>Reels</strong></p><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/Instagram-Reels_-Facebook-launches-a-new-TikTok-clone-lailasnews.jpg" title="Reels" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/Instagram-Reels_-Facebook-launches-a-new-TikTok-clone-lailasnews.jpg" alt="Reels"></a></p><p class="img-credit">Source：<a href="https://lailasnews.com/instagram-reels-facebook-launches-a-new-tiktok-clone/" target="_blank" rel="noopener">LailasNews</a></p><p>Facebook，Instagram 的拥有者，在抄袭其他社交媒体平台成功特性并将其融入自己的产品中有一段悠久的历史。Reels 则是其最新的尝试。Reels 内嵌于 Instagram ，允许用户发布 15 秒可循环的视频。</p><p>Reels 上的视频内容直接对标 TikTok，你甚至会觉得这是 TikTok 的一部分，你会看到许多 20 多岁年轻人跳舞的视频。然而，对于其推荐算法你却不能抱有太多期待。</p><p>由于 Reels 是 Instagram 的一部分，所以它拥有一个强大的潜在用户基础。“我觉得它十分像 TikTok。”尽管它缺失了部分特性，但是那些东西很容易复制。有分析人士认为，如果 Reels 能够试图将 Z 世代拉回 Instagram，而不是宣传之前为了吸引视频观众而制作的 IGTV，Reels 有望成为一个可与 TikTok 匹敌的对手。</p><p>Instagram 也有一些与 TikTok 不同的巨大的文化差异。“TikTok 更加激进，并且存在多种不同的声音。”而 Instagram 上的作者更加专业，他们在自我展示上更加谨慎。</p><p>对于中老年用户来说，在 Instagram 上尝试短视频可能会有更舒适的体验。而 TikTok ，对于 25 岁以上的人也许就会是一个怪异的地方。</p><p><strong>Triller</strong></p><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/triller-app-store-ranking.jpeg" title="Triller App" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/triller-app-store-ranking.jpeg" alt="Triller App"></a></p><p class="img-credit">Credit：<span>Solen Feyissa</span></p><p>自从 2015 年开始，就有了 Triller 的身影。作为一款音视频简易剪辑的工具，你不需要许多专业知识，就能够通过这个应用创建你自己的音乐视频。在近几周 TikTok 风波的传播下，Triller 冲上了 App Store 榜首，成为了可能是最具攻击性的 TikTok 统治地位的挑战者。它从 TikTok 挖走了很多大咖，他们目前在 Triller 发布他们的跳舞视频。近期，它甚至控告 TikTok 侵犯了它的专利。</p><p>Triller 更像是一个改进版的 TikTok 。部分原因是其对 TikTok 名人的引流宣传。这还因为，Triller 更加关注于其 AI 剪辑特性，而不是造就 TikTok 的推荐算法。此外，受其起源的影响，Triller 中的视频更加聚焦于音乐领域。</p><p>Triller 更加适合乐队作者的创作，因为 Triller 本身和许多大型唱片公司已经有了许多业务往来。除此以外，Triller 也可能会成为 TikTok 大 V 转移平台的一个选择。</p><p>TikTok 面对这个挑战者，并没有坐以待毙。上周，TikTok 宣称它将会在未来三年内投入 10 亿美元支持美国创作者。</p><p><strong>Clash</strong></p><p>和 Byte 一样， Clash 拥有 Vine 的内核文化，因为它由前 Vine 超级管理员联合制作。然而，Clash 似乎更加关注于创作者的内容变现。</p><p>因此，Clash 十分适合于那些想要将自己的内容变现的名人和那些喜欢支持他们的粉丝。</p><p>“Clash 并不是为了成为 TikTok 的竞争者而成立的，而是为了迎合一种未被满足的需求，即内容创作者如何从他们所做的东西中赚到钱，并能够维持生活”。</p><p>目前 Clash 仅在 IOS 系统上提供测试，暂时没有 Android 端。</p><hr><ul><li><a href="https://arstechnica.com/science/2020/08/what-we-know-about-the-massive-chemical-explosion-in-beirut/" target="_blank" rel="noopener">从黎巴嫩爆炸事件我们能了解到什么</a></li></ul><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/stephen-radford-hLUTRzcVkqg-unsplash.jpg" title="爆炸" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/stephen-radford-hLUTRzcVkqg-unsplash.jpg" alt="爆炸"></a></p><p class="img-credit">Credit：<a href="https://unsplash.com/@steve228uk?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Stephen Radford</a>. <a href="https://unsplash.com/s/photos/explosion?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Unsplash</a></p><p>于 8 月 4 日下午 6 时许（当地时间）黎巴嫩的一个港口发生了重大的化学爆炸事件。这场爆炸至少导致 135 人死亡，数千人受伤，并且 30 万当地居民将因此无家可归。先前报道将其归咎于不合理的烟火存放，但是真相很快浮出水面：2750 吨硝酸铵（$NH_4NO_3$）在 2013 年被当地官员从货船上扣押，并且之后就一直存放在该港口的一个仓库中。</p><p><strong>硝酸铵是一个十分危险的物质</strong></p><p>当这种化学原料受到足够的热量时，它会分解为其他物质：一氧化二氮（$N_2O$）和水；或者，氮气、氧气和水（在更高的温度下）。这两种情况下，化学反应都会释放大量热量和能量。此外，该反应还会产生一种深橘红色的剧毒烟雾。</p><p><strong>比核爆炸小得多</strong></p><p>在理想情况下，一吨硝酸铵的爆炸力相当于 0.45 吨 TNT。然而，对于本次爆炸的评估，许多学者给出了不同的估算。依据地图数据和产生这种破坏所需的超压力，一个研究认为这场爆炸相当于 240 吨 TNT。另一个分析测量了爆炸所产生的火球，并以此为证据提出一个不同的估计——这相当于 300 吨 TNT。其中最高的估计为 3, 000 吨 TNT，他们将爆炸的大小和气体浓度作为参数分析得出了这个结论。</p><p>要知道，75 年前广岛核爆炸相当于 15, 000 吨 TNT。与核爆炸相比，此次爆炸要小得多。</p><hr><h1 id="火花"><a href="#火花" class="headerlink" title="火花"></a>火花</h1><blockquote class="blockquote-center">            <p>知识的敌人不是无知，而是已经掌握知识的幻觉。</p><p>—— 斯蒂芬·威廉·霍金</p>          </blockquote><hr><blockquote class="blockquote-center">            <p>Every action you take，is a vote for the type of person you want to become.</p><p>—— James Clear，《Atomic Habits》</p>          </blockquote><hr></div><script src="https://cdn.bootcdn.net/ajax/libs/lightgallery-js/1.2.0/js/lightgallery.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-thumbnail.js@1.2.0/dist/lg-thumbnail.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-zoom.js@1.2.0/dist/lg-zoom.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-autoplay.js@1.2.0/dist/lg-autoplay.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-fullscreen.js@1.2.0/dist/lg-fullscreen.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-pager.js@1.0.0/dist/lg-pager.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    <summary type="html">
    
      Sci-Owl Weekly 第 3 期
    
    </summary>
    
    
      <category term="周刊" scheme="https://cosmosning.github.io/categories/%E5%91%A8%E5%88%8A/"/>
    
    
  </entry>
  
  <entry>
    <title>Sci-Owl Weekly #2：别让骗子利用你的声音</title>
    <link href="https://cosmosning.github.io/2020/08/02/sci-owl-weekly-2/"/>
    <id>https://cosmosning.github.io/2020/08/02/sci-owl-weekly-2/</id>
    
    
    <author>
    <name>CosmosNing</name>
    <uri>https://cosmosning.github.io/about</uri>
    </author>
    
    
    <published>2020-08-02T01:04:25.000Z</published>
    <updated>2020-08-20T16:46:12.068Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.bootcdn.net/ajax/libs/lightgallery-js/1.2.0/css/lightgallery.min.css" /><div class=".article-gallery"<p>Sci-Owl Weekly，每周日更新。</p><p>本周刊欢迎读者的建议与投稿，请发送相关信息至 <a href="mailto:cosmosning@gmail.com">cosmosning@gmail.com</a> 。</p><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/james-toose-zWA7Obpb4R4-unsplash.jpg" title="封面图" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/james-toose-zWA7Obpb4R4-unsplash.jpg" alt="封面图"></a></p><p class="img-credit">Credit：<a href="https://unsplash.com/@portablepeopleproductions?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">James Toose</a>. <a href="https://unsplash.com/s/photos/owl?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Unsplash</a></p><h1 id="别让骗子利用你的声音"><a href="#别让骗子利用你的声音" class="headerlink" title="别让骗子利用你的声音"></a>别让骗子利用你的声音</h1><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/07/bermix-studio-F7DAQIDSk98-unsplash.jpg" title="骗子" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/07/bermix-studio-F7DAQIDSk98-unsplash.jpg" alt="骗子"></a></p><p class="img-credit">Credit：<a href="https://unsplash.com/@bermixstudio?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Bermix Studio</a>. <a href="https://unsplash.com/s/photos/fraud?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Unsplash</a></p><p>据<a href="https://www.vice.com/en_us/article/pkyqvb/deepfake-audio-impersonating-ceo-fraud-attempt" target="_blank" rel="noopener">报道</a>，6 月，一位科技公司的雇员收到一封语音邮件。该邮件声称，自己是这家公司的 CEO ，发这封邮件的目的是要求他“立刻提供帮助”，以完成一项紧急的公司交易。之后，一家安全公司调查此事发现，虽然语音邮件中的声音与 CEO 十分相似，但这是由电脑软件生成的。这也就是近几年来常常提到的假冒音频（deepfake audio）。</p><p>Deepfake audio 在近几年随着 AI 技术的发展，只需要你声音的几个样本，便可克隆你声音，并令普通人难辨真假。虽说技术无罪，但是仍有骗子企图利用这项技术，去欺骗他人，谋求金钱或其他东西。所谓“防人之心不可无”，我们能做的便是凡事留一个心眼，保护好自己。比如说，我接到陌生电话时，通常打开免提和录音，不先出声，等对方先说。大部分情况下，来电都是推销产品；当然，也会遇到一些互相沉默的情况（可能骗子此时就在录音采样你的声音。这种情况下，不要犹豫，直接挂掉）。也许有人会认为这太神经质了，万一是重要电话怎么办？我认为，重要电话的话，对方一定会千方百计地试图联系到你，无论是通过先说话还是多次呼叫等方式。这样，你就有了多种证据证明对方并无行骗之意，从而可以放心大胆地对话。</p><p>希望各位读者，保护好自己的声音，别让骗子利用了！</p><h1 id="聚焦"><a href="#聚焦" class="headerlink" title="聚焦"></a>聚焦</h1><ul><li><a href="https://www.donews.com/news/detail/2/3105457.html" target="_blank" rel="noopener">Canalys：二季度华为全球智能手机市场首超三星夺冠</a></li></ul><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/Canalys_Report.jpg" title="Canalys 报告" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/Canalys_Report.jpg" alt="Canalys 报告"></a></p><p class="img-credit">Source：<span>Canalys 报告</span></p><p>据 Canalys 近期的一份报告指出，2020 年第二季度华为首次在全球智能手机市场上超越了三星，成为全球智能手机出货量第一的公司。</p><hr><ul><li><a href="https://tech.163.com/20/0729/19/FINQ7D4M00097U7R.html" target="_blank" rel="noopener">字节跳动部分投资者对 TikTok 收购估值约 500 亿美元</a></li></ul><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/kon-karampelas-12TzzNLc2QM-unsplash.jpg" title="TikTok" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/kon-karampelas-12TzzNLc2QM-unsplash.jpg" alt="TikTok"></a></p><p class="img-credit">Credit：<a href="https://unsplash.com/@konkarampelas?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Kon Karampelas</a>. <a href="https://unsplash.com/s/photos/tiktok?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Unsplash</a></p><p>路透社消息，在美国要求字节跳动放弃对 TikTok 控制权的压力下，该公司正在考虑处理TikTok 的一系列选择。其中一些投资者寻求收购 TikTok，并对其估值约 500 亿美元。</p><p>事件发展：<a href="https://readhub.cn/topic/7YzhOh8jzHc" target="_blank" rel="noopener">美国政府强迫 TikTok 出售，微软接洽字节跳动有意收购</a></p><hr><ul><li><a href="https://www.technologyreview.com/2020/07/29/1005770/nasas-new-mars-rover-perseverance-bristling-tech-find-signs-alien-life/" target="_blank" rel="noopener">NASA 的火星外星生命探索</a></li></ul><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/brian-mcgowan-5_Z3YVosrCw-unsplash.jpg" title="探测器" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/brian-mcgowan-5_Z3YVosrCw-unsplash.jpg" alt="探测器"></a></p><p class="img-credit">Credit：<a href="https://unsplash.com/@sushioutlaw?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Brian McGowan</a>. <a href="https://unsplash.com/s/photos/mars-planet?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Unsplash</a></p><p>在上周中国天问一号发生成功之后，美国 NASA 于当地时间 7 月 30 日向火星发射了“毅力”号探测器。该探测器试图找到外星生命迹象，并采集相关样本，返回地球。</p><h1 id="好奇"><a href="#好奇" class="headerlink" title="好奇"></a>好奇</h1><ul><li><a href="https://www.theverge.com/21317052/mobile-autonomous-robot-lab-assistant-research-speed" target="_blank" rel="noopener">化学实验助理机器人</a></li></ul><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/robo-lab-assistant.png" title="化学实验助理机器人" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/robo-lab-assistant.png" alt="化学实验助理机器人"></a></p><p class="img-credit">Credit：University of Liverpool</p><p>在普通人，做化学实验看来是专属于学生和研究员的工作。因为繁杂的反应原料，多样的仪器设备，需要人手精密地控制。</p><p>然而，由英国利物浦大学设计开发的机器人也能胜任做化学实验的工作了！</p><p><strong>亮点</strong></p><p>每周七天，每天 22 小时（2小时用来充电），这位机器人助理能够持续地进行化学实验。该<a href="https://www.nature.com/articles/s41586-020-2442-2" target="_blank" rel="noopener">论文</a>指出，由于不间断地运作，该助理进行实验的速度比人类助理快 1000 倍。这使得研究人员从以往的耗时实验解放出来，能够留下更多的时间设计方案等。</p><p><strong>工作原理</strong></p><p>该机器人并不是完全自动的，它需要人工编程控制，其中包括许多化学实验的基本变量，并且控制算法会根据实验结果改变 10 多个变量，以达到最佳的实验效果。</p><p><strong>价值</strong></p><p>解放研究员的时间，帮助他们提高科研效率。</p><p>雷达赋予的夜间移动性，机械臂赋予的灵活性是一项巨大的进步。</p><p><strong>劣势</strong></p><p>贵！机器人的基本硬件花费在 125,000 美元 ～150,000 美元之间，之后又花了三年时间开发控制软件。</p><p><strong>评论</strong></p><p>设计者对该技术的未来持乐观态度，因此他们创办了一家公司，试图商业化这项技术，做出更商品化的产品，预计18个月能够完成。</p><p>起初十分怀疑，当人们看到它的工作状态时，他们震惊了，并开始相信如果没有这个助理，他们会有多低效。</p><hr><ul><li><a href="https://www.janklingler.com/" target="_blank" rel="noopener">美的令人窒息！色彩绚丽的细菌灯</a></li></ul><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/bacteria-lamp.jpg" title="细菌灯" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/bacteria-lamp.jpg" alt="细菌灯"></a></p><p class="img-credit">Credit：trendnomad.com</p><p><strong>亮点</strong></p><p>居住在瑞典的德国工业设计艺术家 <strong>Jan Klingler</strong> 融合了生物学、艺术和工业设计，推出了一款细菌灯产品。该产品可以为用户提供高质量的定制服务：从细菌的来源到灯的颜色，都可以满足客户个性化的需求。</p><p><strong>制作流程</strong></p><p>首先，依据用户需求，采取所需的细菌，并放入容器中培养；经过 24～48 小时的培养阶段之后，用树脂将其封存，凝固这一刻的美好；将 LED 灯插入容器，一个细菌灯就制作好了。</p><hr><ul><li><a href="https://aeon.co/essays/if-language-began-in-the-hands-why-did-it-ever-leave" target="_blank" rel="noopener">从手到口：如果语言起源于手势，为什么口语成为目前语言的主要交流方式</a></li></ul><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/kristina-flour-BcjdbyKWquw-unsplash.jpg" title="从手语到口语" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/kristina-flour-BcjdbyKWquw-unsplash.jpg" alt="从手语到口语"></a></p><p class="img-credit">Credit：<a href="https://unsplash.com/@tinaflour?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Kristina Flour</a>. <a href="https://unsplash.com/s/photos/mouth?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Unsplash</a></p><p>有很多语言学习研究者支持语言起源于手势。例如在孩子发育成长时，他将首先学会手势，再学会说话。也有相关实验证明，对于猿类来说，口语是难以触及的，但是手语却相对轻松习得。那么，是什么原因导致语言从手势转移到口语呢？</p><p><strong>关键要点</strong></p><p>对于这个原因的解释，很多学者从口语的优势角度给出了答案：</p><p>第一，口语是抽象的，而手势难以表达任意东西。如果不转移，那么这将严重阻碍抽象思维的诞生和发展。</p><p>第二，口语在黑暗中的表达效果更好。相对的，手语每天平均 12 小时能达到相同的效果，但是剩下的 12 小时，将会略显逊色。</p><p>第三，口语相对于手语，更加节省能量，这符合进化的规律。</p><h1 id="百味"><a href="#百味" class="headerlink" title="百味"></a>百味</h1><ul><li><a href="http://music.163.com/program/2068129904/56704863/" target="_blank" rel="noopener">播客 ·《高考前后的日子【VG聊天室347】》</a></li></ul><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/ivan-aleksic-PDRFeeDniCk-unsplash.jpg" title="考场" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/ivan-aleksic-PDRFeeDniCk-unsplash.jpg" alt="考场"></a></p><p class="img-credit">Credit：<a href="https://unsplash.com/@ivalex?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Ivan Aleksic</a>. <a href="https://unsplash.com/s/photos/classroom?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Unsplash</a></p><p>近几天，2020 年高考进入了志愿填报的阶段。高考前后你是怎么度过的呢？听一听来自游戏时光 VGtime 的编辑们对高考的回忆，以及他们学习和游戏之间的故事。</p><hr><ul><li><a href="https://www.ted.com/talks/dean_furness_to_overcome_challenges_stop_comparing_yourself_to_others" target="_blank" rel="noopener">TED · 要克服挑战，请先停下与他人的比较</a></li></ul><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/DeanFurness_2020S-embed.jpg" title="Dean Furness" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/DeanFurness_2020S-embed.jpg" alt="Dean Furness"></a></p><p class="img-credit">演讲人：<a href="https://www.ted.com/speakers/dean_furness" target="_blank" rel="noopener">Dean Furness</a>. TED</p><p>Dean Furness 曾经是一位数据分析员。 2011 年的一次事故使他下身瘫痪，无法行走。但经过数年的康复，辛勤工作和物理治疗师的鼓励，他开始作为轮椅运动员参加了芝加哥和波士顿马拉松比赛。 现在，他谈论自己的经历以及面对困难挑战所需要采取的措施。</p><hr><ul><li><a href="https://www.boredpanda.com/i-spend-days-on-bridges-to-take-images-of-roaming-vendors/" target="_blank" rel="noopener">图片 · 我在桥上花了几天时间拍摄小贩的图片</a></li></ul><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/LoesHeerinkHanoi.png" title="小商贩" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/LoesHeerinkHanoi.png" alt="小商贩"></a></p><p class="img-credit">Credit：<a href="https://loesheerink.com/" target="_blank" rel="noopener">Loes Heerink</a>. <a href="https://www.boredpanda.com/i-spend-days-on-bridges-to-take-images-of-roaming-vendors/" target="_blank" rel="noopener"> Bored Panda</a></p><p>Loes Heerink 从独特的视角捕捉了小商贩们的剪影。也许你从未关注她们：生活原来是如此多彩，却又饱含艰辛。</p><h1 id="器术"><a href="#器术" class="headerlink" title="器术"></a>器术</h1><ul><li><a href="https://laconicml.com/free-artificial-intelligence-courses/" target="_blank" rel="noopener">英文 · 10 个最佳的人工智能公开课，来自哈佛、麻省和斯坦福</a></li></ul><p>该文章整理了 10 个最佳的来自世界名校的人工智能公开课。建议收藏起来学（吃）习（灰）。</p><hr><ul><li><a href="https://www.ted.com/talks/yann_lecun_deep_learning_neural_networks_and_the_future_of_ai" target="_blank" rel="noopener">视频 · 对话 Yann LeCun：深度学习、神经网络和 AI 的未来</a></li></ul><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/YannLeCun_2020S-embed.jpg" title="Yann LeCun" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/YannLeCun_2020S-embed.jpg" alt="Yann LeCun"></a></p><p class="img-credit"> Yann LeCun. TED</p><p>2020 年 6 月，TED 的策展人 Chris Anderson 与深度学习大师 Yann LeCun 进行了一次视频连线。Yann LeCun 在连线中聊了聊他目前正在从事的自监督机器学习研究，他是如何尝试构建像人类一样具有常识的机器，以及他对下一个在 AI 领域概念性突破的展望。</p><p>如果原站访问速度太慢，欢迎到 B 站观看<a href="https://www.bilibili.com/video/BV1TZ4y1M7nw/" target="_blank" rel="noopener">我的搬运</a></p><hr><ul><li><a href="https://realpython.com/generative-adversarial-networks/" target="_blank" rel="noopener">英文 · 手把手教你实现你的第一个生成对抗网络</a></li></ul><p>生成对抗网络在图片生成、高清化中有非常丰富应用。如何实现一个生成对抗网络？这篇文章会手把手的教你。</p><hr><ul><li><a href="https://mp.weixin.qq.com/s/UOt7ijpDGrguxP8dpmua-w" target="_blank" rel="noopener">中文 · 工程师如何如何培养数据思维</a></li></ul><blockquote><p>“If you can’t measure it, you can’t improve it.”</p></blockquote><p>数据思维在研究和工业生产中是非常基础的一种思维。从数据中，我们能发现目前的优势和劣势。与此同时，定义关键的监控指标，会让我们的研究和工作获得更大的提升。</p><p>该文章的作者是硅谷的工程师，带领过许多团队。从这篇文章中，你认识到数据思维的价值和工程实践。</p><hr><ul><li><a href="https://xie.infoq.cn/article/8e66fa7ebe4d310db95b39c31" target="_blank" rel="noopener">中文 · 图解进程、线程</a></li></ul><p>通过多图、类比的手法解释进程、线程的概念，建议反复阅读。</p><h1 id="拾贝"><a href="#拾贝" class="headerlink" title="拾贝"></a>拾贝</h1><ul><li><a href="https://www.wired.com/story/looking-for-gravitons-check-for-the-buzz/" target="_blank" rel="noopener">探测引力子</a></li></ul><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/aron-visuals-R49cUgaQ0mk-unsplash.jpg" title="粒子" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/aron-visuals-R49cUgaQ0mk-unsplash.jpg" alt="粒子"></a></p><p class="img-credit">Credit：<a href="https://unsplash.com/@aronvisuals?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Aron Visuals</a>. <a href="https://unsplash.com/s/photos/particle?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Unsplash</a></p><p>很多物理学家认为引力子是存在的，但是他们中很少人认为我们能够探测到它们。引力子的世界只有当以尽可能小的比例放大时空结构时才会显现。这需要一种能够真正利用极端能量的设备。很不幸，任何能够直接探测到这种粒子的测量设备的 “普朗克长度” 必然太大，以至于会塌陷成一个黑洞。然而，近期发表的一篇<a href="https://arxiv.org/abs/2005.07211" target="_blank" rel="noopener">论文</a>通过理论计算，改变了这个观点：引力子可能会在引力波探测器中制造出可观测的“噪音”。</p><p>引力波探测器，简单的可以看作两个间隔一定距离的物体。当有引力波通过时，它们之间的距离会随着引力波拉伸、压缩两者之间的空间而增加和减少。此时，如果将引力子混入其中，就会在时空的常见波动之上添加了新的运动。当探测器吸收和释放引力子时，两个物体就会随机抖动。这就是引力子的 “噪音” 。</p><p>Parikh（论文一作）表示：“我们总是有这样的预感，引力子会以某种方式轰击探测器，并且因此存在一些抖动现象。” “但是，” Zahariade （论文三作）补充道，“当我们从数学角度理解引力子产生噪音的原理时，那真是一个美妙的时刻。”</p><p>尽管将会面对很多挑战， Wilczek（论文二作）“谨慎乐观”地认为他们的工作提出了一个可通过实验探测验证的预测。无论如何，他都希望该论文能够激励其他理论物理研究者去研究引力子噪声。</p><p>“基础物理学的研究是一项十分困难的工作。试想一下，你在一件 T 恤衫上写满了东西，之后你就很难再向衣服上增加或修改东西了。” Wilczek 说道，“我无法预料到这项贡献会引导研究者走向哪里，但我知道它为这个世界打开了一扇新的窗户。”</p><hr><ul><li><a href="https://www.npr.org/sections/health-shots/2020/07/27/893289171/a-boy-with-muscular-dystrophy-was-headed-for-a-wheelchair-then-gene-therapy-arri" target="_blank" rel="noopener">一个男孩、一位科学家和一个从未失去希望的家庭</a></li></ul><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/marianne-bos-eDOYvF6pM1I-unsplash.jpg" title="残疾人" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/08/marianne-bos-eDOYvF6pM1I-unsplash.jpg" alt="残疾人"></a></p><p class="img-credit">Credit：<a href="https://unsplash.com/@mariannebos?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">marianne bos</a>. <a href="https://unsplash.com/s/photos/wheelchair?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Unsplash</a></p><p>在 Conner Curran 4 岁的时候，他被诊断出患有 Duchenne型肌营养不良症。这是一个由基因缺陷引起的疾病，并且会逐渐导致患者肌肉萎缩，最终难以靠自己行走。据当时的医嘱，这个疾病难以治愈。然而，5 年后，Conner 不仅仅能够走路，并且还能够跑的更快。这要归功于一项研究发展了近 30 年的实验性的基因疗法。</p><p>据 Samulski （开创这项基因治疗的科学家）介绍，该病是由于缺少某些基因所致，因此只需将缺失的基因放回去，就能治愈。然而，这个十分简单的概念，却花了 Samulski 长达 30 多年的时间。面对技术上的挑战、研究资金的停供等阻碍，Samulski 以一个医者的坚持，最终开发出在动物身上试验成功的基因疗法。</p><p>在听到医生对于 Conner 的建议后，Conner 的父母 Jessica 和 Christopher Curran 不相信医生的预测。但是，在他们的儿子上一年级时，Conner 远远地落后于他的兄弟 Kyle，并且连在家的周围走动都十分吃力。</p><p>Curran 一家了解到，科学家们正在研究攻关，试图找到治愈的办法。在诊断后的一年，他们了解到了“基因疗法”。</p><p>“他和他的父母自愿成为第一个使用这项基因疗法的人。”  Samulski 说道。</p><p>随后，有更多的志愿者接受的同样的治疗。</p><p>然而，他们中的很多人，包括 Conner ，会产生例如发烧、恶心和肝、肾脏问题。并且有两个在医院走完了他们人生中的最后一刻。</p><p>Samulski 解释道，这样基因疗法试验由于技术方面的原因存在副作用，通常会影响肝脏。他坚信，自己能够解决这个问题。像往常一样，他产生了一个想法：“我们得在这里建立一个停止标记”。他告诉团队制作一个类似的样本。</p><p>在随后的采访中，他告诉我他的团队已经在原有基础上像他所要求的那样加上了停止标记。并且，实验室正在动物身上做试验，观察这种改进是否有效。</p><h1 id="火花"><a href="#火花" class="headerlink" title="火花"></a>火花</h1><blockquote class="blockquote-center">            <p>人生・事业的结果=思维方式×热情×能力</p><p>—— <a href="https://www.kyocera.com.cn/inamori/philosophy/words43.html" target="_blank" rel="noopener">稻盛和夫</a></p>          </blockquote><hr><blockquote class="blockquote-center">            <p>Context, not Control</p><p>—— <a href="https://www.sanjieke.cn/youzhao/article/24025165" target="_blank" rel="noopener">字节跳动管理理念</a></p>          </blockquote></div><script src="https://cdn.bootcdn.net/ajax/libs/lightgallery-js/1.2.0/js/lightgallery.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-thumbnail.js@1.2.0/dist/lg-thumbnail.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-zoom.js@1.2.0/dist/lg-zoom.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-autoplay.js@1.2.0/dist/lg-autoplay.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-fullscreen.js@1.2.0/dist/lg-fullscreen.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-pager.js@1.0.0/dist/lg-pager.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    <summary type="html">
    
      Sci-Owl Weekly 第 2 期
    
    </summary>
    
    
      <category term="周刊" scheme="https://cosmosning.github.io/categories/%E5%91%A8%E5%88%8A/"/>
    
    
  </entry>
  
  <entry>
    <title>Sci-Owl Weekly #1：科技探索者周刊创刊词</title>
    <link href="https://cosmosning.github.io/2020/07/25/sci-owl-weekly-1/"/>
    <id>https://cosmosning.github.io/2020/07/25/sci-owl-weekly-1/</id>
    
    
    <author>
    <name>CosmosNing</name>
    <uri>https://cosmosning.github.io/about</uri>
    </author>
    
    
    <published>2020-07-25T16:09:19.000Z</published>
    <updated>2020-08-20T16:46:12.068Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.bootcdn.net/ajax/libs/lightgallery-js/1.2.0/css/lightgallery.min.css" /><div class=".article-gallery"<p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/07/true-agency-Q8otix2SVko-unsplash.jpg" title="封面图" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/07/true-agency-Q8otix2SVko-unsplash.jpg" alt="封面图"></a></p><p class="img-credit">Credit：<a href="https://unsplash.com/@trueagency?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">True Agency</a>. <a href="https://unsplash.com/s/photos/magazine?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Unsplash</a></p><h1 id="创刊词"><a href="#创刊词" class="headerlink" title="创刊词"></a>创刊词</h1><p>Sci-Owl Weekly —— 科技探索者周刊就这么开始了。本周刊刊名 <code>Sci</code> 取自 <code>Science</code> 缩写，意味着本周刊主要关注科学、科技领域；<code>Owl</code> 意为猫头鹰，在西方的理解是智慧的象征。我希望我能够有猫头鹰的鹰一般的洞察力，并且以本周刊抛砖引玉，给读者带来探索智慧的享受。</p><p>目前预计每周日（我也不知道我能坚持多久，先看着吧），我会为你精选几篇文章或者视频，包括但不限于新鲜的科技资讯、有趣的科学现象。希望这些能够激起你的<strong>好奇心</strong>，并开启你的知识<strong>探索</strong>之旅。</p><p>本周刊主要有以下几个栏目：</p><ul><li>聚焦：每天都有新鲜事发生！本栏目将选取本周值得关注的科技新闻，供你了解科技行业动向。</li><li>好奇：世界很奇妙，总有些东西会激发你的好奇心！在这部分内容中，你会了解到一些有趣的原理、科技故事和更多。</li><li>百味：不妨给生活加点料！这部分的内容会关注人与生活，在理性之中点缀一些感性。</li><li>器术：别忘了学习！教程、书籍、工具都会在这部分推荐给你。</li><li>拾贝：留下文章的精华！我会摘录一些文章中的观点、现象，直接供你参考。</li><li>火花：总有那么几句话，令你醍醐灌顶！无论是思维碰撞，还是灵感迸发，这些火花也许能帮到你。</li></ul><p>那么，开始吧！</p><h1 id="聚焦"><a href="#聚焦" class="headerlink" title="聚焦"></a>聚焦</h1><ul><li><a href="https://www.zdnet.com/article/alibabas-ant-financial-plans-shanghai-hong-kong-ipos/" target="_blank" rel="noopener">蚂蚁金服拟计划在上海和香港上市</a></li></ul><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/07/markus-winkler-A-F_TIyWClU-unsplash.jpg" title="AliPay" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/07/markus-winkler-A-F_TIyWClU-unsplash.jpg" alt="AliPay"></a></p><p class="img-credit">Credit：<a href="https://unsplash.com/@markuswinkler?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Markus Winkler</a>. <a href="https://unsplash.com/s/photos/ant-financial?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Unsplash</a></p><p>近期，阿里巴巴蚂蚁金服开启了其在上海和香港上市的上市程序。据报道，此次上市估值约 2000 亿美金，将会推动其对中国服务业的数字化升级，并加大技术研发的投入力度。</p><ul><li><a href="http://www.xinhuanet.com/tech/2020-07/23/c_1126275764.htm" target="_blank" rel="noopener">天问一号，目标火星！</a></li></ul><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/07/1126275764_15954824662821n.jpg" title="天问一号发射升空" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/07/1126275764_15954824662821n.jpg" alt="天问一号发射升空"></a></p><p class="img-credit">Credit：才扬. <a href="http://www.xinhuanet.com/tech/2020-07/23/c_1126275764.htm" target="_blank" rel="noopener">新华网</a></p><p>7 月 23 日，中国文昌航天发射场发射了中国第一颗火星探测器 “天问一号”。这一刻，我们又见证了历史！</p><ul><li><a href="https://www.pingwest.com/w/214565" target="_blank" rel="noopener">苹果承诺 2030 年实现 100% 碳中和</a></li></ul><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/07/appleEnv.PNG" title="苹果碳中和宣言" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/07/appleEnv.PNG" alt="苹果碳中和宣言"></a></p><p class="img-credit">Source：<a href="https://www.apple.com.cn/environment/" target="_blank" rel="noopener">苹果环境保护宣传网站</a></p><p>苹果在其<a href="https://www.apple.com.cn/environment/" target="_blank" rel="noopener">网站</a>上公布了 2030 年实现 100% 碳中和的计划。该<a href="https://www.apple.com.cn/environment/pdf/Apple_Environmental_Progress_Report_2020.pdf" target="_blank" rel="noopener">报告</a>指出，苹果将在运营 100 % 使用可再生电力，在设计中 100 % 使用再生稀土，使用更高明的化学工艺减少产品对人的伤害。</p><h1 id="好奇"><a href="#好奇" class="headerlink" title="好奇"></a>好奇</h1><ul><li><a href="https://www.wired.com/story/will-the-hydrogen-revolution-start-in-a-garbage-dump/" target="_blank" rel="noopener">氢气革命会从垃圾开始吗</a></li></ul><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/07/hermes-rivera-R1_ibA4oXiI-unsplash.jpg" title="垃圾填埋场" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/07/hermes-rivera-R1_ibA4oXiI-unsplash.jpg" alt="垃圾填埋场"></a></p><p class="img-credit">Credit：<a href="https://unsplash.com/@hermez777?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Hermes Rivera</a>. <a href="https://unsplash.com/s/photos/garbage?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Unsplash</a></p><p>氢气在燃烧时，并不会产生有害气体，因此被人们认为是未来能源。</p><p>目前，许多美国企业正竞相将垃圾转换为氢气燃料技术商业化。那么，氢气革命会从垃圾开始吗？</p><ul><li><a href="https://www.knowablemagazine.org/article/health-disease/2020/how-viruses-evolve" target="_blank" rel="noopener">病毒是如何进化的</a></li></ul><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/07/virus-evolution-1600x600_0.png" title="病毒是如何进化的" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/07/virus-evolution-1600x600_0.png" alt="病毒是如何进化的"></a></p><p class="img-credit">Credit：<a href="https://www.knowablemagazine.org/article/health-disease/2020/how-viruses-evolve" target="_blank" rel="noopener">KNOWABLE MAGAZINE</a></p><p>新冠病毒疫情在全球范围内已经持续了半年之久。据目前的全球数据来看，疫情并没有在全球范围内得到控制。</p><p>病原体在感染新宿主时，需要适应新环境。这种特性是如何影响疫情的传播？接下来会怎么样？也许通过了解病毒是如何进化的，可以帮助我们更好的采取正确的措施。</p><ul><li><a href="https://primer.ai/blog/maverick-goose-begin-romantic-relationship/" target="_blank" rel="noopener">AI 如何生成新闻标题</a></li></ul><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/07/kedar-dhond-4Jr97hj-fn8-unsplash.jpg" title="新闻标题" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/07/kedar-dhond-4Jr97hj-fn8-unsplash.jpg" alt="新闻标题"></a></p><p class="img-credit">Credit：<a href="https://unsplash.com/@kedard?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Kedar Dhond 📷</a>. <a href="https://unsplash.com/s/photos/headlines?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Unsplash</a></p><p>如何为新闻起一个合适的标题？现在 AI 也能胜任这份工作了，并且可能会比人类表现的更为出色！如果你对此有兴趣，可以参看这篇<a href="https://arxiv.org/abs/1904.08455" target="_blank" rel="noopener">论文</a> 。</p><p>拓展阅读：<a href="https://www.technologyreview.com/2020/07/20/1005454/openai-machine-learning-language-generator-gpt-3-nlp/" target="_blank" rel="noopener">太强大了！OpenAI 的 GPT-3 语言生成器</a></p><h1 id="百味"><a href="#百味" class="headerlink" title="百味"></a>百味</h1><ul><li><a href="https://mp.weixin.qq.com/s/4noztbORY8YGRBrN4E0obw" target="_blank" rel="noopener">挣扎</a></li></ul><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/07/christopher-lemercier-12yvdCiLaVE-unsplash.jpg" title="挣扎" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/07/christopher-lemercier-12yvdCiLaVE-unsplash.jpg" alt="挣扎"></a></p><p class="img-credit">Credit：<a href="https://unsplash.com/@elevantarts?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">christopher lemercier</a>. <a href="https://unsplash.com/s/photos/struggle?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Unsplash</a></p><p>Redis 的作者 Antirez 是一位光鲜亮丽的艺术家，但他也免不了承受来自现实的压力：他既希望通过代码表达自我，但又受困于 Redis 维护过程中永无止尽的 PR 评审 、用户吐槽。在这样一个状态下，他选择近期辞去 Redis 项目维护者职务，将 Redis 交给 Redis 社区。</p><ul><li><a href="https://mp.weixin.qq.com/s/81ONcA1ViqpnfqB7-jfwAQ" target="_blank" rel="noopener">王信文 | 情绪作为一种操作系统</a></li></ul><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/07/tengyart-auEPahZjT40-unsplash.jpg" title="情绪" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/07/tengyart-auEPahZjT40-unsplash.jpg" alt="情绪"></a></p><p class="img-credit">Credit：<a href="https://unsplash.com/@tengyart?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Tengyart</a>. <a href="https://unsplash.com/s/photos/emotion?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Unsplash</a></p><p>情绪作为我们与生俱来的能力，并不能够应付越来越复杂的现实社会，我们要做的便是以升级的视角看待情绪，让它像操作系统一样更新换代。</p><ul><li><a href="https://www.douban.com/gallery/topic/152992/" target="_blank" rel="noopener">你童年时代的夏天</a></li></ul><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/07/edceee-G35D9jK1Bf0-unsplash.jpg" title="夏天" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/07/edceee-G35D9jK1Bf0-unsplash.jpg" alt="夏天"></a></p><p class="img-credit">Credit：<a href="https://unsplash.com/@edceee?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">煜翔 肖</a>. <a href="https://unsplash.com/s/photos/summer?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Unsplash</a></p><p>夏天，总会留下美好的回忆。你记忆中的夏天是什么样的？我想从陌生人的动态能窥见端倪。</p><h1 id="器术"><a href="#器术" class="headerlink" title="器术"></a>器术</h1><ul><li><a href="https://poloclub.github.io/cnn-explainer/" target="_blank" rel="noopener">英文 · CNN 交互式教程</a></li></ul><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/07/CNN-Explainer.PNG" title="CNN-Explainer" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/07/CNN-Explainer.PNG" alt="CNN-Explainer"></a></p><p>一个可交互的 CNN 入门教程，可以自己上传图片，观察处理过程。</p><ul><li><a href="https://pytorch.org/assets/deep-learning/Deep-Learning-with-PyTorch.pdf" target="_blank" rel="noopener">英文 · PyTorch 深度学习.pdf</a></li></ul><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/07/DL-with-PyTorch.PNG" title="DL-with-PyTorch" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/07/DL-with-PyTorch.PNG" alt="DL-with-PyTorch"></a></p><p>PyTorch 最好入门教程《Deep Learning with PyTorch》限时免费下载。</p><ul><li><a href="https://realpython.com/python3-object-oriented-programming/" target="_blank" rel="noopener">英文 · Python 3 面向对象编程教程</a></li></ul><p>介绍 Python3 如何定义类、实例化对象、继承等基本语法。</p><ul><li><a href="https://coolshell.cn/articles/20793.html" target="_blank" rel="noopener">中文 · 与程序员相关的CPU缓存知识</a></li></ul><p>缓存思想在工程应用中经常用到，是时候去操作系统 CPU 那里取取经了！</p><ul><li><a href="https://www.bilibili.com/video/BV12t411u726" target="_blank" rel="noopener">视频 · jvm内存模型全面解析</a></li></ul><p>有关 jvm 内存模型，一个视频就理解了！</p><h1 id="拾贝"><a href="#拾贝" class="headerlink" title="拾贝"></a>拾贝</h1><ul><li><a href="http://www.ruanyifeng.com/blog/2020/07/apple-abandon-Intel-chips-hit-the-us-computer-industry.html" target="_blank" rel="noopener">苹果放弃英特尔芯片，为什么会打击美国计算机产业？</a></li></ul><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/07/bg2020071804.jpg" title="Apple Silicon" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/07/bg2020071804.jpg" alt="Apple Silicon"></a></p><p>关于中国的电子制造业，普遍的观念是那里劳动力成本低，所以才选择在那里建立外包工厂。我不确定他们去的是中国哪个地区，但事实是，中国早在多年前就不再是劳动力成本低的国家。从供应链的角度来看，劳动力成本并不是选择中国的原因，主要原因是中国能够提供的技能。</p><p>我们的产品需要非常先进的工具，这意味着整个配套技术都必须是最先进的。这需要很深的工具技能。在美国，你召开一次工具方面的工程师会议，我不知道能不能坐满一个会议室，但在中国，可以坐满多个足球场。</p><ul><li><a href="https://type.cyhsu.xyz/2020/03/on-the-popularity-of-newsletters/" target="_blank" rel="noopener">从邮件通讯的流行谈起</a></li></ul><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/07/nyt_nl.png" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/07/nyt_nl.png" alt=""></a></p><p>放眼科技行业，近年无数新技术和平台都以「赋能」（empower）为使命，声称自己为用户和创作者提供了亟需的获取和传播信息的能力。然而，支撑着这种赋能叙事的，是一种「无能」的假定：用户没有能力自主找到需要的信息，而是需要算法来推荐和投喂；创作者没有能力自主和受众建立关系，而是需要平台和竞价「优化」来牵线搭桥。</p><p>邮件通讯和 RSS 等古旧技术的复苏有力地证伪了这种假定。它们表明，只要保障信息的自由流动、组合、处理——各种早期技术的普遍特征——用户就有能力搭配出符合兴趣且优质的信息「食谱」，创作者也有能力和用户建立直接、亲密的联系。相比于「赋能」，用户和创作者更需要的或许是「还能」，夺回他们被复杂技术以「赋能」名义攫取的独立获取或传播信息的能力。</p><p>但也正因如此，在使用和推广邮件通讯这样的「复古」技术时，应当避免对于其外在形式、渠道的过度强调。邮件通讯没有什么特殊的形式，而是抛开了各种不必要的形式，把信息不加包装、直截了当地送达读者；不是什么特殊的渠道，而是开辟了一个替代渠道，让用户在信息轰炸中获得自主掌控的空间。把握了这一点，不用拘泥于电子邮件的形式，也可以实现对信息区隔和分流的效果。反之，邮件通讯也可能被异化和商品化，为用户本就饱和的信息摄入徒增另一重负担。</p><h1 id="火花"><a href="#火花" class="headerlink" title="火花"></a>火花</h1><ul><li><a href="https://www.v2ex.com/t/692079" target="_blank" rel="noopener">你要悄悄学 Python ，然后惊艳所有人</a></li></ul><blockquote class="blockquote-center">            <p>如果不打算投入程序员这个职业，建议学习掌握好 Office 三件套，受益终身<br>尤其是 Excel 。</p><p>—— V2EX 网友</p>          </blockquote><ul><li><a href="https://www.v2ex.com/t/692187" target="_blank" rel="noopener">搞软件架构，是不是绕不开 Java ？</a></li></ul><blockquote class="blockquote-center">            <p>架构和语言有什么关系？架构是方法论，语言只是工具。</p><p>楼主你需要跳出编程的层面去看问题，这样才能找到问题的核心。</p><p>—— V2EX 网友</p>          </blockquote></div><script src="https://cdn.bootcdn.net/ajax/libs/lightgallery-js/1.2.0/js/lightgallery.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-thumbnail.js@1.2.0/dist/lg-thumbnail.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-zoom.js@1.2.0/dist/lg-zoom.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-autoplay.js@1.2.0/dist/lg-autoplay.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-fullscreen.js@1.2.0/dist/lg-fullscreen.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-pager.js@1.0.0/dist/lg-pager.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    <summary type="html">
    
      Sci-Owl Weekly 第 1 期
    
    </summary>
    
    
      <category term="周刊" scheme="https://cosmosning.github.io/categories/%E5%91%A8%E5%88%8A/"/>
    
    
  </entry>
  
  <entry>
    <title>SPARQL简易入门</title>
    <link href="https://cosmosning.github.io/2020/07/22/sparql-grammar-tutorial/"/>
    <id>https://cosmosning.github.io/2020/07/22/sparql-grammar-tutorial/</id>
    
    
    <author>
    <name>CosmosNing</name>
    <uri>https://cosmosning.github.io/about</uri>
    </author>
    
    
    <published>2020-07-22T13:27:40.000Z</published>
    <updated>2020-08-20T16:46:12.068Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.bootcdn.net/ajax/libs/lightgallery-js/1.2.0/css/lightgallery.min.css" /><div class=".article-gallery"<blockquote><p>最近在学习图数据库的基础知识。本文将参考 《<a href="http://learningsparql.com/" target="_blank" rel="noopener">Learning SPARQL: querying and updating with SPARQL 1.1</a>》这本书，简单介绍 RDF 数据查询语言 SPARQL。主要内容如下：</p><ol><li>SPARQL简介</li><li>SPARQL 基本语法</li><li>SPARQL 常见关键字</li><li>SPARQL 常见函数</li></ol></blockquote><h1 id="SPARQL-简介"><a href="#SPARQL-简介" class="headerlink" title="SPARQL 简介"></a>SPARQL 简介</h1><p>SPARQL（SPARQL Protocol and RDF Query Language）是一种数据查询语言。它不仅仅支持查询 RDF 数据，也可以在部分关系型数据库中对数据库进行数据操作。</p><h1 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h1><p>SPARQL 的语法与 SQL 很类似，也有许多不同之处。下面将简要介绍 SPARQL 的基本语法。</p><h2 id="符号"><a href="#符号" class="headerlink" title="符号"></a>符号</h2><h3 id="变量和常量（字符串、数字及URI）"><a href="#变量和常量（字符串、数字及URI）" class="headerlink" title="变量和常量（字符串、数字及URI）"></a>变量和常量（字符串、数字及URI）</h3><p>在 SPARQL 语句中，通常以 <code>？变量名</code> 表示变量；而常量一般为字符串、数字及 URI，其中 URI 由尖括号（&lt; &gt;）包裹。</p><h3 id="标点符号"><a href="#标点符号" class="headerlink" title="标点符号"></a>标点符号</h3><ul><li>逗号（,）与分号（;）</li></ul><p>与 RDF Turtle 序列化格式类似，<code>;</code> 代表下一个三元组与当前三元组拥有<strong>相同的主语</strong>，<code>,</code> 代表下一个三元组与当前三元组拥有<strong>相同的主语和谓语</strong>。</p><ul><li>井号（#）</li></ul><p>在 SPARQL 脚本文件中（文件后缀名为 <code>.rq</code>），<strong><code>#</code> 为注释标记</strong>。</p><ul><li>尖括号（&lt; &gt;）</li></ul><p>尖括号常用来<strong>包裹 URI</strong>。</p><ul><li>星号（*）与加号（+）</li></ul><p>星号和加号常用于<strong>查询的正则匹配</strong>。在正则匹配中，<strong>星号</strong>代表<strong>零个或多个</strong>，<strong>加号</strong>代表<strong>一个或多个</strong>。例如，假设有一个论文相互引用的关系图，那么 <code>?s c:cites :paperA</code> 中的 <code>？s</code> 则代表所有一次直接引用 <code>:paperA</code> 的论文；而 <code>?s c:cites+ :paperA</code> 中的 <code>?s</code>则在前者的基础之上，进一步包含了间接引用 <code>:paperA</code> 的论文。</p><p>此外，与 SQL 相同，查询子句 <code>SELECT *</code> 中的星号代表所有数据。</p><ul><li>叹号（!）</li></ul><p>叹号用于布尔条件判断中的<strong>否定词</strong>。</p><ul><li>脱字符（^）</li></ul><p>脱字符在 SPARQL 中可用来修饰谓语，用来反转主语与宾语之间的关系。例如，假设有一个三元组 <code>s p o;</code> ，那么  <code>o ^p s;</code> 将与之等价（<strong>主宾颠倒</strong>）。 </p><ul><li>斜杠（/）</li></ul><p>斜杠用来分隔几个连续的谓语，例如，<code>?s c:cites/c:cites/c:cites :paperA</code> 中 <code>?s</code> 代表与 <code>:paperA</code> 引用属性距离为 3 的所有论文。</p><h2 id="语句"><a href="#语句" class="headerlink" title="语句"></a>语句</h2><h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><p>SPARQL 支持多种关键词查询数据。这些关键词包括 <code>SELECT</code> 、<code>CONSTRUCT</code> 、<code>DESCRIBE</code> 、 <code>ASK</code> 。</p><ul><li><code>SELECT</code> 查询结果返回一个二维表（与 SQL 中 <code>SELECT</code> 类似），其语句一般格式如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">SELECT [DISTINCT] &lt;variable1&gt; [&lt;variable2&gt; ...]</span><br><span class="line">[FROM ...]</span><br><span class="line">WHERE</span><br><span class="line">&#123;</span><br><span class="line">    triple pattern 1.</span><br><span class="line">    [triple pattern 2.]</span><br><span class="line">    ...</span><br><span class="line">    [附加条件...]</span><br><span class="line">&#125;</span><br><span class="line">[OFFSET 数字]</span><br><span class="line">[LIMIT 数字]</span><br><span class="line">[ORDER BY | GROUP BY ...]</span><br></pre></td></tr></table></figure><ul><li><code>CONSTRUCT</code> 查询结果返回一个 RDF 图（三元组集合），其语句一般格式如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">CONSTRUCT </span><br><span class="line">&#123; </span><br><span class="line">    triple pattern .</span><br><span class="line">    ...</span><br><span class="line">&#125; </span><br><span class="line">WHERE </span><br><span class="line">&#123; </span><br><span class="line">    triple pattern . </span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info">            <p>关于 <code>CONSTRUCT</code> 更多用法请参看 <a href="https://www.w3.org/TR/sparql11-query/#construct" target="_blank" rel="noopener">W3C Recommendation</a></p>          </div><ul><li><code>ASK</code> 查询结果返回真或者假，表示 RDF 数据中是否存在指定模式的三元组，其语句一般格式如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ASK  </span><br><span class="line">&#123; </span><br><span class="line">    triple pattern .</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>DESCRIBE</code> 查询结果返回对指定数据的资源描述（以 RDF 图的形式存储），该图的结果由 SPARQL 处理器决定（也就是说，不同 SPARQL 处理器运行同一条 <code>DESCRIBE</code> 查询语句，可能会有不同的结果），其语句一般格式如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DESCRIBE &lt;variable1&gt;|&lt;IRI1&gt; [&lt;variable2&gt;|&lt;IRI2&gt; ...]</span><br><span class="line">WHERE </span><br><span class="line">&#123;</span><br><span class="line">    triple pattern .</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info">            <p>关于 <code>DESCRIBE</code> 更多用法请参看 <a href="https://www.w3.org/TR/sparql11-query/#describe" target="_blank" rel="noopener">W3C Recommendation</a></p>          </div><div class="note info">            <p class="note-title">URLs, URN，URIs，IRIs</p><ul><li>URL（Uniform Resource Locator）：用于指明网络资源的位置。</li><li>URN（Universal Resource Name）：用于指明网络资源的名称。</li><li>URI（Universal Resource Identifier）：用于唯一指定资源，包含 URL 和 URN（很少在用）。</li><li>IRI（Internationalized Resource Identifier）：IRI 是 URI，但是可包含更广泛的字符（如中文等）</li></ul>          </div><h3 id="增加（TBD）"><a href="#增加（TBD）" class="headerlink" title="增加（TBD）"></a>增加（TBD）</h3><h3 id="更新（TBD）"><a href="#更新（TBD）" class="headerlink" title="更新（TBD）"></a>更新（TBD）</h3><h3 id="删除（TBD）"><a href="#删除（TBD）" class="headerlink" title="删除（TBD）"></a>删除（TBD）</h3><h1 id="常见关键字"><a href="#常见关键字" class="headerlink" title="常见关键字"></a>常见关键字</h1><h2 id="WHERE"><a href="#WHERE" class="headerlink" title="WHERE"></a>WHERE</h2><p><code>WHERE</code> 用于指明查询条件，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># filename: ex003.rq</span><br><span class="line"></span><br><span class="line">PREFIX ab: &lt;http:&#x2F;&#x2F;learningsparql.com&#x2F;ns&#x2F;addressbook#&gt; </span><br><span class="line"></span><br><span class="line">SELECT ?craigEmail</span><br><span class="line">WHERE</span><br><span class="line">&#123; ab:craig ab:email ?craigEmail . &#125;</span><br></pre></td></tr></table></figure><h2 id="DISTINCT"><a href="#DISTINCT" class="headerlink" title="DISTINCT"></a>DISTINCT</h2><p>和 SQL 一样，<code>DISTINCT</code> 用于消去查询结果中重复的数据项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># filename: ex092.rq</span><br><span class="line"></span><br><span class="line">SELECT DISTINCT ?p </span><br><span class="line">WHERE</span><br><span class="line">&#123; ?s ?p ?o . &#125;</span><br></pre></td></tr></table></figure><p>上述查询将会返回<strong>数据集中所有不重复的属性名称</strong>。当遇到一个新的数据集时，建议执行该脚本，从而初步认识该数据集。</p><h2 id="FROM"><a href="#FROM" class="headerlink" title="FROM"></a>FROM</h2><p><code>FROM</code> 关键字常用于指明数据集所在位置，有以下两种形式：</p><ul><li><code>FROM &lt;URI&gt;</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># filename: ex123.rq</span><br><span class="line"></span><br><span class="line">PREFIX ab: &lt;http:&#x2F;&#x2F;learningsparql.com&#x2F;ns&#x2F;addressbook#&gt; </span><br><span class="line"></span><br><span class="line">SELECT ?email </span><br><span class="line">FROM &lt;ex069.ttl&gt;</span><br><span class="line">FROM &lt;ex122.ttl&gt;</span><br><span class="line">WHERE</span><br><span class="line">&#123; ?s ab:email ?email . &#125;</span><br></pre></td></tr></table></figure><p>例如，上述 SPARQL 脚本文件从 <code>&lt;ex069.ttl&gt;</code> 和 <code>&lt;ex122.ttl&gt;</code> 文件中查询数据</p><ul><li><code>FROM NAMED</code></li></ul><p><code>FROM NAMED</code> 为提供了在 Named Graph 中查询数据的功能。下面是一个具体的例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># filename: ex126.rq</span><br><span class="line"></span><br><span class="line">PREFIX ab: &lt;http:&#x2F;&#x2F;learningsparql.com&#x2F;ns&#x2F;addressbook#&gt;</span><br><span class="line"></span><br><span class="line">SELECT ?lname ?courseName </span><br><span class="line">FROM &lt;ex069.ttl&gt; </span><br><span class="line">FROM NAMED &lt;ex125.ttl&gt;</span><br><span class="line">FROM NAMED &lt;ex122.ttl&gt;   # unnecessary</span><br><span class="line"></span><br><span class="line">WHERE</span><br><span class="line">&#123;</span><br><span class="line">  &#123; ?student ab:lastName ?lname &#125;</span><br><span class="line">  UNION</span><br><span class="line">  &#123; GRAPH &lt;ex125.ttl&gt; &#123; ?course ab:courseTitle ?courseName &#125; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该查询包含三个数据集，一个是通过 <code>FROM &lt;URI&gt;</code> 指定，另外两个以 <code>FORM NAMED</code> 指定。在 <code>WHERE</code> 查询条件中，<code>GRAPH &lt;ex125.ttl&gt;</code> 说明下面一条三元组模式将仅在 <code>&lt;ex125.ttl&gt;</code> 中查找；如不指定 <code>GRAPH &lt;URI&gt;</code> ，则从 <code>FROM &lt;URI&gt;</code> 中查找。</p><div class="note info">            <p class="note-title"><code>FROM &lt;URI&gt;</code> V.S. <code>FROM NAMED</code></p><ul><li><p>在使用 <code>FROM &lt;URI&gt;</code> 的方式指明数据集时，这些数据都会添加到一个默认的 RDF 图（default graph）中以供查询；</p></li><li><p>而 <code>FROM NAMED</code> 则不会将数据集加入到默认的 RDF 图中，需要在 <code>WHERE</code> 额外声明 <code>GRAPH &lt;URI&gt;</code> 才能仅在该 Named Graph 中查询数据。</p></li></ul>          </div><h2 id="GRAPH"><a href="#GRAPH" class="headerlink" title="GRAPH"></a>GRAPH</h2><p><code>GRAPH</code> 常与 <code>FROM NAMED</code> 配合使用，用于指明下一个模式只在 <code>GRAPH</code> 指定的数据集中查询（例子见本文 <code>FROM NAMED</code> 部分）。</p><h2 id="OPTIONAL"><a href="#OPTIONAL" class="headerlink" title="OPTIONAL"></a>OPTIONAL</h2><p>关键词 <code>OPTIONAL</code> 的含义是，<strong>如果存在的话，请返回该值，否则返回为空</strong>。例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># filename: ex057.rq</span><br><span class="line"></span><br><span class="line">PREFIX ab: &lt;http:&#x2F;&#x2F;learningsparql.com&#x2F;ns&#x2F;addressbook#&gt; </span><br><span class="line"></span><br><span class="line">SELECT ?first ?last ?workTel</span><br><span class="line">WHERE</span><br><span class="line">&#123;</span><br><span class="line">  ?s ab:firstName ?first ;</span><br><span class="line">     ab:lastName ?last .</span><br><span class="line">  OPTIONAL </span><br><span class="line">  &#123; ?s ab:workTel ?workTel . &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述脚本查询了一个通讯录，无论其是否有工作电话这个属性（如果没有，将该值置空即可），都返回其名、姓和工作电话的值。</p><p><strong>一个查询脚本可有多个 <code>OPTIONAL</code> 子句，并且一个 <code>OPTIONAL</code> 子句可有多个匹配模式</strong>。值得注意的是，查询处理将<strong>先后</strong>处理 <code>OPTIONAL</code> 子句中的条件。利用这个特性，我们可以完成下列查询：优先返回每个人的昵称，如果没有则返回其名。查询脚本示例如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># filename: ex063.rq</span><br><span class="line"></span><br><span class="line">PREFIX ab: &lt;http:&#x2F;&#x2F;learningsparql.com&#x2F;ns&#x2F;addressbook#&gt; </span><br><span class="line"></span><br><span class="line">SELECT ?first ?last</span><br><span class="line">WHERE</span><br><span class="line">&#123;</span><br><span class="line">  ?s ab:lastName ?last . </span><br><span class="line">  OPTIONAL &#123; ?s ab:nick ?first . &#125;</span><br><span class="line">  OPTIONAL &#123; ?s ab:firstName ?first . &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="FILTER-、-FILTER-NOT-EXISTS-及-MINUS"><a href="#FILTER-、-FILTER-NOT-EXISTS-及-MINUS" class="headerlink" title="FILTER 、 FILTER NOT EXISTS 及 MINUS"></a>FILTER 、 FILTER NOT EXISTS 及 MINUS</h2><ul><li><code>FILTER</code></li></ul><p><code>FILTER</code> 意为筛选，顾名思义，其功能就是筛选出满足某种条件的数据。<code>FILTER</code> 接受一个结果为布尔量的输入：如果该布尔量为真，则选出；否则，不选。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># filename: ex105.rq</span><br><span class="line"></span><br><span class="line">PREFIX dm: &lt;http:&#x2F;&#x2F;learningsparql.com&#x2F;ns&#x2F;demo#&gt; </span><br><span class="line"></span><br><span class="line">SELECT ?s ?cost</span><br><span class="line">WHERE</span><br><span class="line">&#123;</span><br><span class="line">  ?s dm:cost ?cost .</span><br><span class="line">  FILTER (?cost &lt; 10)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述查询就筛选出花费小于 10 的项目和具体花费。</p><ul><li><code>FILTER NOT EXISTS</code></li></ul><p><code>FILTER NOT EXISTS</code> 是 <code>FILTER</code> 的一种否定表达。例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># filename: ex067.rq</span><br><span class="line"></span><br><span class="line">PREFIX ab: &lt;http:&#x2F;&#x2F;learningsparql.com&#x2F;ns&#x2F;addressbook#&gt; </span><br><span class="line"></span><br><span class="line">SELECT ?first ?last </span><br><span class="line"></span><br><span class="line">WHERE</span><br><span class="line">&#123;</span><br><span class="line">  ?s ab:firstName ?first ;</span><br><span class="line">     ab:lastName ?last .</span><br><span class="line">  FILTER NOT EXISTS &#123; ?s ab:workTel ?workNum &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述查询就筛选出没有工作电话的人的名和姓。</p><ul><li><code>MINUS</code></li></ul><p><code>MINUS</code> 表示在查询结果中减去满足某种模式的数据。那么，筛选出没有工作电话的人的名和姓也可以通过 <code>MINUS</code>  实现：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># filename: ex068.rq</span><br><span class="line"></span><br><span class="line">PREFIX ab: &lt;http:&#x2F;&#x2F;learningsparql.com&#x2F;ns&#x2F;addressbook#&gt; </span><br><span class="line"></span><br><span class="line">SELECT ?first ?last </span><br><span class="line"></span><br><span class="line">WHERE</span><br><span class="line">&#123;</span><br><span class="line">  ?s ab:firstName ?first ;</span><br><span class="line">     ab:lastName ?last .</span><br><span class="line">  MINUS &#123; ?s ab:workTel ?workNum &#125;</span><br></pre></td></tr></table></figure><h2 id="UNION"><a href="#UNION" class="headerlink" title="UNION"></a>UNION</h2><p>通过 <code>UNION</code> 关键字，我们可以合并不同模式匹配到的结果。例如下列查询使用了 <code>UNION</code> 得到了会演奏萨克斯或者小号的人的名、姓和能够演奏的乐器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># filename: ex103.rq</span><br><span class="line"></span><br><span class="line">PREFIX ab: &lt;http:&#x2F;&#x2F;learningsparql.com&#x2F;ns&#x2F;addressbook#&gt;</span><br><span class="line"></span><br><span class="line">SELECT ?first ?last ?instrument </span><br><span class="line">WHERE</span><br><span class="line">&#123;</span><br><span class="line">    ?person ab:firstName ?first ;</span><br><span class="line">            ab:lastName ?last ;</span><br><span class="line">            ab:instrument ?instrument . </span><br><span class="line"></span><br><span class="line">    &#123; ?person ab:instrument &quot;sax&quot; . &#125;</span><br><span class="line"></span><br><span class="line">    UNION</span><br><span class="line"></span><br><span class="line">    &#123; ?person ab:instrument &quot;trumpet&quot; . &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="（NOT）IN"><a href="#（NOT）IN" class="headerlink" title="（NOT）IN"></a>（NOT）IN</h2><p><code>IN</code> 关键字用来判断指定变量是否在指定枚举集合中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># filename: ex109.rq</span><br><span class="line"></span><br><span class="line">PREFIX dm:  &lt;http:&#x2F;&#x2F;learningsparql.com&#x2F;ns&#x2F;demo#&gt;</span><br><span class="line">PREFIX db: &lt;http:&#x2F;&#x2F;dbpedia.org&#x2F;resource&#x2F;&gt;</span><br><span class="line"></span><br><span class="line">SELECT ?s ?cost ?location</span><br><span class="line">WHERE</span><br><span class="line">&#123;</span><br><span class="line">  ?s dm:location ?location ;</span><br><span class="line">     dm:cost ?cost . </span><br><span class="line">  FILTER (?location IN (db:Montreal, db:Lisbon)) . </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述 <code>FILTER</code> 过滤条件为：地点是否在蒙特利尔或者里斯本。如果在，则选出，否则不选。</p><p><code>NOT IN</code> 为 <code>IN</code> 的否定形式。</p><h2 id="LIMIT-及-OFFSET"><a href="#LIMIT-及-OFFSET" class="headerlink" title="LIMIT 及 OFFSET"></a>LIMIT 及 OFFSET</h2><ul><li><code>LIMIT</code></li></ul><p><code>LIMIT</code> 用于限定返回数据显示的数量：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># filename: ex116.rq</span><br><span class="line"></span><br><span class="line">PREFIX rdfs: &lt;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;01&#x2F;rdf-schema#&gt;</span><br><span class="line"></span><br><span class="line">SELECT ?label </span><br><span class="line">WHERE</span><br><span class="line">&#123; ?s rdfs:label ?label . &#125;</span><br><span class="line">LIMIT 2</span><br></pre></td></tr></table></figure><ul><li><code>OFFSET</code></li></ul><p><code>OFFSET</code> 用于指定数据在返回数据的偏移量（即<strong>显示第几个数据</strong>）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># filename: ex118.rq</span><br><span class="line"></span><br><span class="line">PREFIX rdfs: &lt;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;01&#x2F;rdf-schema#&gt;</span><br><span class="line"></span><br><span class="line">SELECT ?label </span><br><span class="line">WHERE</span><br><span class="line">&#123; ?s rdfs:label ?label . &#125;</span><br><span class="line">OFFSET 3</span><br></pre></td></tr></table></figure><h2 id="ORDER-BY-和-GROUP-BY-HAVING-lt-条件-gt"><a href="#ORDER-BY-和-GROUP-BY-HAVING-lt-条件-gt" class="headerlink" title="ORDER BY 和 GROUP BY [HAVING &lt;条件&gt;]"></a>ORDER BY 和 GROUP BY [HAVING &lt;条件&gt;]</h2><ul><li><code>ORDER BY</code></li></ul><p>关键词 <code>ORDER BY</code> 告诉查询处理器，按照指定变量对返回结果进行排序（默认升序，降序需指明 <code>DESC(?变量名)</code>）:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># filename: ex146.rq</span><br><span class="line"></span><br><span class="line">PREFIX e: &lt;http:&#x2F;&#x2F;learningsparql.com&#x2F;ns&#x2F;expenses#&gt;</span><br><span class="line"></span><br><span class="line">SELECT ?description ?date ?amount</span><br><span class="line">WHERE</span><br><span class="line">&#123;</span><br><span class="line">  ?meal e:description ?description ;</span><br><span class="line">        e:date ?date ;</span><br><span class="line">        e:amount ?amount . </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ORDER BY ?amount</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># filename: ex148.rq</span><br><span class="line"></span><br><span class="line">PREFIX e: &lt;http:&#x2F;&#x2F;learningsparql.com&#x2F;ns&#x2F;expenses#&gt;</span><br><span class="line"></span><br><span class="line">SELECT ?description ?date ?amount</span><br><span class="line">WHERE</span><br><span class="line">&#123;</span><br><span class="line">  ?meal e:description ?description ;</span><br><span class="line">        e:date ?date ;</span><br><span class="line">        e:amount ?amount . </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ORDER BY DESC(?amount)</span><br></pre></td></tr></table></figure><ul><li><code>GROUP BY</code></li></ul><p><code>GROUP BY</code> 会将返回结果按照指定规则分组，可用 <code>HAVING &lt;条件&gt;</code> 做进一步条件限定：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># filename: ex164.rq</span><br><span class="line"></span><br><span class="line">PREFIX e: &lt;http:&#x2F;&#x2F;learningsparql.com&#x2F;ns&#x2F;expenses#&gt; </span><br><span class="line"></span><br><span class="line">SELECT ?description (SUM(?amount) AS ?mealTotal)</span><br><span class="line">WHERE</span><br><span class="line">&#123;</span><br><span class="line">  ?meal e:description ?description ;</span><br><span class="line">        e:amount ?amount . </span><br><span class="line">&#125;</span><br><span class="line">GROUP BY ?description</span><br><span class="line">HAVING (SUM(?amount) &gt; 20)</span><br></pre></td></tr></table></figure><h2 id="AS"><a href="#AS" class="headerlink" title="AS"></a>AS</h2><p><code>AS</code> 用于给数据起名字，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># filename: ex139.rq</span><br><span class="line"></span><br><span class="line">PREFIX e: &lt;http:&#x2F;&#x2F;learningsparql.com&#x2F;ns&#x2F;expenses#&gt; </span><br><span class="line"></span><br><span class="line">SELECT ?description ?amount ((?amount * .2) AS ?tip) </span><br><span class="line">       ((?amount + ?tip) AS ?total)</span><br><span class="line">WHERE</span><br><span class="line">&#123;</span><br><span class="line">  ?meal e:description ?description ;</span><br><span class="line">        e:amount ?amount . </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="BIND"><a href="#BIND" class="headerlink" title="BIND"></a>BIND</h2><p><code>BIND</code> 用于给变量赋值。常见用法为 <code>BIND (数字计算 AS ?变量名)</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 来源：https:&#x2F;&#x2F;www.w3.org&#x2F;TR&#x2F;sparql11-query&#x2F;#bind</span><br><span class="line"></span><br><span class="line">PREFIX  dc:  &lt;http:&#x2F;&#x2F;purl.org&#x2F;dc&#x2F;elements&#x2F;1.1&#x2F;&gt;</span><br><span class="line">PREFIX  ns:  &lt;http:&#x2F;&#x2F;example.org&#x2F;ns#&gt;</span><br><span class="line"></span><br><span class="line">SELECT  ?title ?price</span><br><span class="line">&#123;  &#123; ?x ns:price ?p .</span><br><span class="line">     ?x ns:discount ?discount</span><br><span class="line">     BIND (?p*(1-?discount) AS ?price)</span><br><span class="line">   &#125;</span><br><span class="line">   &#123;?x dc:title ?title . &#125;</span><br><span class="line">   FILTER(?price &lt; 20)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="VALUES"><a href="#VALUES" class="headerlink" title="VALUES"></a>VALUES</h2><p><code>VALUES</code> 提供了更方便的过滤数据的方式。其一般格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">VALUES(?变量名1 [?变量名2 ...])</span><br><span class="line">&#123;</span><br><span class="line">    （变量名1应取值 [?变量名2应取值 ...]）</span><br><span class="line">    （变量名1应取值 [?变量名2应取值 ...]）</span><br><span class="line">     ...</span><br><span class="line">&#125;</span><br><span class="line"># 当条件仅有一个变量时，小括号可以省略</span><br></pre></td></tr></table></figure><p>将 <code>VALUES</code> 子句放在 <code>WHERE</code> 条件中，就可以筛选出变量名满足指定取值的数据：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># filename: ex498.rq</span><br><span class="line"></span><br><span class="line">PREFIX e: &lt;http:&#x2F;&#x2F;learningsparql.com&#x2F;ns&#x2F;expenses#&gt; </span><br><span class="line"></span><br><span class="line">SELECT ?description ?date ?amount</span><br><span class="line">WHERE</span><br><span class="line">&#123;</span><br><span class="line">  ?meal e:description ?description ;</span><br><span class="line">        e:date ?date ;</span><br><span class="line">        e:amount ?amount . </span><br><span class="line"></span><br><span class="line">  VALUES (?date ?description) &#123;</span><br><span class="line">         (&quot;2011-10-15&quot; &quot;lunch&quot;) </span><br><span class="line">         (&quot;2011-10-16&quot; &quot;dinner&quot;)</span><br><span class="line">  &#125; </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述查询则会从返回结果中过滤出 <strong>2011-10-15 的午饭</strong>和 <strong>2011-10-16 的晚饭</strong>的相关数据。</p><h2 id="UNDEF"><a href="#UNDEF" class="headerlink" title="UNDEF"></a>UNDEF</h2><p><code>UNDEF</code> 关键词代表任意值。下面一个例子返回结果满足这样的条件：任意时间下满足 <code>?description</code> 为 <code>&quot;lunch&quot;</code>的数据，以及任意 <code>?description</code> 下时间为 <code>&quot;2011-10-16&quot;</code> 的数据。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># filename: ex500.rq</span><br><span class="line"></span><br><span class="line">PREFIX e: &lt;http:&#x2F;&#x2F;learningsparql.com&#x2F;ns&#x2F;expenses#&gt; </span><br><span class="line"></span><br><span class="line">SELECT ?description ?date ?amount</span><br><span class="line">WHERE</span><br><span class="line">&#123;</span><br><span class="line">  ?meal e:description ?description ;</span><br><span class="line">        e:date ?date ;</span><br><span class="line">        e:amount ?amount . </span><br><span class="line"></span><br><span class="line">  VALUES (?date ?description) &#123;</span><br><span class="line">         (UNDEF &quot;lunch&quot;) </span><br><span class="line">         (&quot;2011-10-16&quot; UNDEF) </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="SERVICE"><a href="#SERVICE" class="headerlink" title="SERVICE"></a>SERVICE</h2><p>要查询远端的数据，一种方式是直接在 <code>FROM</code> 关键字之后指明 RDF 文件 URI：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># filename: ex166.rq</span><br><span class="line"></span><br><span class="line">PREFIX dc: &lt;http:&#x2F;&#x2F;purl.org&#x2F;dc&#x2F;elements&#x2F;1.1&#x2F;&gt;</span><br><span class="line"></span><br><span class="line">SELECT ?title</span><br><span class="line">FROM &lt;http:&#x2F;&#x2F;dig.csail.mit.edu&#x2F;2008&#x2F;webdav&#x2F;timbl&#x2F;foaf.rdf&gt;</span><br><span class="line">WHERE &#123; ?s dc:title ?title .&#125;</span><br></pre></td></tr></table></figure><p>除了 <code>FROM &lt;URI&gt;</code> 查询远端的 RDF 序列化文件，我们还可以用 <code>SERVICE</code> 关键字访问远端的数据：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># filename: ex167.rq</span><br><span class="line"></span><br><span class="line">PREFIX cat:     &lt;http:&#x2F;&#x2F;dbpedia.org&#x2F;resource&#x2F;Category:&gt;</span><br><span class="line">PREFIX skos:    &lt;http:&#x2F;&#x2F;www.w3.org&#x2F;2004&#x2F;02&#x2F;skos&#x2F;core#&gt;</span><br><span class="line">PREFIX rdfs:    &lt;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;01&#x2F;rdf-schema#&gt;</span><br><span class="line">PREFIX owl:     &lt;http:&#x2F;&#x2F;www.w3.org&#x2F;2002&#x2F;07&#x2F;owl#&gt;</span><br><span class="line">PREFIX foaf:    &lt;http:&#x2F;&#x2F;xmlns.com&#x2F;foaf&#x2F;0.1&#x2F;&gt;</span><br><span class="line"></span><br><span class="line">SELECT ?p ?o </span><br><span class="line">WHERE</span><br><span class="line">&#123;</span><br><span class="line">  SERVICE &lt;http:&#x2F;&#x2F;DBpedia.org&#x2F;sparql&gt;</span><br><span class="line">  &#123; SELECT ?p ?o </span><br><span class="line">    WHERE &#123; &lt;http:&#x2F;&#x2F;dbpedia.org&#x2F;resource&#x2F;Joseph_Hocking&gt; ?p ?o . &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># filename: ex170.rq</span><br><span class="line"></span><br><span class="line">PREFIX rdf:  &lt;http:&#x2F;&#x2F;www.w3.org&#x2F;1999&#x2F;02&#x2F;22-rdf-syntax-ns#&gt;</span><br><span class="line">PREFIX rdfs: &lt;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;01&#x2F;rdf-schema#&gt;</span><br><span class="line">PREFIX gp:   &lt;http:&#x2F;&#x2F;wifo5-04.informatik.uni-mannheim.de&#x2F;gutendata&#x2F;resource&#x2F;people&#x2F;&gt;</span><br><span class="line"></span><br><span class="line">SELECT ?p ?o </span><br><span class="line">WHERE</span><br><span class="line">&#123; </span><br><span class="line">  SERVICE &lt;http:&#x2F;&#x2F;wifo5-04.informatik.uni-mannheim.de&#x2F;gutendata&#x2F;sparql&gt;</span><br><span class="line">  &#123; gp:Hocking_Joseph ?p ?o . &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>亦可从多个远端数据源联合查询：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># filename: ex172.rq</span><br><span class="line"></span><br><span class="line">PREFIX cat:  &lt;http:&#x2F;&#x2F;dbpedia.org&#x2F;resource&#x2F;Category:&gt;</span><br><span class="line">PREFIX foaf: &lt;http:&#x2F;&#x2F;xmlns.com&#x2F;foaf&#x2F;0.1&#x2F;&gt;</span><br><span class="line">PREFIX gp:   &lt;http:&#x2F;&#x2F;wifo5-04.informatik.uni-mannheim.de&#x2F;gutendata&#x2F;resource&#x2F;people&#x2F;&gt;</span><br><span class="line">PREFIX owl:  &lt;http:&#x2F;&#x2F;www.w3.org&#x2F;2002&#x2F;07&#x2F;owl#&gt;</span><br><span class="line">PREFIX rdf:  &lt;http:&#x2F;&#x2F;www.w3.org&#x2F;1999&#x2F;02&#x2F;22-rdf-syntax-ns#&gt;</span><br><span class="line">PREFIX rdfs: &lt;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;01&#x2F;rdf-schema#&gt;</span><br><span class="line">PREFIX skos: &lt;http:&#x2F;&#x2F;www.w3.org&#x2F;2004&#x2F;02&#x2F;skos&#x2F;core#&gt;</span><br><span class="line"></span><br><span class="line">SELECT ?dbpProperty ?dbpValue ?gutenProperty ?gutenValue </span><br><span class="line">WHERE</span><br><span class="line">&#123;</span><br><span class="line">  SERVICE &lt;http:&#x2F;&#x2F;DBpedia.org&#x2F;sparql&gt;</span><br><span class="line">  &#123;</span><br><span class="line">    &lt;http:&#x2F;&#x2F;dbpedia.org&#x2F;resource&#x2F;Joseph_Hocking&gt; ?dbpProperty ?dbpValue .</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  SERVICE &lt;http:&#x2F;&#x2F;wifo5-04.informatik.uni-mannheim.de&#x2F;gutendata&#x2F;sparql&gt;</span><br><span class="line">  &#123;</span><br><span class="line">    gp:Hocking_Joseph ?gutenProperty ?gutenValue . </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info">            <p>注意：由于<code>SERVICE</code> 方式的远端查询在服务器端执行， <code>SERVICE</code> 后的 URI 应是远端 SPARQL 执行入口。</p>          </div><h1 id="常见函数"><a href="#常见函数" class="headerlink" title="常见函数"></a>常见函数</h1><h2 id="MAX-、MIN-、AVG-、SUM-、COUNT"><a href="#MAX-、MIN-、AVG-、SUM-、COUNT" class="headerlink" title="MAX()、MIN()、AVG()、SUM()、COUNT()"></a>MAX()、MIN()、AVG()、SUM()、COUNT()</h2><p>这些聚集函数与 SQL 中类似，不再赘述。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>本文主要介绍了 SPARQL 语言的功能和基本语法，要点如下：</p><ul><li>在 SPARQL 语句中，通常以 <code>？变量名</code> 表示变量；而常量一般为字符串、数字及 URI，其中 URI 由尖括号（&lt; &gt;）包裹。</li><li>SPARQL 中使用了多种标点符号，具有丰富的含义。</li><li>SPARQL 支持多种关键词查询数据。这些关键词包括 <code>SELECT</code> 、<code>CONSTRUCT</code> 、<code>DESCRIBE</code> 、 <code>ASK</code> 。</li><li>SPARQL 提供了很多关键字，能够表达复杂的查询任务。</li><li>SPARQL 支持许多强大的函数，提高了其易用性。</li></ul><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li>Bob DuCharme. <a href="http://learningsparql.com/" target="_blank" rel="noopener">Learning SPARQL: querying and updating with SPARQL 1.1</a></li><li><a href="https://www.w3.org/TR/sparql11-query/" target="_blank" rel="noopener">SPARQL 1.1 Query Language W3C Recommendation</a>.</li></ul><h1 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h1><ul><li><a href="https://www.dataversity.net/introduction-to-sparql/" target="_blank" rel="noopener">Introduction to: SPARQL</a></li></ul></div><script src="https://cdn.bootcdn.net/ajax/libs/lightgallery-js/1.2.0/js/lightgallery.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-thumbnail.js@1.2.0/dist/lg-thumbnail.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-zoom.js@1.2.0/dist/lg-zoom.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-autoplay.js@1.2.0/dist/lg-autoplay.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-fullscreen.js@1.2.0/dist/lg-fullscreen.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-pager.js@1.0.0/dist/lg-pager.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    <summary type="html">
    
      本文将简要介绍 SPARQL 的基本语法
    
    </summary>
    
    
      <category term="研究" scheme="https://cosmosning.github.io/categories/%E7%A0%94%E7%A9%B6/"/>
    
    
      <category term="SPARQL" scheme="https://cosmosning.github.io/tags/SPARQL/"/>
    
      <category term="图数据库查询语言" scheme="https://cosmosning.github.io/tags/%E5%9B%BE%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9F%A5%E8%AF%A2%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>RDF简介</title>
    <link href="https://cosmosning.github.io/2020/07/21/intro-to-rdf/"/>
    <id>https://cosmosning.github.io/2020/07/21/intro-to-rdf/</id>
    
    
    <author>
    <name>CosmosNing</name>
    <uri>https://cosmosning.github.io/about</uri>
    </author>
    
    
    <published>2020-07-21T13:44:26.000Z</published>
    <updated>2020-08-20T16:46:12.068Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.bootcdn.net/ajax/libs/lightgallery-js/1.2.0/css/lightgallery.min.css" /><div class=".article-gallery"<blockquote><p>最近在学习图数据库的基础知识。本文将参考 《<a href="http://learningsparql.com/" target="_blank" rel="noopener">Learning SPARQL: querying and updating with SPARQL 1.1</a>》这本书，简单介绍图数据的数据模型 RDF。主要内容如下：</p><ol><li>RDF 简介</li><li>RDF 三元组</li><li>RDF 存储格式</li><li>RDF 其他概念</li></ol></blockquote><h1 id="RDF-简介"><a href="#RDF-简介" class="headerlink" title="RDF 简介"></a>RDF 简介</h1><p>RDF 全称 Resource Description Framework（资源描述框架），是一种数据模型，它提供了一种独特的结构来存储数据文件。RDF 独特的结构使其在 Semantic Web、图数据库等领域应用十分广泛。</p><h1 id="基本格式"><a href="#基本格式" class="headerlink" title="基本格式"></a>基本格式</h1><p>在 RDF 中，每一个基本单元可由一个三元组 $(s,\ p,\ o)$ 构成，其中 $s$ 代表 subject（主语），$p$ 代表 predicate（谓语）， $o$ 代表 object（宾语）。每一个三元组都可以陈述这样一个事实：一个由 $s$ 唯一标记的资源实体拥有 $p$ 属性，其属性值为 $o$ 。</p><p>每一个三元组都可以通过图（graph）来表示，具体如下图：</p><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/07/triple.png" title="三元组图示" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/07/triple.png" alt="三元组图示"></a></p><h1 id="存储方式及其结构"><a href="#存储方式及其结构" class="headerlink" title="存储方式及其结构"></a>存储方式及其结构</h1><h2 id="文件存储（序列化）"><a href="#文件存储（序列化）" class="headerlink" title="文件存储（序列化）"></a>文件存储（序列化）</h2><p>当数据以文件的形式存储时，RDF 有如下几种序列化格式</p><h3 id="RDF-XML"><a href="#RDF-XML" class="headerlink" title="RDF/XML"></a>RDF/XML</h3><p>RDF/XML 是最古老的格式，最初出现在 1999 年 RDF 规格说明中。顾名思义，这种方式采取了与 XML 类似的结构存储数据单元（也就是一个三元组）。一个简单的例子如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 本例来自书籍《Learning SPARQL》，详见参考资料（下同） --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Being XML, RDF/XML uses regular XML comment delimiters. --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- filename: ex029.rdf --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">rdf:RDF</span> <span class="attr">xmlns:rdf</span>=<span class="string">"http://www.w3.org/1999/02/22-rdf-syntax-ns#"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:dc</span>=<span class="string">"http://purl.org/dc/elements/1.1/"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:v</span>=<span class="string">"http://www.w3.org/2006/vcard/"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">rdf:Description</span> <span class="attr">rdf:about</span>=<span class="string">"urn:isbn:006251587X"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dc:title</span>&gt;</span>Weaving the Web<span class="tag">&lt;/<span class="name">dc:title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dc:creator</span> <span class="attr">rdf:resource</span>=<span class="string">"http://www.w3.org/People/Berners-Lee/card#i"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">rdf:Description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">rdf:Description</span> <span class="attr">rdf:about</span>=<span class="string">"http://www.w3.org/People/Berners-Lee/card#i"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">v:title</span>&gt;</span>Director<span class="tag">&lt;/<span class="name">v:title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">rdf:Description</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">rdf:RDF</span>&gt;</span></span><br></pre></td></tr></table></figure><p>通过 RDF/XML 格式存储时，其文件后缀名为 <code>.rdf</code>。文件中，所有数据由<code>&lt;rdf:RDF&gt;</code> 和 <code>&lt;/rdf:RDF&gt;</code> 包裹，并且在 <code>&lt;rdf:RDF&gt;</code> 属性中定义了前缀（prefix）。</p><div class="note info">            <p class="note-title">前缀 prefix</p><p>RDF 是在 Semantic Web 的背景下提出的，而 Semantic Web 要求在全网下能够唯一标识一个资源，故其采用了 <code>URI</code> 作为资源的唯一标记。<code>URI</code> 一般较为冗长，而定义前缀 ，可以减少数据单元中冗长的书写，从而突出数据的重点；当处于不同的前缀中时，数据资源也不会因同名而相互冲突。由于第二点的优势， 前缀又被称作名称空间（namespace）。</p>          </div><p>每一个数据单元的主语为 <code>rdf:Description</code> 中 <code>rdf:about</code> 属性的值；<code>rdf:Description</code> 子结点标签则代表了数据单元的谓语；宾语可以是 <code>rdf:Description</code> 子结点标签中的纯文字，也可以是子结点标签 <code>rdf:resource</code> 属性所设定的 URI 值。</p><p>由于 XML 受限的表达性、RDF/XML 数据文件解析困难等原因，RDF/XML 并没有流行开来。</p><h3 id="N3"><a href="#N3" class="headerlink" title="N3"></a>N3</h3><p>N3 是 Notation 3 的缩写，它是 RDF 序列化的另一种格式。这种格式继承了 RDF/XML 的优势，尝试改进并弥补了 RDF/XML 部分不足。下面是一个用 N3 格式存储的 RDF 数据：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># The hash symbol is the comment delimiter in n3. </span><br><span class="line"># filename: ex031.n3</span><br><span class="line"></span><br><span class="line">@prefix dc: <span class="tag">&lt;<span class="name">http:</span>//<span class="attr">purl.org</span>/<span class="attr">dc</span>/<span class="attr">elements</span>/<span class="attr">1.1</span>/&gt;</span> .</span><br><span class="line">@prefix v:  <span class="tag">&lt;<span class="name">http:</span>//<span class="attr">www.w3.org</span>/<span class="attr">2006</span>/<span class="attr">vcard</span>/&gt;</span> .</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">http:</span>//<span class="attr">www.w3.org</span>/<span class="attr">People</span>/<span class="attr">Berners-Lee</span>/<span class="attr">card</span>#<span class="attr">i</span>&gt;</span></span><br><span class="line">      v:title "Director" .</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">urn:isbn:006251587X</span>&gt;</span></span><br><span class="line">      dc:creator <span class="tag">&lt;<span class="name">http:</span>//<span class="attr">www.w3.org</span>/<span class="attr">People</span>/<span class="attr">Berners-Lee</span>/<span class="attr">card</span>#<span class="attr">i</span>&gt;</span> ;</span><br><span class="line">      dc:title "Weaving the Web" .</span><br></pre></td></tr></table></figure><p>通过 N3 格式存储时，其文件后缀名为 <code>.n3</code>。与 RDF/XML 格式类似，N3 使用三元组来声明前缀。这个三元组中， <code>@prefix</code> 为主语，<code>&lt;prefix name&gt;:</code> 为谓语，<code>&lt;uri&gt;</code> 则为宾语，并且用英文句号作为三元组的结束标记。在声明完前缀之后，便可以接着以三元组的形式存储数据。例如，第 8 至 9 行为一个三元组，其主语为 <code>&lt;http://www.w3.org/People/Berners-Lee/card#i&gt;</code>，谓语为 <code>v:title</code>，宾语为 <code>&quot;Director&quot;</code>。该三元组说明，由主语标识的资源（此例为人）的头衔为 Director。第 11 至 13 行为第 2 、3 个三元组，分别表示由 <code>&lt;urn:isbn:006251587X&gt;</code> 所标识的书籍的作者是 <code>&lt;http://www.w3.org/People/Berners-Lee/card#i&gt;</code> 这个人；这本书的书名为 <code>&quot;Weaving the Web&quot;</code> 。</p><div class="note info">            <p class="note-title">N3中的 <code>.</code>、<code>;</code>、<code>,</code></p><ul><li><code>.</code> 代表三元组的结束</li><li><code>;</code> 代表下一个三元组与当前三元组拥有<strong>相同的主语</strong></li><li><code>,</code> 代表下一个三元组与当前三元组拥有<strong>相同的主语和谓语</strong></li></ul>          </div><h3 id="Turtle"><a href="#Turtle" class="headerlink" title="Turtle"></a>Turtle</h3><p>Turtle 是另一种 RDF 序列化的格式，并且使用十分广泛。下面是一个例子：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># filename: ex002.ttl</span><br><span class="line"></span><br><span class="line">@prefix ab: <span class="tag">&lt;<span class="name">http:</span>//<span class="attr">learningsparql.com</span>/<span class="attr">ns</span>/<span class="attr">addressbook</span>#&gt;</span> .</span><br><span class="line"></span><br><span class="line">ab:richard ab:homeTel "(229) 276-5135" . </span><br><span class="line">ab:richard ab:email   "richard49@hotmail.com" . </span><br><span class="line"></span><br><span class="line">ab:cindy ab:homeTel "(245) 646-5488" . </span><br><span class="line">ab:cindy ab:email   "cindym@gmail.com" . </span><br><span class="line"></span><br><span class="line">ab:craig ab:homeTel "(194) 966-1505" . </span><br><span class="line">ab:craig ab:email   "craigellis@yahoo.com" . </span><br><span class="line">ab:craig ab:email   "c.ellis@usairwaysgroup.com" .</span><br></pre></td></tr></table></figure><p>Turtle 格式与 N3 很类似，这里不再介绍。</p><h3 id="RDFa"><a href="#RDFa" class="headerlink" title="RDFa"></a>RDFa</h3><p>RDFa 是另一个受到用户们喜爱的 RDF 序列化格式。RDFa 不仅仅能以 XML 的格式存储，更强大的是其也能嵌入到 HTML 文件中。这使得 SPARQL 等查询工具能够轻松地从中获得以三元组形式存储的数据。下面展示了一个具体的<a href="https://www.dataversity.net/introduction-to-rdfa-2/" target="_blank" rel="noopener">例子</a>：</p><p>如果你有一个 HTML 文件，其中有下面一段代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">My name is Juan Sequeda. Please visit my homepage!</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果将 RDFa 嵌入其中，那么可以这么写：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">vocab</span>=<span class="string">"http://schema.org/"</span> <span class="attr">typeof</span>=<span class="string">"Person"</span>&gt;</span></span><br><span class="line">My name is</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">property</span>=<span class="string">"name"</span>&gt;</span>Juan Sequeda<span class="tag">&lt;/<span class="name">span</span>&gt;</span>.</span><br><span class="line">Please visit</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">property</span>=<span class="string">"url"</span> <span class="attr">href</span>=<span class="string">"http://www.juansequeda.org/"</span>&gt;</span>my homepage<span class="tag">&lt;/<span class="name">a</span>&gt;</span>.</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="数据库存储"><a href="#数据库存储" class="headerlink" title="数据库存储"></a>数据库存储</h2><p>除了文件序列化存储方式，RDF 数据亦可存储在数据库中。数据库中 RDF 的存储结构通常由数据库管理系统决定。这里先搁置一边。</p><h1 id="其他概念"><a href="#其他概念" class="headerlink" title="其他概念"></a>其他概念</h1><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p>根据上一节的例子，我们发现 RDF 中主要有两类数据，一类为 URI ，另一类为字符串。尽管很多处理 RDF 数据的工具能够根据字符串数据推测数据类型，但仍然建议你在数据中指明各个数据的类型。</p><div class="note info">            <p class="note-title">没有双引号的字符串的类型推断</p><p>当你省略了字符串的双引号，那么处理 RDF 数据的工具将认为该数据类型要么是布尔量（真或假），要么是数字。</p>          </div><p>在 Turtle 格式中，在数据后面加上两个脱字符（<code>^</code>），并指明标定数据类型的 URI（可使用前缀缩写表示，也可以使用完整的 URI 表示），就可以手动指定数据类型。具体的例子如下（第 7 至 10 行）：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># filename: ex033.ttl</span><br><span class="line"></span><br><span class="line">@prefix xsd: <span class="tag">&lt;<span class="name">http:</span>//<span class="attr">www.w3.org</span>/<span class="attr">2001</span>/<span class="attr">XMLSchema</span>#&gt;</span> .</span><br><span class="line">@prefix d:   <span class="tag">&lt;<span class="name">http:</span>//<span class="attr">learningsparql.com</span>/<span class="attr">ns</span>/<span class="attr">data</span>#&gt;</span> .</span><br><span class="line">@prefix dm:  <span class="tag">&lt;<span class="name">http:</span>//<span class="attr">learningsparql.com</span>/<span class="attr">ns</span>/<span class="attr">demo</span>#&gt;</span> .</span><br><span class="line"></span><br><span class="line">d:item342 dm:shipped     "2011-02-14"^^<span class="tag">&lt;<span class="name">http:</span>//<span class="attr">www.w3.org</span>/<span class="attr">2001</span>/<span class="attr">XMLSchema</span>#<span class="attr">date</span>&gt;</span> . </span><br><span class="line">d:item342 dm:quantity    "4"^^xsd:integer . </span><br><span class="line">d:item342 dm:invoiced    "false"^^xsd:boolean . </span><br><span class="line">d:item342 dm:costPerItem "3.50"^^xsd:decimal .</span><br></pre></td></tr></table></figure><p>在 RDF/XML 格式中，数据类型由数据标签中 <code>rdf:datatype</code> 属性值所确定（第 8 至 15 行）：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- filename: ex035.rdf --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">rdf:RDF</span> <span class="attr">xmlns:rdf</span>=<span class="string">"http://www.w3.org/1999/02/22-rdf-syntax-ns#"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:dm</span>=<span class="string">"http://learningsparql.com/ns/demo#"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsd</span>=<span class="string">"http://www.w3.org/2001/XMLSchema#"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">rdf:Description</span> <span class="attr">rdf:about</span>=<span class="string">"http://learningsparql.com/ns/demo#item342"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dm:shipped</span> </span></span><br><span class="line"><span class="tag">     <span class="attr">rdf:datatype</span>=<span class="string">"http://www.w3.org/2001/XMLSchema#date"</span>&gt;</span>2011-02-14<span class="tag">&lt;/<span class="name">dm:shipped</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dm:quantity</span> </span></span><br><span class="line"><span class="tag">     <span class="attr">rdf:datatype</span>=<span class="string">"http://www.w3.org/2001/XMLSchema#integer"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">dm:quantity</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dm:invoiced</span> </span></span><br><span class="line"><span class="tag">     <span class="attr">rdf:datatype</span>=<span class="string">"http://www.w3.org/2001/XMLSchema#boolean"</span>&gt;</span>false<span class="tag">&lt;/<span class="name">dm:invoiced</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dm:costPerItem</span> </span></span><br><span class="line"><span class="tag">     <span class="attr">rdf:datatype</span>=<span class="string">"http://www.w3.org/2001/XMLSchema#decimal"</span>&gt;</span>3.50<span class="tag">&lt;/<span class="name">dm:costPerItem</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">rdf:Description</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">rdf:RDF</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="语言标记、标签"><a href="#语言标记、标签" class="headerlink" title="语言标记、标签"></a>语言标记、标签</h2><h3 id="lang"><a href="#lang" class="headerlink" title="@lang"></a>@lang</h3><p>RDF 支持国际化，即对于同一个数据，有针对不同语言的不同表示。其一般格式为<code>数据@语言缩写</code>（语言缩写参考了 ISO 639 以及 ISO 3166-1）。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># filename: ex037.ttl</span><br><span class="line"></span><br><span class="line">@prefix :     <span class="tag">&lt;<span class="name">http:</span>//<span class="attr">www.learningsparql.com</span>/<span class="attr">ns</span>/<span class="attr">demo</span>#&gt;</span> . </span><br><span class="line">@prefix rdfs: <span class="tag">&lt;<span class="name">http:</span>//<span class="attr">www.w3.org</span>/<span class="attr">2000</span>/<span class="attr">01</span>/<span class="attr">rdf-schema</span>#&gt;</span> .</span><br><span class="line"></span><br><span class="line">:sideDish42 rdfs:label "french fries"@en-US . </span><br><span class="line">:sideDish42 rdfs:label "chips"@en-GB . </span><br><span class="line"></span><br><span class="line">:sideDish43 rdfs:label "chips"@en-US . </span><br><span class="line">:sideDish43 rdfs:label "crisps"@en-GB .</span><br></pre></td></tr></table></figure><h3 id="rdfs-label、rdfs-comment"><a href="#rdfs-label、rdfs-comment" class="headerlink" title="rdfs:label、rdfs:comment"></a>rdfs:label、rdfs:comment</h3><p><code>rdfs:label</code>、<code>rdfs:comment</code> 是 RDF 中非常重要的两个属性名。<code>rdfs:label</code> 通常用来以方便人阅读的名称指代资源，<code>rdfs:comment</code> 通常用来更细节地描述资源。这两个属性值会加深我们对相关资源的理解。</p><div class="note info">            <p>P.S. 在 W3C SKOS 标准下，有两个相关的属性，分别是 <code>skos:prefLabel</code>（代表偏好标签） 和 <code>skos:altLabel</code>（代表替代标签）。</p>          </div><h2 id="空结点及其作用"><a href="#空结点及其作用" class="headerlink" title="空结点及其作用"></a>空结点及其作用</h2><p>在实际情况下，有很多数据是复合数据，即该数据可以分解为更小的数据项（小数据项并不可再分）。例如，地址信息就可以分解为国家、省份、城市、区县、街道、邮编等数据项。那么，如何在 RDF 中表示这样的数据呢？这就需要引入一个独特的结点——空结点。</p><p>具体的，空结点将作为联系复合数据属性与各个小数据项之间的桥梁：一是作为复合数据属性（谓语）的属性值（宾语），二是作为小数据项谓语的主语。举个书上的例子你就能理解了（其中 <code>_:b1</code> 为空结点）：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># filename: ex041.ttl</span><br><span class="line"></span><br><span class="line">@prefix ab: <span class="tag">&lt;<span class="name">http:</span>//<span class="attr">learningsparql.com</span>/<span class="attr">ns</span>/<span class="attr">addressbook</span>#&gt;</span> .</span><br><span class="line"></span><br><span class="line">ab:i0432 ab:firstName    "Richard" ;</span><br><span class="line">        ab:lastName      "Mutt" ;</span><br><span class="line">        ab:homeTel       "(229) 276-5135" ;</span><br><span class="line">        ab:email         "richard49@hotmail.com" ;</span><br><span class="line">        ab:address       _:b1 .</span><br><span class="line"></span><br><span class="line">_:b1    ab:postalCode    "49345" ;</span><br><span class="line">        ab:city          "Springfield" ;</span><br><span class="line">        ab:streetAddress "32 Main St." ;</span><br><span class="line">        ab:region        "Connecticut" .</span><br></pre></td></tr></table></figure><p>由此可知，空结点的一般格式为 <code>_:&lt;空结点名称&gt;</code></p><div class="note info">            <p>有时，Turtle 和 SPARQL 也使用方括号（<code>[]</code>）代表空结点。</p>          </div><h2 id="Named-Graphs"><a href="#Named-Graphs" class="headerlink" title="Named Graphs"></a>Named Graphs</h2><p>和空结点类似，Named Graphs 也可以用来将一些相关的三元组组合在一起。而与之不同的是，Named Graphs 更加强大——可进一步赋予其元数据（metadata）。这种特性使得 Named Graphs 在某些应用场景下有着独特的优势。</p><h2 id="RDF-模式和-OWL"><a href="#RDF-模式和-OWL" class="headerlink" title="RDF 模式和 OWL"></a>RDF 模式和 OWL</h2><p>在程序设计中，经常会考虑复用问题，因为复用可以有效提高软件开发效率。十分幸运，RDF 也提供了复用方案，即 RDF 模式和 OWL（Web Ontological Language）。</p><p>RDF 模式使用一系列三元组描述了有关该类资源的事实（如指明 <code>rdf:type</code>、 <code>rdfs:label</code> 、<code>rdf:comment</code> 等）。这些事实也被称为该类资源的元数据。</p><p>下面是两个具体的例子：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># filename: ex042.ttl</span><br><span class="line"></span><br><span class="line">@prefix dc:   <span class="tag">&lt;<span class="name">http:</span>//<span class="attr">purl.org</span>/<span class="attr">dc</span>/<span class="attr">elements</span>/<span class="attr">1.1</span>/&gt;</span> .</span><br><span class="line">@prefix rdf:  <span class="tag">&lt;<span class="name">http:</span>//<span class="attr">www.w3.org</span>/<span class="attr">1999</span>/<span class="attr">02</span>/<span class="attr">22-rdf-syntax-ns</span>#&gt;</span> .</span><br><span class="line">@prefix rdfs: <span class="tag">&lt;<span class="name">http:</span>//<span class="attr">www.w3.org</span>/<span class="attr">2000</span>/<span class="attr">01</span>/<span class="attr">rdf-schema</span>#&gt;</span> .</span><br><span class="line"></span><br><span class="line">dc:creator</span><br><span class="line">      rdf:type rdf:Property ;     </span><br><span class="line">      # a rdf:Property ;</span><br><span class="line">      rdfs:comment "An entity primarily responsible for making the resource."@en-US ;</span><br><span class="line">      rdfs:label "Creator"@en-US .</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># filename: ex043.ttl</span><br><span class="line"></span><br><span class="line">@prefix ab:   <span class="tag">&lt;<span class="name">http:</span>//<span class="attr">learningsparql.com</span>/<span class="attr">ns</span>/<span class="attr">addressbook</span>#&gt;</span> .</span><br><span class="line">@prefix rdf:  <span class="tag">&lt;<span class="name">http:</span>//<span class="attr">www.w3.org</span>/<span class="attr">1999</span>/<span class="attr">02</span>/<span class="attr">22-rdf-syntax-ns</span>#&gt;</span> .</span><br><span class="line">@prefix rdfs: <span class="tag">&lt;<span class="name">http:</span>//<span class="attr">www.w3.org</span>/<span class="attr">2000</span>/<span class="attr">01</span>/<span class="attr">rdf-schema</span>#&gt;</span> .</span><br><span class="line"></span><br><span class="line">ab:Musician</span><br><span class="line">      rdf:type rdfs:Class ;</span><br><span class="line">      rdfs:label "Musician" ;</span><br><span class="line">      rdfs:comment "Someone who plays a musical instrument" .</span><br><span class="line"></span><br><span class="line">ab:MusicalInstrument</span><br><span class="line">      a rdfs:Class ;</span><br><span class="line">      rdfs:label "musical instrument" .</span><br></pre></td></tr></table></figure><p>在元数据中，有两个非常特殊的属性 <code>rdfs:domain</code> 和 <code>rdfs:range</code> ：</p><ul><li><code>rdfs:domain</code> ：<strong>该属性的值是 <code>rdfs:domain</code> 所在三元组主语的类别</strong></li><li><code>rdfs:range</code>  ：<strong>该属性的值是 <code>rdfs:range</code> 所在三元组宾语的类别</strong></li></ul><p>依照这样的关系，在 RDF 中，我们能推理出很多隐藏在图中的结论。</p><div class="note info no-icon">            <p class="note-title">面向对象 V.S. RDF 模式</p><ul><li>在面向对象系统中，需要实例化一个类，生成一个对象，并将具体的值赋给这个对象。</li><li>在基于 RDF 的标准下，为资源的元数据添加一个属性，就有可能使得该资源属于某一个之前未属于的类别。</li></ul>          </div><p>然而，RDF 模式还是有限的，它无法描述类之间的联系。要解决这个问题，便引入了 OWL。</p><p>下面，我将结合书上的例子说明：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"># filename: ex046.ttl</span><br><span class="line"></span><br><span class="line">@prefix ab:   <span class="tag">&lt;<span class="name">http:</span>//<span class="attr">learningsparql.com</span>/<span class="attr">ns</span>/<span class="attr">addressbook</span>#&gt;</span> .</span><br><span class="line">@prefix rdf:  <span class="tag">&lt;<span class="name">http:</span>//<span class="attr">www.w3.org</span>/<span class="attr">1999</span>/<span class="attr">02</span>/<span class="attr">22-rdf-syntax-ns</span>#&gt;</span> .</span><br><span class="line">@prefix rdfs: <span class="tag">&lt;<span class="name">http:</span>//<span class="attr">www.w3.org</span>/<span class="attr">2000</span>/<span class="attr">01</span>/<span class="attr">rdf-schema</span>#&gt;</span> .</span><br><span class="line">@prefix owl:  <span class="tag">&lt;<span class="name">http:</span>//<span class="attr">www.w3.org</span>/<span class="attr">2002</span>/<span class="attr">07</span>/<span class="attr">owl</span>#&gt;</span> .</span><br><span class="line"></span><br><span class="line">ab:i0432  </span><br><span class="line">   ab:firstName "Richard" ;</span><br><span class="line">   ab:lastName  "Mutt" ;</span><br><span class="line">   ab:spouse    ab:i9771 . </span><br><span class="line"></span><br><span class="line">ab:i8301  </span><br><span class="line">   ab:firstName "Craig" ;</span><br><span class="line">   ab:lastName  "Ellis" ;</span><br><span class="line">   ab:patient   ab:i9771 . </span><br><span class="line"></span><br><span class="line">ab:i9771</span><br><span class="line">   ab:firstName "Cindy" ; </span><br><span class="line">   ab:lastName  "Marshall" .  </span><br><span class="line"></span><br><span class="line">ab:spouse</span><br><span class="line">   rdf:type owl:SymmetricProperty ; </span><br><span class="line">   rdfs:comment "Identifies someone's spouse" .</span><br><span class="line"></span><br><span class="line">ab:patient </span><br><span class="line">   rdf:type rdf:Property ;</span><br><span class="line">   rdfs:comment "Identifies a doctor's patient" . </span><br><span class="line"></span><br><span class="line">ab:doctor </span><br><span class="line">   rdf:type rdf:Property ;</span><br><span class="line">   rdfs:comment "Identifies a doctor treating the named resource" ;</span><br><span class="line">   owl:inverseOf ab:patient .</span><br></pre></td></tr></table></figure><p>其中，<code>ab:spouse</code> 的 <code>rdf:type</code> 为 <code>SymmetricProperty</code> ，表示这个属性是对称的。在本例中，ab:i0432 的配偶是 ab:i9771 ，那么根据对称属性的性质推理，我们可以得到，ab:i9771 的配偶则是 ab:i0432 。又如，<code>ab:doctor</code> 的 <code>owl:inverseOf</code> 的值为 <code>ab:patient</code>，则在本例中，由于 ab:i8301 有一位病人 ab:i9771，则 ab:i9771 有一位医生 ab:i8301。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>本文主要介绍了有关 RDF 的基本概念、格式、存储结构和其他一些细节。最后，对全文做一个简单的总结。</p><ul><li>RDF 全称 Resource Description Framework（资源描述框架），是一种数据模型，它提供了一种独特的结构来存储数据文件。</li><li>RDF 数据单元是一个三元组 $(s,\ p,\ o)$ ，其中 $s$ 代表 subject（主语），$p$ 代表 predicate（谓语）， $o$ 代表 object（宾语）。每一个三元组都可以陈述这样一个事实：一个由 $s$ 唯一标记的资源实体拥有 $p$ 属性，其属性值为 $o$ 。</li><li>RDF 数据的存储主要有两种：文件序列化存储（包括 RDF/XML、Turtle、RDFa 等格式）、数据库存储。</li><li>RDF 中的数据类型指定一般可表示为 <code>数据^^&lt;数据类型URI&gt;</code> 。</li><li>RDF 支持国际化，一般格式为<code>数据@语言缩写</code>。</li><li><code>rdfs:label</code>、<code>rdfs:comment</code> 是 RDF 中非常重要的两个属性名。<code>rdfs:label</code> 通常用来以方便人阅读的名称指代资源，<code>rdfs:comment</code> 通常用来更细节地描述资源。</li><li>RDF 中，空结点可用来连接数据。</li><li>Named Graphs 可用于组合三元组数据，并可赋予一些元数据。</li><li>RDF 模式和 OWL 可用于 RDF 资源、属性的复用。RDF 模式中可定义类、属性的事实元数据，并提供给外界使用，达到复用的目的；OWL 则扩展了 RDF 模式的表达性，从而支持描述类之间的关系。</li></ul><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li>Bob DuCharme. <a href="http://learningsparql.com/" target="_blank" rel="noopener">Learning SPARQL: querying and updating with SPARQL 1.1</a></li><li>Juan Sequeda. <a href="https://www.dataversity.net/introduction-to-rdfa-2/" target="_blank" rel="noopener">Introduction to: RDFa</a>.</li><li>Juan Sequeda. <a href="https://www.dataversity.net/introduction-to-ontologies/" target="_blank" rel="noopener">Introduction to: Ontologies</a>.</li></ul><h1 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h1><ul><li><a href="https://www.w3.org/TR/rdf-primer/" target="_blank" rel="noopener">W3C RDF Primer</a></li><li><a href="https://www.dataversity.net/introduction-to-rdf-vs-xml/" target="_blank" rel="noopener">Introduction to: RDF vs XML</a></li></ul></div><script src="https://cdn.bootcdn.net/ajax/libs/lightgallery-js/1.2.0/js/lightgallery.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-thumbnail.js@1.2.0/dist/lg-thumbnail.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-zoom.js@1.2.0/dist/lg-zoom.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-autoplay.js@1.2.0/dist/lg-autoplay.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-fullscreen.js@1.2.0/dist/lg-fullscreen.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-pager.js@1.0.0/dist/lg-pager.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    <summary type="html">
    
      本文主要介绍 RDF 的基本概念
    
    </summary>
    
    
      <category term="研究" scheme="https://cosmosning.github.io/categories/%E7%A0%94%E7%A9%B6/"/>
    
    
      <category term="RDF" scheme="https://cosmosning.github.io/tags/RDF/"/>
    
      <category term="数据模型" scheme="https://cosmosning.github.io/tags/%E6%95%B0%E6%8D%AE%E6%A8%A1%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>考研备考之我见</title>
    <link href="https://cosmosning.github.io/2020/07/02/kao-yan-bei-kao-zhi-wo-jian/"/>
    <id>https://cosmosning.github.io/2020/07/02/kao-yan-bei-kao-zhi-wo-jian/</id>
    
    
    <author>
    <name>CosmosNing</name>
    <uri>https://cosmosning.github.io/about</uri>
    </author>
    
    
    <published>2020-07-02T03:59:36.000Z</published>
    <updated>2020-08-20T16:46:12.072Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.bootcdn.net/ajax/libs/lightgallery-js/1.2.0/css/lightgallery.min.css" /><div class=".article-gallery"<blockquote><p> 2020 的上半年不知不觉已经过去，不知各位读者在这魔幻的半年过得如何。随之而来的暑假，对于 21 届考研 er 来说，是十分重要的一个复习阶段。如何把握好这一黄金时段，我想每一个考研学子都对此十分关心。本文带着答疑解惑的目的，从我自身的角度出发，分（tu）析（cao）一下过去一年的考研情况，并给出我的复习建议。希望对各位读者有所帮助。本文的主要内容如下：</p><ol><li>考情分析</li><li>各科目复习建议</li><li>时间安排</li><li>心态调整</li></ol></blockquote><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/07/aaron-burden-QJDzYT_K8Xg-unsplash.jpg" title="题图" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/07/aaron-burden-QJDzYT_K8Xg-unsplash.jpg" alt="题图"></a></p><p>Photo by <a href="https://unsplash.com/@aaronburden?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Aaron Burden</a> on <a href="https://unsplash.com/s/photos/study?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Unsplash</a></p><h1 id="考情分析"><a href="#考情分析" class="headerlink" title="考情分析"></a>考情分析</h1><p><strong>肖老政治翻车，考生一片哀嚎！</strong>考研政治界有句名言，“政治考得怎么样，全靠肖老发挥得好不好”。作为前命题组组长，肖老在前几年押题技术一流。基本坐实考研政治界的一把交椅。面对每次的 “考前质疑，考后真香” 的评价，在大题部分，我从徐涛换到了肖老。于是，大题只是背了肖四。今年情况怎样？我主观感觉，肖老确实牛，大部分材料都押中了，只不过出题角度、解题思路有些偏差，我给五星好评！据今年考生评价（来源于网络，可信度自行甄别），可能徐涛的 “小黄书” 更切题一些。估计，今后肖老的热度可能会减少。</p><p><strong>英一十年未考，Notice 又来了！</strong>对于今年的英一，大部分吐槽在小作文。十年未考的 Notice，今年英一把考生打了个措手不及。与往常的信件不同， Notice 有其独有的格式和写法。大部分人因不清楚格式而焦虑。从结果看来，格式并不会成为拉分的关键一项，英语的重点还是在阅读。不排除考试中紧张的因素，我认为完型难度略有提高，阅读难度一般，新题型难度提升，翻译和作文难度下降。总的来说，英语难度中等。如果英语基础较好，只需掌握命题人的套路，一般能拿到不错的分数。</p><p><strong>数一难度经典再现，与 18 年难度持平！</strong>在第一天接受到政治和英语的双重打击，大部分考生心态出现了较大的波动。我第一天考完的晚上也是挺焦虑的。听了宇哥的“最后一聊”，才逐渐缓过神来：“第一天政治和英语是过关性考试，才 200 分，基本拉不开差距；…… 而明天的两门才是重头戏，有 300 分 ……”。平复了自己的心情，又重新背了一遍公式，我就睡了。第二天拿到试卷，我前后翻了翻：嗯，题不难，挺常规的。做着做着发现，这题目上手简单，做着做着就发现做不下去了。特别是高数部分后面几题，看似简单，实则有不少硬骨头，压轴的我更是没有什么思路。今年的线代部分，考得也颇具新意，对于我这种基础不扎实的人来说，有些力不从心。概率部分比较常规，思路和计算都很传统。据宇哥分析，近几年数学呈现 “多样化” “特色化” 发展。以前，可能数一和数二靠的近一些，经常抽查公共考点。而近几年，三种数学开始分叉，将考察重点放在了专供的考点上（比如数一会重点考察无穷级数、曲线面积分等；数二重点考察物理应用等；数三重点考察经济应用等）。这种趋势，可能需要后续的学子多多关注自己数学的专供部分，做好充分的准备。</p><p>我的专业课是自命题，不好做宏观分析，就此略过。</p><h1 id="各科目复习建议"><a href="#各科目复习建议" class="headerlink" title="各科目复习建议"></a>各科目复习建议</h1><h2 id="数学"><a href="#数学" class="headerlink" title="数学"></a>数学</h2><h3 id="我的复习过程"><a href="#我的复习过程" class="headerlink" title="我的复习过程"></a>我的复习过程</h3><p>数学我开始的挺早，寒假开始复习。利用寒假时间，我看完了张宇高数基础班。在这个阶段，我拿着习题集很难有解题思路，于是我听了别人的建议，在每次视频看完一讲后，把视频课上的例题重新做一遍，配合基础班划的题目，基本了解了高数的公共知识点。</p><p>3 、4 月份开学，实验室那边抓我去处理大创结题的工作，写结题报告，交论文初稿，让我基本很难空出大块的时间复习数学。在这段时间，数学基本是荒废了。</p><p>4 月下旬，我才重新捡起数学的复习。用了几天调整，回到了复习的状态。视频都能听懂，一到做题就傻眼了，习题答案中总有些知识点我不知道。这时我才意识到<strong>光看视频是不够的</strong>！我拿出张宇的 18 讲，开始数一专供知识点补完计划。计划执行到中旬，我越来越感到吃力，张宇的难度不是吹的。想过中途换书，可是都看了一半了，存在适应时间成本，我还是咬牙坚持了下来。这部分知识，说实话，我挺模糊的。尤其是曲线面积分，在没有本科学习的情况下，尤为吃力。</p><p>结束了高数数一专供补完计划，时间大概到了 5 月中旬。这时候，我开始准备线代。看了几节张宇线代的基础班，还是不会做题。听说别人已经把 660 刷完了，我有点慌（后来才知道，人家是二战，才有这样的进度。别轻易被别人的进度影响，做好自己就行）。于是，开始看张宇的线代 9 讲。做了几讲，发现我太菜了，根本肝不动（这本参考书挺有水平的，基础不好的人慎选）。然后，我赶紧换了汤神复习全书，开始肝其中的线代和概率部分，做这书上的课后题（这块还是比较基础的，如果基础不扎实，强推）。大概到 7 月初完成了第一轮数一复习。</p><p>七月初，我用张宇的闭关修炼开始跟宇哥的数学强化班。强化班确实讲得通透，而且比较全面。其中总结的出题思路，解题方法对我启发很大。虽说张宇的闭关修炼将高数浓缩成了 8 讲，但由于数一的内容实在太多，我基本按照一周一讲的进度推进，暑假结束后，才忙完了高数强化。我每讲的复习流程如下：</p><ol><li><strong>看视频，做笔记，划重点，写例题思路</strong></li><li><strong>重新做一遍例题（完整解题过程），特别是视频课中提到的同类问题</strong></li><li><strong>做汤神 1800 基础部分对应章节</strong></li><li><strong>总结提炼重要错题、公式、结论</strong></li></ol><p>9 月开始线代和概率强化，和高数复习一样的流程。由于线代和概率套路固定，掌握起来比高数简单不少，我花了一个月，并在国庆前完成了第二轮数一复习。</p><p>10 月开始肝数学一真题。2000 年以前的真题每天 2 套（因为简单），2000 以后的真题每周 1 到 2 套（周日同一时间，掐表模拟）。在这段时间，各个名师的模拟卷也出版了。我每周也挑了一天空闲的上午，做模拟卷。此外也花了些时间补 1800 强化部分的习题。总的来说，<strong>小段空余时间就刷题。有大块空闲时间就刷一套真题或者模拟卷。</strong></p><p>刷题、刷卷的阶段，一直持续到最后。期间也会复习遗忘的知识点，进一步总结做题思路，形成自己的知识框架。</p><h3 id="建议及推荐材料"><a href="#建议及推荐材料" class="headerlink" title="建议及推荐材料"></a>建议及推荐材料</h3><p>对各位考生，我的建议是：</p><ol><li><strong>视频不是终点，会做题才是王道！</strong>视频可以作为了解知识点的起点，如要完整的掌握，还需与配套的参考书和习题一起食用。视频无论讲的多好，或多或少有知识点的遗漏。这时一定要回归参考书，利用参考书补全遗漏的知识，做到考研知识点的全覆盖。</li><li><strong>注意细节，养成良好的做题习惯！</strong>无论大题、小题在练习时，都要写出每一步计算过程；每步推导做到有理有据，不要敷衍了事。具体怎么做，你可以看看汤神的真题解析是如何解题的。我认为主要要做到，就算是打草稿，也要注意细节，把推导过程、计算过程写明白。这样，你到最后上场答题时，凭借习惯也能做到写出来的东西都能拿到过程分。</li><li><strong>形成自己的复习闭环，做到高效复习！</strong>从理解基础知识，到会做题，再到总结，这三步缺一不可（当然，你可在此基础增添个性化的内容）。制定良好的复习流程，反复执行，形成习惯，就会使得你快速进入复习状态，同时也不会轻易被外界因素扰乱了阵脚。</li><li><strong>反复练习，熟能生巧；多做模拟，见见世面！</strong>数学复习一看做题的熟练程度，二看做题的广度。做题的熟练程度要靠习题，有时间尽量多刷几遍；做题的广度要靠模拟卷，建议最后冲刺阶段，各类名师的模拟卷都买来试试。张宇、李林、汤家凤等都是不错的选择。</li></ol><p>我在复习数一时所用的材料主要是张宇系列和汤家凤系列。</p><p>基础阶段：张宇基础班 + 汤家凤复习全书（打基础） + 张宇 36 讲（补充提高）</p><p>强化阶段：张宇强化班 + 张宇闭关修炼 + 1800（基础部分）</p><p>真题阶段：汤家凤真题 + 1800 （提高部分）</p><p>冲刺阶段：张宇 8+4（8 套卷史称劝退卷，用来见世面）、李林 6+4（比汤神难，比宇哥简单，受不了张宇可考虑李林） 、汤家凤 8 套卷（难度都在计算量上，普遍解题思路清晰）、合工大森哥 5 套卷（文都出版；部分题目出题角度较偏，用来补充）、张同斌决胜冲刺 4 套卷（文都出版；简单，用来重振士气）</p><h2 id="专业课"><a href="#专业课" class="headerlink" title="专业课"></a>专业课</h2><h3 id="我的复习过程-1"><a href="#我的复习过程-1" class="headerlink" title="我的复习过程"></a>我的复习过程</h3><p>花了大量时间复习数学，其实是压缩了我专业课复习的时间。最后结果我挺后悔的，没拿到较好的分数。都怪自己专业课时间花得太少。</p><p>我暑假开始复习专业课。从数据结构开始。先过了一遍王道，做了王道对应的的选择题加深记忆。由于暑假数学高数强化部分压力确实很大，导致数据结构的复习断断续续，直到暑假结束才看完数据结构。</p><p>9 月份，数学复习压力小了，专业课复习的效率也快了一些。分别用两周时间过了一遍操作系统和计算机组成原理，并做了王道上小节练习的选择题巩固。</p><p>之后开始做真题，上手偏难。主要是知识点掌握不牢固，知识点遗忘等原因。对着真题，到王道回顾知识点，做总结笔记。做多了之后，我也发现，自命题的专业课确实有套路，我就重点关注了常考点，并没有再完整的过一遍考纲（作者注：这里我轻敌了，其实专业课并没有那么简单）。到了考场上就现原形了，机组的浮点数 IEEE 标准我忘了，痛失 10 分！</p><h3 id="建议及推荐材料-1"><a href="#建议及推荐材料-1" class="headerlink" title="建议及推荐材料"></a>建议及推荐材料</h3><p>对各位考生，我的建议是：</p><ol><li><strong>参考书、教材为主，视频为辅。</strong>数学的复习占据了大量时间，这意味着可能你并没有足够的时间完整地看完专业课视频（况且部分专业课还没有视频辅导）。这时只能依靠参考书和教材，复习知识点。如果遇到难以理解的知识点，比如数据结构中算法执行流程是怎样的，可以找来对应知识点的视频观看。</li><li><strong>对照考纲，复习全面</strong>：考过的可能再考，没考过的也可能出现。每天花些时间，复习几个专业课知识点，保持专业课复习的热度，做到考纲知识，全面不漏。</li></ol><p>我复习的材料是王道计算机考研辅导，如果大家有考计算机相关的研究生可以参考。</p><h2 id="英语"><a href="#英语" class="headerlink" title="英语"></a>英语</h2><h3 id="我的复习过程-2"><a href="#我的复习过程-2" class="headerlink" title="我的复习过程"></a>我的复习过程</h3><p>在寒假，我看了一些英语的导学课，并针对自己的英语水平，执行了如下的计划：</p><ul><li>寒假开学后，到暑假前，我看了唐静的翻译强化（老版；新版出来后我发现，该部分也没更新）、王江涛的写作基础，背了一些单词和作文（用来解闷，数学太难顶了）。</li><li>暑假开始，每周一套真题（周六下午同一时间），配合唐迟的阅读强化，学习阅读技巧。</li><li>9、10 月看了刘畅的作文强化（这老师好像最近几年不讲了），开始找空闲时间练习作文。</li><li>继续练习真题，找题感。</li></ul><h3 id="建议及推荐材料-2"><a href="#建议及推荐材料-2" class="headerlink" title="建议及推荐材料"></a>建议及推荐材料</h3><p>对于英语的复习，我有几点经验分享给大家。按照重要性排序，我对各部分的复习建议如下：</p><ul><li>阅读：<strong>跟紧唐迟</strong>，抓住“<strong>阅读的本质是逻辑</strong>”，多做真题体会。</li><li>翻译：<ul><li>基础好的同学可以完整的跟<strong>唐静的翻译强化</strong>，边听边练习（就是视频中，他会停下来，让你分析做题，一定要听话）；</li><li>而对于基础较差的同学（主谓宾装补句子成分都搞不清的同学），我推荐逻汉班中<strong>宋逸轩</strong>老师，几节直播课救命（一般 9 月份以后才出版，想要早点复习的，可以只看老版的翻译部分）。</li></ul></li><li>作文：<strong>除了背，还要写！</strong>小作文有固定格式，一般将题目信息表达到位，基本分都能到手。大作文有固定套路，一般分为三段。<strong>第一段，图画（或图表）描述；第二段，观点论证、原因分析；第三段，解决对策、建议及号召</strong>。我的复习方法是：<ul><li><strong>用 00 ~10 年的真题练手，这阶段主要是分段练习</strong>：只练习某一段的写法。如一段时间内，只练习图画描述怎么写。练习流程是先自己写一遍，再自己改一遍（主要改语法错误），接着看范文，积累常见功能词汇和句子，并摘抄下来，供日后复习。</li><li><strong>11 ~ 20 年的真题模拟</strong>：有了 10 年的真题训练和词汇、句子积累，就可以将后 10 年的题目，当作模拟，掐表练习（小作文 15 ~ 20分钟，大作文 30 ~ 35 分钟），完整的写出一篇作文。</li></ul></li><li>新题型：听<strong>逻汉班唐迟</strong>讲解。</li><li>完型：全靠语感。</li></ul><h2 id="政治"><a href="#政治" class="headerlink" title="政治"></a>政治</h2><h3 id="我的复习过程-3"><a href="#我的复习过程-3" class="headerlink" title="我的复习过程"></a>我的复习过程</h3><p>暑假每天中午饭后一小时，看徐涛强化视频（正好助眠），做对应的真题选择题。</p><p>9 月做模拟习题的选择题。等肖八出来，开始做肖八的选择题。徐涛 8 套卷也只做了选择题。随后，就把政治撂倒一边。</p><p>肖四出来，还剩大约两周，这段时间开始花时间背肖四。</p><h3 id="建议及推荐材料-3"><a href="#建议及推荐材料-3" class="headerlink" title="建议及推荐材料"></a>建议及推荐材料</h3><p>我选择的材料是<strong>徐涛全套及肖八、肖四</strong>。最后大题只是背了肖四。如果你最后时间比较充裕，我建议你跟徐涛 11 月开始在公众号上的背诵计划，这可以全面提升你的政治觉悟；如果没时间，老老实实背肖四，60 分保底总会有的。</p><h1 id="时间安排"><a href="#时间安排" class="headerlink" title="时间安排"></a>时间安排</h1><p>从暑假开始，我的复习时间安排大致如下，供你参考。你可以在此基础上根据实际情况，灵活调整。</p><table><thead><tr><th align="center">时间</th><th align="center">复习内容</th></tr></thead><tbody><tr><td align="center">暑假</td><td align="center">数学强化、英语强化、专业课基础、政治强化及选择题</td></tr><tr><td align="center">9月 ~ 10 月</td><td align="center">数学真题、英语真题、专业课真题、英语大小作文</td></tr><tr><td align="center">11 月 ~ 12 月</td><td align="center">数学模拟、英语大小作文、英语真题、专业课真题、政治大题</td></tr></tbody></table><p>此外，也请你关注关键的时间点！到暑假开始后，你最好<strong>确定目标院校</strong>。如果还没确定，学硕还是专硕要确定好（也就是你要准备复习 数一 + 英一，还是 数二 + 英二）。</p><p>9 月份，学校的<strong>招生简章</strong>会出来，可能部分专业会换专业课。这个时间，你要充分考虑自己的复习情况，<strong>合理调整自己的目标</strong>。</p><p>10 月份会<strong>网上预报名</strong>和<strong>正式报名</strong>。推荐在报名前几周，<strong>拍</strong>好自己的<strong>证件照</strong>（不能带眼镜、头发不要太长，要把耳朵露出来），报名时及时上传。</p><p>报名后可以按照往年的考场安排，提前在考点附近<strong>预定宾馆</strong>。</p><h1 id="心态调整"><a href="#心态调整" class="headerlink" title="心态调整"></a>心态调整</h1><p>备考期间，请保持良好心态，每周留些时间放松自己，别把自己闷坏了。每天坚持锻炼，健康的身体才是革命的本钱。</p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>对于复习，我的建议是<strong>复习全面，练习熟练</strong>。尽可能的把考研的<strong>知识点</strong>做到<strong>全覆盖</strong>，使用思维导图等工具加深记忆；各种习题<strong>按类强化训练</strong>，<strong>动手做题</strong>，而非看完了事；知识点和习题要<strong>多遍滚动复习</strong>，熟能生巧，才有足够底气！</p><p>另外，准备研究生入学考试是一场马拉松。切忌两天打鱼，三天晒网，只需<strong>以你的速率保持匀速前进</strong>，跟紧大部队，即可战胜大部分人。在此期间，也要<strong>张弛有度</strong>，保持良好心态，每周留下些时间放松自己。这样无论遇到什么困难，你也会满血复活！</p><p>最后，祝愿各位<strong>一战成硕，一研为定</strong>！</p><h1 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h1><p><a href="https://cosmosning.github.io/2020/06/27/ru-he-xie-yi-feng-yan-jiu-sheng-zi-jian-xin/">如何写一封研究生自荐信</a></p></div><script src="https://cdn.bootcdn.net/ajax/libs/lightgallery-js/1.2.0/js/lightgallery.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-thumbnail.js@1.2.0/dist/lg-thumbnail.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-zoom.js@1.2.0/dist/lg-zoom.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-autoplay.js@1.2.0/dist/lg-autoplay.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-fullscreen.js@1.2.0/dist/lg-fullscreen.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-pager.js@1.0.0/dist/lg-pager.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    <summary type="html">
    
      作为参与者分析一下我对 20 届考研情况的分析，给出复习备考的建议
    
    </summary>
    
    
      <category term="研究生" scheme="https://cosmosning.github.io/categories/%E7%A0%94%E7%A9%B6%E7%94%9F/"/>
    
    
      <category term="考试复习" scheme="https://cosmosning.github.io/tags/%E8%80%83%E8%AF%95%E5%A4%8D%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>用数据复盘我的考研初试</title>
    <link href="https://cosmosning.github.io/2020/06/30/yong-shu-ju-fu-pan-wo-de-kao-yan-chu-shi/"/>
    <id>https://cosmosning.github.io/2020/06/30/yong-shu-ju-fu-pan-wo-de-kao-yan-chu-shi/</id>
    
    
    <author>
    <name>CosmosNing</name>
    <uri>https://cosmosning.github.io/about</uri>
    </author>
    
    
    <published>2020-06-30T12:51:25.000Z</published>
    <updated>2020-08-20T16:46:12.068Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.bootcdn.net/ajax/libs/lightgallery-js/1.2.0/css/lightgallery.min.css" /><div class=".article-gallery"<blockquote><p>受今年疫情的影响，2020 届研究生录取阶段到近几周才画上圆满的句号。距离开学还有些空闲时间，这段时间作为终点和起点的交会，是绝好的复盘机会。本文尝试以图表、关键的统计量简单地分析本年度南航官方公布的初试成绩情况，量化我的初试水平，并从这些客观的数据中分析原因，找到自身的不足，做好未来的打算。</p><p>此外，本文亦希望读者可从数据分析中窥探出考研趋势，规划好自己的准备工作。</p></blockquote><h1 id="2020-南航计算机考研初试情况概述"><a href="#2020-南航计算机考研初试情况概述" class="headerlink" title="2020 南航计算机考研初试情况概述"></a>2020 南航计算机考研初试情况概述</h1><p>（数据来源：<a href="http://cs.nuaa.edu.cn/2020/0520/c10851a200876/page.htm" target="_blank" rel="noopener">官方公布的初试成绩（仅包括进入复试的部分）</a>）</p><p>我对上述数据，分专业、分科目分别统计了分数情况。</p><h2 id="电子信息（专硕）"><a href="#电子信息（专硕）" class="headerlink" title="电子信息（专硕）"></a>电子信息（专硕）</h2><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/%E7%94%B5%E5%AD%90%E4%BF%A1%E6%81%AF-%E6%94%BF%E6%B2%BB%E5%88%86%E6%95%B0%E5%88%86%E5%B8%83%E6%83%85%E5%86%B5.png" title="电子信息-zhengzhi" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/%E7%94%B5%E5%AD%90%E4%BF%A1%E6%81%AF-%E6%94%BF%E6%B2%BB%E5%88%86%E6%95%B0%E5%88%86%E5%B8%83%E6%83%85%E5%86%B5.png" alt="电子信息-zhengzhi"></a></p><table><thead><tr><th align="center">学科</th><th align="center">最高</th><th align="center">最低</th><th align="center">均分</th><th align="center">中位数</th></tr></thead><tbody><tr><td align="center">政治</td><td align="center">78</td><td align="center">56</td><td align="center">66.41</td><td align="center">66</td></tr></tbody></table><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/%E7%94%B5%E5%AD%90%E4%BF%A1%E6%81%AF-%E8%8B%B1%E4%B8%80%E5%88%86%E6%95%B0%E5%88%86%E5%B8%83%E6%83%85%E5%86%B5.png" title="电子信息-英一" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/%E7%94%B5%E5%AD%90%E4%BF%A1%E6%81%AF-%E8%8B%B1%E4%B8%80%E5%88%86%E6%95%B0%E5%88%86%E5%B8%83%E6%83%85%E5%86%B5.png" alt="电子信息-英一"></a></p><table><thead><tr><th align="center">学科</th><th align="center">最高</th><th align="center">最低</th><th align="center">均分</th><th align="center">中位数</th></tr></thead><tbody><tr><td align="center">英一</td><td align="center">85</td><td align="center">39</td><td align="center">65.70</td><td align="center">67</td></tr></tbody></table><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/%E7%94%B5%E5%AD%90%E4%BF%A1%E6%81%AF-%E6%95%B0%E4%BA%8C%E5%88%86%E6%95%B0%E5%88%86%E5%B8%83%E6%83%85%E5%86%B5.png" title="电子信息-数二" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/%E7%94%B5%E5%AD%90%E4%BF%A1%E6%81%AF-%E6%95%B0%E4%BA%8C%E5%88%86%E6%95%B0%E5%88%86%E5%B8%83%E6%83%85%E5%86%B5.png" alt="电子信息-数二"></a></p><table><thead><tr><th align="center">学科</th><th align="center">最高</th><th align="center">最低</th><th align="center">均分</th><th align="center">中位数</th></tr></thead><tbody><tr><td align="center">数二</td><td align="center">134</td><td align="center">65</td><td align="center">95.34</td><td align="center">94.5</td></tr></tbody></table><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/%E7%94%B5%E5%AD%90%E4%BF%A1%E6%81%AF-829%E5%88%86%E6%95%B0%E5%88%86%E5%B8%83%E6%83%85%E5%86%B5.png" title="电子信息-829" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/%E7%94%B5%E5%AD%90%E4%BF%A1%E6%81%AF-829%E5%88%86%E6%95%B0%E5%88%86%E5%B8%83%E6%83%85%E5%86%B5.png" alt="电子信息-829"></a></p><table><thead><tr><th align="center">学科</th><th align="center">最高</th><th align="center">最低</th><th align="center">均分</th><th align="center">中位数</th></tr></thead><tbody><tr><td align="center">829</td><td align="center">134</td><td align="center">64</td><td align="center">100.69</td><td align="center">101</td></tr></tbody></table><h2 id="计算机科学与技术（学硕）"><a href="#计算机科学与技术（学硕）" class="headerlink" title="计算机科学与技术（学硕）"></a>计算机科学与技术（学硕）</h2><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF-%E6%94%BF%E6%B2%BB%E5%88%86%E6%95%B0%E5%88%86%E5%B8%83%E6%83%85%E5%86%B5.png" title="计算机科学与技术-zhengzhi" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF-%E6%94%BF%E6%B2%BB%E5%88%86%E6%95%B0%E5%88%86%E5%B8%83%E6%83%85%E5%86%B5.png" alt="计算机科学与技术-zhengzhi"></a></p><table><thead><tr><th align="center">学科</th><th align="center">最高</th><th align="center">最低</th><th align="center">均分</th><th align="center">中位数</th></tr></thead><tbody><tr><td align="center">政治</td><td align="center">76</td><td align="center">59</td><td align="center">68</td><td align="center">68.5</td></tr></tbody></table><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF-%E8%8B%B1%E4%B8%80%E5%88%86%E6%95%B0%E5%88%86%E5%B8%83%E6%83%85%E5%86%B5.png" title="计算机科学与技术-英一" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF-%E8%8B%B1%E4%B8%80%E5%88%86%E6%95%B0%E5%88%86%E5%B8%83%E6%83%85%E5%86%B5.png" alt="计算机科学与技术-英一"></a></p><table><thead><tr><th align="center">学科</th><th align="center">最高</th><th align="center">最低</th><th align="center">均分</th><th align="center">中位数</th></tr></thead><tbody><tr><td align="center">英一</td><td align="center">85</td><td align="center">43</td><td align="center">67.90</td><td align="center">70</td></tr></tbody></table><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF-%E6%95%B0%E4%B8%80%E5%88%86%E6%95%B0%E5%88%86%E5%B8%83%E6%83%85%E5%86%B5.png" title="计算机科学与技术-数一" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF-%E6%95%B0%E4%B8%80%E5%88%86%E6%95%B0%E5%88%86%E5%B8%83%E6%83%85%E5%86%B5.png" alt="计算机科学与技术-数一"></a></p><table><thead><tr><th align="center">学科</th><th align="center">最高</th><th align="center">最低</th><th align="center">均分</th><th align="center">中位数</th></tr></thead><tbody><tr><td align="center">数一</td><td align="center">126</td><td align="center">73</td><td align="center">95.88</td><td align="center">97</td></tr></tbody></table><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF-829%E5%88%86%E6%95%B0%E5%88%86%E5%B8%83%E6%83%85%E5%86%B5.png" title="计算机科学与技术-829" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF-829%E5%88%86%E6%95%B0%E5%88%86%E5%B8%83%E6%83%85%E5%86%B5.png" alt="计算机科学与技术-829"></a></p><table><thead><tr><th align="center">学科</th><th align="center">最高</th><th align="center">最低</th><th align="center">均分</th><th align="center">中位数</th></tr></thead><tbody><tr><td align="center">829</td><td align="center">130</td><td align="center">87</td><td align="center">110.63</td><td align="center">110.5</td></tr></tbody></table><h2 id="软件工程（学硕）"><a href="#软件工程（学硕）" class="headerlink" title="软件工程（学硕）"></a>软件工程（学硕）</h2><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B-%E6%94%BF%E6%B2%BB%E5%88%86%E6%95%B0%E5%88%86%E5%B8%83%E6%83%85%E5%86%B5.png" title="软件工程-zhengzhi" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B-%E6%94%BF%E6%B2%BB%E5%88%86%E6%95%B0%E5%88%86%E5%B8%83%E6%83%85%E5%86%B5.png" alt="软件工程-zhengzhi"></a></p><table><thead><tr><th align="center">学科</th><th align="center">最高</th><th align="center">最低</th><th align="center">均分</th><th align="center">中位数</th></tr></thead><tbody><tr><td align="center">政治</td><td align="center">76</td><td align="center">60</td><td align="center">67.93</td><td align="center">68</td></tr></tbody></table><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B-%E8%8B%B1%E4%B8%80%E5%88%86%E6%95%B0%E5%88%86%E5%B8%83%E6%83%85%E5%86%B5.png" title="软件工程-英一" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B-%E8%8B%B1%E4%B8%80%E5%88%86%E6%95%B0%E5%88%86%E5%B8%83%E6%83%85%E5%86%B5.png" alt="软件工程-英一"></a></p><table><thead><tr><th align="center">学科</th><th align="center">最高</th><th align="center">最低</th><th align="center">均分</th><th align="center">中位数</th></tr></thead><tbody><tr><td align="center">英一</td><td align="center">81</td><td align="center">47</td><td align="center">65.93</td><td align="center">69</td></tr></tbody></table><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B-%E6%95%B0%E4%B8%80%E5%88%86%E6%95%B0%E5%88%86%E5%B8%83%E6%83%85%E5%86%B5.png" title="软件工程-数一" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B-%E6%95%B0%E4%B8%80%E5%88%86%E6%95%B0%E5%88%86%E5%B8%83%E6%83%85%E5%86%B5.png" alt="软件工程-数一"></a></p><table><thead><tr><th align="center">学科</th><th align="center">最高</th><th align="center">最低</th><th align="center">均分</th><th align="center">中位数</th></tr></thead><tbody><tr><td align="center">数一</td><td align="center">115</td><td align="center">69</td><td align="center">89.34</td><td align="center">86</td></tr></tbody></table><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B-829%E5%88%86%E6%95%B0%E5%88%86%E5%B8%83%E6%83%85%E5%86%B5.png" title="软件工程-829" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B-829%E5%88%86%E6%95%B0%E5%88%86%E5%B8%83%E6%83%85%E5%86%B5.png" alt="软件工程-829"></a></p><table><thead><tr><th align="center">学科</th><th align="center">最高</th><th align="center">最低</th><th align="center">均分</th><th align="center">中位数</th></tr></thead><tbody><tr><td align="center">829</td><td align="center">143</td><td align="center">66</td><td align="center">102.41</td><td align="center">104</td></tr></tbody></table><h2 id="网络空间安全（学硕）"><a href="#网络空间安全（学硕）" class="headerlink" title="网络空间安全（学硕）"></a>网络空间安全（学硕）</h2><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/%E7%BD%91%E7%BB%9C%E7%A9%BA%E9%97%B4%E5%AE%89%E5%85%A8-%E6%94%BF%E6%B2%BB%E5%88%86%E6%95%B0%E5%88%86%E5%B8%83%E6%83%85%E5%86%B5.png" title="网络空间安全-zhengzhi" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/%E7%BD%91%E7%BB%9C%E7%A9%BA%E9%97%B4%E5%AE%89%E5%85%A8-%E6%94%BF%E6%B2%BB%E5%88%86%E6%95%B0%E5%88%86%E5%B8%83%E6%83%85%E5%86%B5.png" alt="网络空间安全-zhengzhi"></a></p><table><thead><tr><th align="center">学科</th><th align="center">最高</th><th align="center">最低</th><th align="center">均分</th><th align="center">中位数</th></tr></thead><tbody><tr><td align="center">政治</td><td align="center">76</td><td align="center">56</td><td align="center">66.94</td><td align="center">66.5</td></tr></tbody></table><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/%E7%BD%91%E7%BB%9C%E7%A9%BA%E9%97%B4%E5%AE%89%E5%85%A8-%E8%8B%B1%E4%B8%80%E5%88%86%E6%95%B0%E5%88%86%E5%B8%83%E6%83%85%E5%86%B5.png" title="网络空间安全-英一" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/%E7%BD%91%E7%BB%9C%E7%A9%BA%E9%97%B4%E5%AE%89%E5%85%A8-%E8%8B%B1%E4%B8%80%E5%88%86%E6%95%B0%E5%88%86%E5%B8%83%E6%83%85%E5%86%B5.png" alt="网络空间安全-英一"></a></p><table><thead><tr><th align="center">学科</th><th align="center">最高</th><th align="center">最低</th><th align="center">均分</th><th align="center">中位数</th></tr></thead><tbody><tr><td align="center">英一</td><td align="center">81</td><td align="center">49</td><td align="center">65.5</td><td align="center">65.5</td></tr></tbody></table><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/%E7%BD%91%E7%BB%9C%E7%A9%BA%E9%97%B4%E5%AE%89%E5%85%A8-%E6%95%B0%E4%B8%80%E5%88%86%E6%95%B0%E5%88%86%E5%B8%83%E6%83%85%E5%86%B5.png" title="网络空间安全-数一" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/%E7%BD%91%E7%BB%9C%E7%A9%BA%E9%97%B4%E5%AE%89%E5%85%A8-%E6%95%B0%E4%B8%80%E5%88%86%E6%95%B0%E5%88%86%E5%B8%83%E6%83%85%E5%86%B5.png" alt="网络空间安全-数一"></a></p><table><thead><tr><th align="center">学科</th><th align="center">最高</th><th align="center">最低</th><th align="center">均分</th><th align="center">中位数</th></tr></thead><tbody><tr><td align="center">数一</td><td align="center">119</td><td align="center">57</td><td align="center">82.66</td><td align="center">80.5</td></tr></tbody></table><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/%E7%BD%91%E7%BB%9C%E7%A9%BA%E9%97%B4%E5%AE%89%E5%85%A8-829%E5%88%86%E6%95%B0%E5%88%86%E5%B8%83%E6%83%85%E5%86%B5.png" title="网络空间安全-829" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/%E7%BD%91%E7%BB%9C%E7%A9%BA%E9%97%B4%E5%AE%89%E5%85%A8-829%E5%88%86%E6%95%B0%E5%88%86%E5%B8%83%E6%83%85%E5%86%B5.png" alt="网络空间安全-829"></a></p><table><thead><tr><th align="center">学科</th><th align="center">最高</th><th align="center">最低</th><th align="center">均分</th><th align="center">中位数</th></tr></thead><tbody><tr><td align="center">829</td><td align="center">118</td><td align="center">82</td><td align="center">99.88</td><td align="center">100.5</td></tr></tbody></table><h1 id="量化我的水平"><a href="#量化我的水平" class="headerlink" title="量化我的水平"></a>量化我的水平</h1><p>如何量化我的水平呢？这里我使用了如下方法。</p><p>首先，拿到本专业分科目的成绩数据。具体的对于我来说，我抽取了软件工程专业的各科分数。然后将单科成绩分别降序排名。从中找到我的分数的位次，并除以总进复试人数，获得一个百分比。针对不同百分比，每一科按照如下要求打分：</p><p>当百分比落在</p><ul><li>0 % ~ 20 %：打 5 分</li><li>21% ~ 40%： 打 4 分</li><li>41% ~ 60%： 打 3 分</li><li>61% ~ 80%： 打 2 分</li><li>81% ~ 100%： 打 1 分</li></ul><p>我以上述方式量化的我的水平，具体如下：</p><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/%E8%83%BD%E5%8A%9B%E9%9B%B7%E8%BE%BE%E5%9B%BE.png" title="能力雷达图" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/%E8%83%BD%E5%8A%9B%E9%9B%B7%E8%BE%BE%E5%9B%BE.png" alt="能力雷达图"></a></p><p>初步分析可以发现，我的技能树有些歪，存在较为严重的偏科现象。英语有非常好的优势，数学处于中等水平，而政治和专业课则严重脱了我的后腿。</p><h1 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h1><ol><li>英语一直是我的强势科目，这要感谢初、高中英语的高强度的训练和全面的知识框架，让我不用太多时间，便能适应考研英语的套路。</li><li>在准备研究生入学考试时，数学是我重点关注的工作，花了很多时间和精力做题训练。但没料到今年数一难度加大（数一今年全国均分 65 左右，类似 2018 年，具体数据可以参考各个考研老师的分析。我记得宇哥在今年 0 基础 30 讲视频里讲过），让我原形毕露，考的分数十分难看。不过，能够在同专业内排到中等水平，这是出乎我意料的，也是令我比较惊喜的。难的数学也会有好处，会把哪些比你强一点的半吊子也拉下来，和你“平起平坐”。</li><li>专业课是我比较后悔的。这种情况完全是我过度轻视，缺少必要的时间投入导致的。</li><li>政治不做评价。</li></ol><h1 id="今后打算"><a href="#今后打算" class="headerlink" title="今后打算"></a>今后打算</h1><p>最近选定了导师，今后会做知识图谱和深度学习的相关工作。希望自己在新的阶段，除了做项目、看文献，也需抽出时间提升自己的专业水平。为此，我制定了如下关键任务：</p><ul><li><input disabled="" type="checkbox"> 每天至少 1 小时左右的专业知识学习</li><li><input disabled="" type="checkbox"> 每周 1 篇博文，总结关键重要的知识点</li><li><input disabled="" type="checkbox"> …（待补充）</li></ul><p>谨以此篇，作为近阶段学习工作的复盘。</p></div><script src="https://cdn.bootcdn.net/ajax/libs/lightgallery-js/1.2.0/js/lightgallery.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-thumbnail.js@1.2.0/dist/lg-thumbnail.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-zoom.js@1.2.0/dist/lg-zoom.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-autoplay.js@1.2.0/dist/lg-autoplay.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-fullscreen.js@1.2.0/dist/lg-fullscreen.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-pager.js@1.0.0/dist/lg-pager.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    <summary type="html">
    
      扒了下今年南航计算机学院的初试成绩，试图用数据分析的方式复盘我的考研初试成绩
    
    </summary>
    
    
      <category term="复盘" scheme="https://cosmosning.github.io/categories/%E5%A4%8D%E7%9B%98/"/>
    
    
      <category term="数据分析" scheme="https://cosmosning.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
      <category term="研究生" scheme="https://cosmosning.github.io/tags/%E7%A0%94%E7%A9%B6%E7%94%9F/"/>
    
      <category term="初试" scheme="https://cosmosning.github.io/tags/%E5%88%9D%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>如何写一封研究生自荐信</title>
    <link href="https://cosmosning.github.io/2020/06/27/ru-he-xie-yi-feng-yan-jiu-sheng-zi-jian-xin/"/>
    <id>https://cosmosning.github.io/2020/06/27/ru-he-xie-yi-feng-yan-jiu-sheng-zi-jian-xin/</id>
    
    
    <author>
    <name>CosmosNing</name>
    <uri>https://cosmosning.github.io/about</uri>
    </author>
    
    
    <published>2020-06-27T07:44:47.000Z</published>
    <updated>2020-08-20T16:46:12.068Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.bootcdn.net/ajax/libs/lightgallery-js/1.2.0/css/lightgallery.min.css" /><div class=".article-gallery"<blockquote><p>投自荐信和简历投了一个多月，经过许多心酸和痛苦，今天终于成功选定中意的导师。谨以此文纪念这段经历。本文希望通过自身复盘，总结一些研究生自荐信的注意点，供读者参考。主要内容包括：</p><ol><li>如何确定发信对象</li><li>如何构思自荐信的内容</li><li>如何设置发信邮箱</li><li>如何选定自荐信发送的时机</li><li>如何回复导师的回信</li></ol><p>最后，本文也留了一个彩蛋，简单地回顾了期间发生的一些事情。想看故事的，可以直接跳到最后一部分。</p></blockquote><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/markus-winkler-Lp4jsVg8gpY-unsplash.jpg" title="题图" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/markus-winkler-Lp4jsVg8gpY-unsplash.jpg" alt="题图"></a></p><p>Photo by <a href="https://unsplash.com/@markuswinkler?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Markus Winkler</a> on <a href="https://unsplash.com/s/photos/email?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Unsplash</a></p><h1 id="如何确定发信对象"><a href="#如何确定发信对象" class="headerlink" title="如何确定发信对象"></a>如何确定发信对象</h1><p>确定发信对象，也就是要确定自己未来三年的导师。推荐到学院官网上查询相关导师的介绍。一来可以了解导师的研究方向，二来可以查到导师的电子邮件地址。这些都会为后续的工作做好准备。</p><p>针对导师的选择，建议结合自己的专业基础和兴趣所在。专业基础相近的（跨考的别打我），导师培养起来也方便；兴趣更是三年研究生生涯的精神支柱之一。建议同方向的导师多关注几位，防止最后在一个树上吊死。</p><p>不要害怕给老师发自荐信。学术大牛、副教授、青年优秀学者，都试试。万一哪个大牛看上你的经历，那不是赚发了？当然，也不必盯着几个大咖不放，这些热门的教授也许早就被推免生报满了，留给统考的机会并不多。</p><p>也许，你并不想在学术上有多高的造诣。直想 3 年，做做项目，拿到毕业证就行了。这种情况下，你可以选一些偏工程方向的导师，尤其对于专硕而言。</p><h1 id="如何构思自荐信的内容"><a href="#如何构思自荐信的内容" class="headerlink" title="如何构思自荐信的内容"></a>如何构思自荐信的内容</h1><p>自荐信内容的构思可以分两步走：</p><ol><li>构思简历</li><li>构思自荐信</li></ol><p>简历相当于是自荐信的提纲，而自荐信则是简历的扩充与细节描述。接下来，我结合自己的简历和自荐信聊聊这两部分内容。</p><h2 id="如何构思简历（附-Markdown-模板）"><a href="#如何构思简历（附-Markdown-模板）" class="headerlink" title="如何构思简历（附 Markdown 模板）"></a>如何构思简历（附 Markdown 模板）</h2><p>简历可以从以下几个方面构思：</p><ul><li>基本信息：介绍自己的姓名、政治面貌、联系方式等等（可加上自己的证件照）</li><li>教育背景：介绍自己的毕业院校，所学专业，成绩、绩点、专业排名等等</li><li>科研或项目经历：介绍自己的科研经历或者是项目经历。如果获奖，也可在此列出。未获奖的话，就简单概括一下使用什么技术，解决了什么问题，有什么创新等等。</li><li>社会实践：专业相关的实习或者社会实践</li><li>获奖情况：按国家级、省级、校级分类，按专业重要性排序</li><li>基本技能：英语能力（四六级、托福雅思等）、专业基础能力（软件、编程语言、实验仪器等）</li></ul><p>Markdown 模板如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">## 基本信息</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"display:flex;"</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"flex:1;max-width:fit-content;margin:5px;"</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span>姓名&amp;emsp;&amp;emsp;XXX&amp;emsp;&amp;emsp;&amp;emsp;政治面貌&amp;emsp;&amp;emsp;XXX（非(预备)党员删除）<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span>手机&amp;emsp;&amp;emsp;XXX&amp;emsp;&amp;emsp;&amp;emsp;电子邮箱&amp;emsp;&amp;emsp;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:XXX@example.com"</span>&gt;</span></span>XXX@example.com<span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">style</span>=<span class="string">"flex:1;max-width: 100px;height: 100px;margin-left: 50px;"</span> <span class="attr">src</span>=<span class="string">"XXX.jpg"</span> <span class="attr">alt</span>=<span class="string">"证件照"</span>/&gt;</span></span>证件照部分，使用时请删掉<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="section">## 教育背景</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>20XX.09 ~ 20XX.06&amp;emsp;XXX大学&amp;emsp;本科&amp;emsp;XXX专业&amp;emsp;平均绩点：<span class="strong">**XXX / 满绩点（排名情况）**</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 科研经历（或项目经历）</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>20XX.XX ~ 20XX.XX&amp;emsp;XX研究或者XX项目（获了什么奖、使用那些技术、有什么创新等等，不展开，简略概括即可）</span><br><span class="line"></span><br><span class="line"><span class="section">## 实践活动（社会实践）</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>20XX.XX ~ 20XX.XX.XX&amp;emsp;参加了什么活动，拿过什么奖，锻炼了什么能力（最好和专业相关，志愿者活动对于一般理工科来说，就不用写了）</span><br><span class="line"></span><br><span class="line"><span class="section">## 获奖情况</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span><span class="strong">**国家级（X 项）**</span></span><br><span class="line"><span class="bullet">  - </span>XXX（如果能查到，建议写上该奖项获奖比例或者奖项排名，下同）</span><br><span class="line"><span class="bullet">  - </span>（专业相关学科竞赛等，下同）</span><br><span class="line"><span class="bullet">- </span><span class="strong">**省级（X 项）**</span></span><br><span class="line"><span class="bullet">  - </span>XXX</span><br><span class="line"><span class="bullet">- </span><span class="strong">**校级（X 项）**</span></span><br><span class="line"><span class="bullet">  - </span>XXX</span><br><span class="line"><span class="bullet">  - </span>（例如奖学金等）</span><br><span class="line"></span><br><span class="line"><span class="section">## 基本技能</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span><span class="strong">**英语**</span>：&amp;emsp;&amp;emsp;&amp;emsp;CET-4：XXX 分&amp;emsp;CET-6：XXX 分（托福、雅思也可列入其中）</span><br><span class="line"><span class="bullet">* </span><span class="strong">**专业技能**</span>：&amp;emsp;（简单列举一些专业相关的技术，不一定要面面俱到，选自己熟悉的即可）</span><br></pre></td></tr></table></figure><div class="note info">            <p>将上述 Markdown 模板拷入 <a href="https://typora.io/" target="_blank" rel="noopener">Typora</a> ，即可编辑。编辑完成后，导出成 PDF 文件即可。此外，建议将内容浓缩到一页以内，方便导师查阅。</p>          </div><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/resume_result.PNG" title="简历效果图" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/resume_result.PNG" alt="简历效果图"></a></p><p>写完简历后，也可以在简历文件中附上自己的获奖证书、四六级证书、本科成绩单等等。这些可以作为自荐信的附件内容，供导师查看。</p><h2 id="如何构思自荐信（附自荐信模板）"><a href="#如何构思自荐信（附自荐信模板）" class="headerlink" title="如何构思自荐信（附自荐信模板）"></a>如何构思自荐信（附自荐信模板）</h2><p>有了简历的提纲挈领，再构思自荐信就会容易一些。推荐从以下几个方面构思</p><ul><li>自己的基本情况：自己是谁？毕业于哪里？学的什么专业？本科成绩怎么样？初复试成绩怎么样？（如果知道排名，也可以加上）</li><li>自己的科研（项目）经历：承担什么责任？使用什么技术？解决了什么问题？效果（最好将此项量化而非模糊地解释）怎么样？（如果觉得技术方面没什么好讲的，可以聊聊项目锻炼了哪些能力或者培养了哪些品质）</li><li>简述自己的获奖情况、英语能力、专业能力。</li><li>针对老师的方向做简单的夸赞，并表示愿意深入研究。</li><li>写明自己期待老师回复的内容（如还有没有名额等等）</li><li>寒暄语</li><li>署名及日期</li></ul><p>以下是具体的模板</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">XXX教授&#x2F;博士：</span><br><span class="line"></span><br><span class="line">您好！</span><br><span class="line"></span><br><span class="line">感谢您百忙之中抽出时间查看这封邮件！</span><br><span class="line"></span><br><span class="line">我是XXX，本科就读于XXX，学的是XXX专业，今年 6 月毕业；</span><br><span class="line">本科期间专业综合排名XX名，拿过XX奖学金；</span><br><span class="line">本次报考贵校XX专业（学硕和专硕一定要注明），初试总分 XXX （XX&#x2F;XX&#x2F;XX&#x2F;XX，排名&#x2F;进复试人数），</span><br><span class="line">复试总分 XXX，总成绩 XX（排名&#x2F;录取人数），已被拟录取。</span><br><span class="line"></span><br><span class="line">本科期间，我从XXX(时间)开始跟一位老师做了 XX 的研究(项目)。</span><br><span class="line">···（具体介绍科研经历及项目）。</span><br><span class="line">在此期间，我学到了 XXX，对 XXX 产生了浓厚的兴趣。</span><br><span class="line">这一段研究经历除了引起我的兴趣以外，我觉得更重要的一点是磨练了我的XXX，培养了 XXX 精神。</span><br><span class="line"></span><br><span class="line">在本科阶段，我也积极参加各种校级、省级的学科竞赛，获得了XX、XX、XX奖项。</span><br><span class="line">英语方面，我四六级都已经通过，其中四级 XXX ，六级 XXX 。</span><br><span class="line">专业技能方面，我熟悉 XXX，会使用 XXX。（附件是我的个人简历和主要证书，欢迎您下载查看）</span><br><span class="line"></span><br><span class="line">我在研究生导师介绍中找到您的主页，并且十分佩服您在XXX等方向多年的研究积淀和前瞻性的行业洞察；</span><br><span class="line">我本身对此十分感兴趣。</span><br><span class="line">因此，我希望加入您的组，接受您的任意研究工作安排。（这一块要针对导师的具体介绍，做个性化设计）</span><br><span class="line"></span><br><span class="line">不知道您是否还有研究生名额？您对研究生的要求是怎样的？期待您的回复！</span><br><span class="line"></span><br><span class="line">最后，祝愿老师身体健康，工作顺利！</span><br><span class="line"></span><br><span class="line">此致</span><br><span class="line"></span><br><span class="line">敬礼！</span><br><span class="line"></span><br><span class="line">署名</span><br><span class="line">日期</span><br></pre></td></tr></table></figure><p>在自荐信书写过程中，最好加粗邮件中的关键词或关键句子，以提高导师阅读邮件效率。自荐信书写完后，建议先自己阅读一遍，检查是否存在错别字，专业名词及缩写、大小写是否符合规范。保证内容无误后，推荐先给自己其他邮箱发一份，作为测试。看看不同终端（网页端、电脑客户端、平板端、手机端等）的阅读体验，将格式（如字号、缩进、空格等等）调整至一个最佳的阅读状态。这些细节都调整好后，就可以准备发自荐信了。</p><h1 id="如何设置发信邮箱"><a href="#如何设置发信邮箱" class="headerlink" title="如何设置发信邮箱"></a>如何设置发信邮箱</h1><p>在发信之前，需要选择合适的邮箱，并进行合理的设置。对于邮箱的选择，国内各大主流邮箱都可以作为发信邮箱。当然，你也可以使用某个 404 网站的邮箱。而在邮箱设置中，最重要的是合理修改自己的发信昵称，一般设置为自己的真实姓名，方便导师辨别。不然的话，使用奇怪的发信昵称，也许就会给导师留下不好的印象。另外，写好邮件的主题，也会方便导师查阅及回复。我是用的邮件主题是 <code>自荐信-姓名-专业（注明学硕、专硕）</code>。</p><p>除此以外，邮件也可以设置定时发送。定好合适的时间发送，可能也会有一些价值。具体我将在下一节介绍。</p><h1 id="如何选定自荐信发送的时机"><a href="#如何选定自荐信发送的时机" class="headerlink" title="如何选定自荐信发送的时机"></a>如何选定自荐信发送的时机</h1><p>发信的时间其实很重要，这在一定程度上决定了你能否抢到一些导师的名额。这里的时机又分为大时间和小时间。</p><p>大时间是指在什么阶段适合发自荐信。通常来说，如果你的初试成绩较高，可在复试之前，提前预定导师名额，抢先一步。这个阶段不建议海投，盯住几个，发送自荐信即可。如果你的初试成绩一般，本科有非常出色的经历，可以考虑发一些自荐信试试。如果初试成绩一般，本科也并不出色，我建议此阶段就不用花费精力打扰导师了，专心准备复试就行。在拟录取名单出来后，如果你被拟录取，那么要抓紧时间联系。这段时间，如果你没有肯定能选上的导师，请不要吝啬你的自荐信。多投！多投！多投！收不到回信也不用怕，不要停止发送，除非已经有你钟意的导师敲定要你。</p><p>小时间是指什么时间点投递自荐信。中午休息、下午下班或晚上晚饭后的时间较为合适。这些时间，很可能导师正在查阅邮件，回复所等待的时间也就会短一些。此外，一些导师也有不错的发信礼仪，他也会在与你投递的相同时间给你回信。这就极大地提高了及时回信的概率。我选择的时间是下午 5：00 ，推荐你也试试。</p><p>此外，我统计了我自己收到回复的时间情况，希望对你有所帮助。</p><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/time.png" title="回复时间直方图" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/time.png" alt="回复时间直方图"></a></p><p>其中，晚上 8 点 到 9 点是回复的高峰期，推荐你此时保持邮件和手机畅通。</p><h1 id="如何回复导师的回信"><a href="#如何回复导师的回信" class="headerlink" title="如何回复导师的回信"></a>如何回复导师的回信</h1><p>一般几个星期没动静的邮件，基本都是凉了。而有的可能并不会给肯定答复。除非回复名额已满，否则需要盯紧其他回复的导师。比如发个相关研究的问题咨询，向导师要个微信等等。当导师向你递出橄榄枝，那么恭喜你，已经成功了第一步。如果你觉得这个导师还不错，那么赶紧和他讨论研究课题，询问学习任务，提早进入状态；如果你还想等其他导师的回复，那么可以再等一等。多个导师给你发 offer 后，请多与导师交流，敲定一个。对于其他接受你的导师，请礼貌地发一封邮件拒绝。（具体写法可在网上找到）</p><h1 id="彩蛋：一个多月的投信故事"><a href="#彩蛋：一个多月的投信故事" class="headerlink" title="彩蛋：一个多月的投信故事"></a>彩蛋：一个多月的投信故事</h1><div class="note warning">            <p>（声明：以下内容仅是我的主观回忆和感受，可能与事实存在出入。其中并不包含对任意个人、集体贬低的意思。如有，我对此深表惬意）</p>          </div><p>从拟录取公示之后，我着手开始查阅导师信息。看到感兴趣的，先将网页收藏起来（具体的，我使用新版 Edge 的集锦功能，类似收藏功能但比收藏好用，强推！），之后再细选。之后，我写好了自荐信的模板，在 5 月 22 日发了第一封。这封当晚收到回复！但是很遗憾，这名教授名额满了。经过几天的细选，我又发了一封。石沉大海！出师不利，让我郁闷了好几天，加上毕业设计最后的遗留工作，我不得不暂时停下了发信这件事（作者注：其实这块时间不能松懈，也许很多机会就是在这段时间内溜走了）。</p><p>到了 6 月初，忙完了毕设，赶紧重新拾起发自荐信的工作。现在回想起来，这段时间我还是发的太少，两周内平均一周只发了一封。其结果也不尽如人意，一封没动静，一封说今年名额还未分配完成，让我再等等。我还真是天真，就停下开始等待名额正式分配完成！我感觉，大致是辜负了这段时间，导致后期到处吃瘪。</p><p>6 月 23 日，考研 QQ 群里传来了名额分配的公示（一张打印的纸），我才突然缓过神来，我好像还没导师确定要我！就像期末考试前几天，复习效率贼高一样，这几天我发了发信总数 60 % 的自荐信，但大部分是失败告终（作者注：到这个时间点，基本大部分导师都报满了，只有少部分有名额，所以当你已经被拟录取了，自荐信一定不要停，别像我一样，弄得灰头土脸）。好不容易，有个确定回复。我一问学长、学姐，心又凉了半解。据不可靠消息，这名导师为什么到双选后期仍然有名额，我想你我都懂。</p><p>怎么办？要不等分配吧，我想。</p><p>但是，我可不想未来 3 年过的太难受。我重新审视了一遍我的邮件模板。将最后期待老师回复的内容部分中的 <code>您对研究生的要求是怎样的？</code> 替换成了 <code>如果您的名额已满，能否推荐给其他老师？</code> 。再次开始投递自荐信。</p><p>6 月 24 日晚上，一封回复重新点燃了我的热情！这位导师看了我的背景，似乎十分激动（我猜的），非常热情的向我推荐另一名非常优秀的导师，并指出他还有名额。回复完了，他又将我的自荐信抄送了一份给他推荐的导师。这还没完，他又电话联系了我，催我赶紧与他推荐的导师联系！已经晚上 10 点了，我赶紧打开电脑，针对这位导师重新改写了模板中的部分内容，随后就发了出去。这简直是我人生的高光时刻之一，被别人赏识的感觉真特么爽！结果就是，大概凌晨 2 点才睡着。</p><p>一觉过去，削减了不少激动的心情。不能在一棵树上吊死，万一这名优秀的导师看不上我，我岂不是彻底凉透了？虽然已经步入端午假期，但是我还是开始了又一轮邮件轰炸。名额已满！招满了！请联系其他导师！大概是这几天，我看到的最多的回复。上面提到的仍有名额的导师仍未回复我，也许他在端午休息，并不会处理工作相关的事情。</p><p>26 号，终于又有一名导师看上我了！并且，最重要的是，他还有名额！卧槽，没想到最后我还能捡个漏！我立马回复，向导师咨询研究课题。他回复到，第二天通过视频简单交流一下。我以为第二天他还要考核一下我，没想到交流还是比较轻松愉快的。导师介绍了目前的研究方向，项目等信息。我也对此有点兴趣。于是一拍即合，定了，终于定了！</p><p>没想到，端午节的最后一天晚上，之前那名有名额的导师打电话来，似乎对我感兴趣。哎，没办法，我已经敲定另一名导师了，只好拒绝。人生最美的遗憾也许就是这样。</p><p>总的来说，我在投递自荐信阶段有些懈怠。自己本身有几张不错的牌，差点打得稀巴烂！还好，想要努力的时候什么时候都不会迟，运气可能就会在适当的时间到来。</p><p>努力吧，永远不要停下来啊（团长状）！</p><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/ath7s-kr3ys.jpg" title="团长状" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/ath7s-kr3ys.jpg" alt="团长状"></a></p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>最近看了一些文章、视频和学长们的感受，研究生的三年似乎并不如想象的那么轻松愉快，还是十分紧张和紧凑的。不要有太多期待，也不要完全放弃幻想，一个平常心对待即可。</p><p>最后，祝愿正在准备考研的读者一战成硕，一研为定！</p><h1 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h1><p><a href="https://cosmosning.github.io/2020/03/02/yi-wen-cheng-xu-yuan-shi-ru-he-pai-ban-jian-li-de/">译文-程序员是如何排版简历的</a></p></div><script src="https://cdn.bootcdn.net/ajax/libs/lightgallery-js/1.2.0/js/lightgallery.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-thumbnail.js@1.2.0/dist/lg-thumbnail.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-zoom.js@1.2.0/dist/lg-zoom.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-autoplay.js@1.2.0/dist/lg-autoplay.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-fullscreen.js@1.2.0/dist/lg-fullscreen.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-pager.js@1.0.0/dist/lg-pager.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    <summary type="html">
    
      回顾自身经历，介绍研究生自荐信的写法
    
    </summary>
    
    
      <category term="考研" scheme="https://cosmosning.github.io/categories/%E8%80%83%E7%A0%94/"/>
    
    
      <category term="研究生" scheme="https://cosmosning.github.io/tags/%E7%A0%94%E7%A9%B6%E7%94%9F/"/>
    
      <category term="自荐信" scheme="https://cosmosning.github.io/tags/%E8%87%AA%E8%8D%90%E4%BF%A1/"/>
    
  </entry>
  
  <entry>
    <title>Vim简易入门</title>
    <link href="https://cosmosning.github.io/2020/06/15/vim-jian-yi-ru-men/"/>
    <id>https://cosmosning.github.io/2020/06/15/vim-jian-yi-ru-men/</id>
    
    
    <author>
    <name>CosmosNing</name>
    <uri>https://cosmosning.github.io/about</uri>
    </author>
    
    
    <published>2020-06-15T04:07:06.000Z</published>
    <updated>2020-08-20T16:46:12.068Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.bootcdn.net/ajax/libs/lightgallery-js/1.2.0/css/lightgallery.min.css" /><div class=".article-gallery"<blockquote><p>最近，笔者在学习 Linux 中的常见命令。其中 Vim 作为文本编辑命令，是十分基础又非常强大的工具。然而，许多开发者因其命令繁琐，上手难度大，并没有完全发挥出 Vim 的潜力。因此，本文将介绍 Vim 的常见命令及其用法，供读者参考。通过本文，你将获得：</p><ol><li>了解 Vim 的四种模式。</li><li>掌握 Vim 常见文本编辑命令。</li></ol></blockquote><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/kdwk-leung-nupZCrr61Fg-unsplash.jpg" title="题图" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/kdwk-leung-nupZCrr61Fg-unsplash.jpg" alt="题图"></a></p><p>Photo by <a href="https://unsplash.com/@kdwk?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Kdwk Leung</a> on <a href="https://unsplash.com/t/nature?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Unsplash</a></p><h1 id="什么是-Vim？"><a href="#什么是-Vim？" class="headerlink" title="什么是 Vim？"></a>什么是 Vim？</h1><p>Vim 是 <strong>Vi</strong> I<strong>M</strong>proved 的缩写。它是由 Bram Moolenaar 开发的开源免费文本编辑器。顾名思义，Vim 基于 Vi（另一个早期的文本编辑器） 但又不止于 Vi。由于其强大的文本处理功能，在很多类 Unix 系统中，Vim 都成了默认的文本编辑器。尤其在无图形化界面的服务器上，Vim 成为了绝大部分运维人员线上运维的选择。</p><p>很多 Linux 发行版都内置了 Vim 命令，只需打开终端，输入如下命令，即可使用 Vim。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim</span><br></pre></td></tr></table></figure><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/vim.PNG" title="Vim" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/vim.PNG" alt="Vim"></a></p><h1 id="Vim-的四种模式"><a href="#Vim-的四种模式" class="headerlink" title="Vim 的四种模式"></a>Vim 的四种模式</h1><p>Vim 中的四种模式是 Vim 的核心设计理念之一。以四种模式为基础，理解和使用 Vim 的文本编辑命令就会容易许多。</p><h2 id="总览"><a href="#总览" class="headerlink" title="总览"></a>总览</h2><p>Vim 中有四种模式，分别是：</p><ul><li>正常模式（Normal Mode）：用于查看文本和执行复制、粘贴等文本操作命令。</li><li>插入模式（Insert Mode）：用于编辑文本。</li><li>命令模式（Command Mode）：用于执行指定命令。</li><li>可视模式（Visual Mode）：用于选中文本。</li></ul><h2 id="正常模式（Normal-Mode）"><a href="#正常模式（Normal-Mode）" class="headerlink" title="正常模式（Normal Mode）"></a>正常模式（Normal Mode）</h2><p>在 Vim 打开文件或者新建文件时，默认进入的模式是正常模式。在正常模式下，使用键盘直接输入字母或者数字，可能不会出现类似编辑文本时的结果。也就是说，该模式下，文本无法直接编辑。然而，通过某些特定的指令，可以完成一些常见的文本操作命令。</p><h3 id="移动光标"><a href="#移动光标" class="headerlink" title="移动光标"></a>移动光标</h3><p>光标的位置将决定复制、粘贴等操作的位置，因此光标的操作于文本操作十分重要。不同于当前拥有图形界面的文字处理软件，Vim 中无法使用鼠标指定光标位置，而是使用键盘指令，完成光标的移动。这一设计，使得 Vim 无需鼠标，即可完成文本编辑的任务。这大大提高了文本编辑的效率。</p><p>Vim 的光标移动又可以分为两类。分别是<strong>小范围移动</strong>、<strong>大范围移动</strong>。</p><p>在<strong>小范围移动</strong>中，只涉及到四个字母 <code>h</code>、<code>j</code>、<code>k</code>、<code>l</code>，分别代表<strong>左、下、上、右</strong>（相当于键盘上的光标键）</p><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/cursorSD.png" title="小范围移动光标" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/cursorSD.png" alt="小范围移动光标"></a></p><div class="note info">            <p>部分 Vim 版本支持<strong>光标键</strong>移动光标，但仍有部分 Vim 不支持（由于相关操作系统会将光标键解释为其他字符），推荐熟练掌握 <code>h</code>、<code>j</code>、<code>k</code>、<code>l</code> 指令，完成小范围移动光标的任务。</p>          </div><p>在<strong>大范围移动</strong>中，可以通过 <code>g</code>、<code>G</code> 快速跳转到<strong>第一行</strong>和<strong>最后一行</strong>；在 <code>G</code> 前加上数字，就可以跳转到指定行；<code>^</code>、<code>$</code> 则可以跳转到光标所在行的行首和行尾。这些移动方式将会极大地提高光标移动效率。</p><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/cursorLD.png" title="大范围移动光标" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/cursorLD.png" alt="大范围移动光标"></a></p><h3 id="常见文本操作"><a href="#常见文本操作" class="headerlink" title="常见文本操作"></a>常见文本操作</h3><p>在正常模式下，除了可以移动光标，也可以执行一些简单的文本操作命令。具体的如下表所示：</p><table><thead><tr><th align="center">功能</th><th align="center">指令</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center">复制</td><td align="center"><code>yy</code></td><td align="center">复制整行</td></tr><tr><td align="center"></td><td align="center"><code>&lt;数字&gt;yy</code></td><td align="center">复制当前光标所在行开始，连续&lt;数字&gt;行的文本</td></tr><tr><td align="center"></td><td align="center"><code>y$</code>（y +shift +4）</td><td align="center">复制从当前光标所在字符开始，到本行末尾的文本</td></tr><tr><td align="center">粘贴</td><td align="center"><code>p</code></td><td align="center">粘贴复制结果</td></tr><tr><td align="center">剪切</td><td align="center"><code>dd</code></td><td align="center">剪切整行</td></tr><tr><td align="center"></td><td align="center"><code>d$</code></td><td align="center">剪切从当前光标所在字符开始，到本行末尾的文本</td></tr><tr><td align="center">撤销</td><td align="center"><code>u</code></td><td align="center">撤销命令</td></tr><tr><td align="center">重做</td><td align="center"><code>ctrl + r</code></td><td align="center">重做命令</td></tr><tr><td align="center">删除单个字符</td><td align="center"><code>x</code></td><td align="center">将当前光标位置的字符删除</td></tr><tr><td align="center">替换单个字符</td><td align="center"><code>r+&lt;指定字符&gt;</code></td><td align="center">将当前光标位置的字符替换为指定字符</td></tr></tbody></table><h2 id="插入模式（Insert-Mode）"><a href="#插入模式（Insert-Mode）" class="headerlink" title="插入模式（Insert Mode）"></a>插入模式（Insert Mode）</h2><p>在正常模式中，用户无法直接编辑文本。而如果需要直接编辑文本，则需要进入插入模式。插入模式有多种进入方式。具体如下：</p><table><thead><tr><th align="center">进入命令</th><th align="center">效果</th></tr></thead><tbody><tr><td align="center">按 <code>i</code> 进入</td><td align="center">光标会在原位</td></tr><tr><td align="center">按 <code>I</code>（大写 i：shift + i）进入</td><td align="center">光标会在本行开头</td></tr><tr><td align="center">按 <code>a</code> 进入</td><td align="center">光标会在原位的下一位</td></tr><tr><td align="center">按 <code>A</code>（shift + a）进入</td><td align="center">光标会在本行最后一个字符的下一位</td></tr><tr><td align="center">按 <code>o</code> 进入</td><td align="center">光标会在当前行的下面另起一行</td></tr><tr><td align="center">按 <code>O</code> （shift + o）进入</td><td align="center">光标会在当前行的上面另起一行</td></tr></tbody></table><p>进入插入模式之后，就可以直接编辑文本了。编辑完成后，可以按 <code>ESC</code> 键返回正常模式。</p><h2 id="命令模式（Command-Mode）"><a href="#命令模式（Command-Mode）" class="headerlink" title="命令模式（Command Mode）"></a>命令模式（Command Mode）</h2><p>当处于正常模式时，按 <code>:</code> 键可进入命令模式。在命令模式下，可执行更多丰富的命令。这些命令大致可分为两类，一类命令用于设置 Vim 编辑器的属性，另一类则用来完成文件、文本操作任务。</p><h3 id="Vim-设置"><a href="#Vim-设置" class="headerlink" title="Vim 设置"></a>Vim 设置</h3><p>vim 设置的一般格式如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">: <span class="built_in">set</span> &lt;设置项&gt;</span><br></pre></td></tr></table></figure><p>如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">: <span class="built_in">set</span> nu</span><br></pre></td></tr></table></figure><p>可显示行号。</p><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/setnu.PNG" title="Vim 显示行号" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/setnu.PNG" alt="Vim 显示行号"></a></p><p>然而，上述设置方式仅对当前编辑文本进程有效，如需永久生效，则要修改 <code>/etc/vimrc</code> 文件。</p><h3 id="文件、文本操作"><a href="#文件、文本操作" class="headerlink" title="文件、文本操作"></a>文件、文本操作</h3><p>在命令模式下，Vim 可以执行一些文件操作命令，如保存、退出等；亦可执行更加复杂的文本操作命令，如查找、替换等。</p><table><thead><tr><th align="center">功能</th><th align="center">命令</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center">保存</td><td align="center"><code>: w &lt;文件名&gt;</code></td><td align="center">保存新文件</td></tr><tr><td align="center"></td><td align="center"><code>: w</code></td><td align="center">表示保存到当前文件</td></tr><tr><td align="center">退出</td><td align="center"><code>: q</code></td><td align="center">退出 vim</td></tr><tr><td align="center"></td><td align="center"><code>: q !</code></td><td align="center">强制退出（默认不保存修改）</td></tr><tr><td align="center">执行其他命令</td><td align="center"><code>: ! &lt;命令&gt;</code></td><td align="center">执行 shell 命令</td></tr><tr><td align="center">查找操作</td><td align="center"><code>: /&lt;正则表达式&gt;</code></td><td align="center">按 <code>n</code> 查找下一个，<code>shift + n</code> 查找上一个</td></tr><tr><td align="center">替换操作</td><td align="center"><code>: s/&lt;旧字符或正则表达式&gt;/&lt;新字符或正则表达式&gt;</code></td><td align="center">针对当前光标所在行的字符进行替换</td></tr><tr><td align="center"></td><td align="center"><code>: %s/&lt;旧字符或正则表达式&gt;/&lt;新字符或正则表达式&gt;</code></td><td align="center">全文搜索替换一处</td></tr><tr><td align="center"></td><td align="center"><code>: %s/&lt;旧字符或正则表达式&gt;/&lt;新字符或正则表达式&gt;/g</code></td><td align="center">全文搜索、全部替换</td></tr><tr><td align="center"></td><td align="center"><code>: m,n s/&lt;旧字符或正则表达式&gt;/&lt;新字符或正则表达式&gt;/g</code></td><td align="center">指定行范围内替换，其中 m，n 为正整数</td></tr></tbody></table><h2 id="可视模式（Visual-Mode）"><a href="#可视模式（Visual-Mode）" class="headerlink" title="可视模式（Visual Mode）"></a>可视模式（Visual Mode）</h2><p>在复制等文本操作命令时，常常需要选中相关文本。这就需要进入 Vim 的可视模式。进入可视模式的方式比较常见的有 3 种，具体如下表所示：</p><table><thead><tr><th align="center">进入命令</th><th align="center">解释</th></tr></thead><tbody><tr><td align="center">按 <code>v</code> 进入</td><td align="center">字符可视模式，按行序以<strong>单个字符</strong>为单位进行选中操作</td></tr><tr><td align="center">按 <code>V</code> 进入</td><td align="center">行可视模式，按行序以<strong>单行</strong>为单位进行选中操作</td></tr><tr><td align="center">按 <code>ctrl + v</code> 进入</td><td align="center">块可视模式，以光标所在位置为顶点，自定义矩形块中的字符全部选定</td></tr></tbody></table><p>按 <code>ESC</code> 键返回正常模式。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>本文主要介绍了 Vim 的四种模式和四种模式下的文本编辑及操作命令，希望对读者有所帮助。</p><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/Vim-Four-Modes.png" title="Vim 四种模式" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/06/Vim-Four-Modes.png" alt="Vim 四种模式"></a></p><h1 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h1><p><a href="https://www.bilibili.com/video/BV1Yt411X7mu" target="_blank" rel="noopener">【视频·中文】vim入门教程（共3讲） by 正月点灯笼</a></p><p><a href="https://www.tutorialspoint.com/vim/vim_quick_guide.htm" target="_blank" rel="noopener">【文本·英文】Vim - Quick Guide from tutorialspoint</a></p></div><script src="https://cdn.bootcdn.net/ajax/libs/lightgallery-js/1.2.0/js/lightgallery.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-thumbnail.js@1.2.0/dist/lg-thumbnail.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-zoom.js@1.2.0/dist/lg-zoom.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-autoplay.js@1.2.0/dist/lg-autoplay.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-fullscreen.js@1.2.0/dist/lg-fullscreen.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-pager.js@1.0.0/dist/lg-pager.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    <summary type="html">
    
      介绍 Vim 的常见命令及其用法
    
    </summary>
    
    
      <category term="指南" scheme="https://cosmosning.github.io/categories/%E6%8C%87%E5%8D%97/"/>
    
    
      <category term="Vim" scheme="https://cosmosning.github.io/tags/Vim/"/>
    
      <category term="Linux" scheme="https://cosmosning.github.io/tags/Linux/"/>
    
      <category term="命令" scheme="https://cosmosning.github.io/tags/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>C++中的浅拷贝和深拷贝</title>
    <link href="https://cosmosning.github.io/2020/05/18/c-zhong-de-qian-kao-bei-he-shen-kao-bei/"/>
    <id>https://cosmosning.github.io/2020/05/18/c-zhong-de-qian-kao-bei-he-shen-kao-bei/</id>
    
    
    <author>
    <name>CosmosNing</name>
    <uri>https://cosmosning.github.io/about</uri>
    </author>
    
    
    <published>2020-05-18T01:18:20.000Z</published>
    <updated>2020-08-20T16:46:12.068Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.bootcdn.net/ajax/libs/lightgallery-js/1.2.0/css/lightgallery.min.css" /><div class=".article-gallery"<blockquote><p>（导读）短文一篇。主要介绍浅拷贝和深拷贝的含义以及在 C++ 中的实现</p></blockquote><p><a href="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/05/cristian-lozan-lb5yppoIEWk-unsplash.jpg" title="封面图片" class="gallery-item"><img src="https://gitee.com/CosmosNing/MyPicGo/raw/master/images/2020/05/cristian-lozan-lb5yppoIEWk-unsplash.jpg" alt="封面图片"></a></p><p>Photo by <a href="https://unsplash.com/@chrisslozan?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Cristian Lozan</a> on <a href="https://unsplash.com/t/nature?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Unsplash</a></p><h1 id="问题引入"><a href="#问题引入" class="headerlink" title="问题引入"></a>问题引入</h1><p>先来看一个例子</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ShallowCopyObject</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">int</span> basicType;</span><br><span class="line"><span class="keyword">int</span> *refType;</span><br><span class="line">ShallowCopyObject()</span><br><span class="line">&#123;</span><br><span class="line">basicType = <span class="number">10</span>;</span><br><span class="line">refType = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">refType[i] = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>我定义了一个 <code>ShallowCopyObject</code> 类，它包括两个成员变量</p><ol><li><code>basicType</code> ：类型为语言内置基本类型的 <code>int</code></li><li><code>refType</code> ：类型为指针，指向 <code>int</code> 类型数据</li></ol><p>与此同时，我还定义了一个无参构造函数，用于初始化 <code>basicType</code> 和 <code>refType</code> 的值。其中 <code>basicType</code> 初始化为 10；<code>refType</code> 初始化为一个大小为 10 的数组，依次存储 0~9 的整数。</p><h2 id="问题一"><a href="#问题一" class="headerlink" title="问题一"></a>问题一</h2><p>假设主函数 <code>main</code> 中有如下语句，那么终端会输出什么呢？</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ShallowCopyObject a;</span><br><span class="line">ShallowCopyObject b = a;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"Before changing value of b.basicType"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"b.basicType "</span> &lt;&lt; b.basicType &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">b.basicType = <span class="number">233</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"After changing value of b.basicType"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"a.basicType "</span> &lt;&lt; a.basicType &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"b.basicType "</span> &lt;&lt; b.basicType &lt;&lt; <span class="built_in">endl</span>;</span><br></pre></td></tr></table></figure><p>先自己分析一下，再上机敲一敲，看看自己的思路对不对。</p><h2 id="问题二"><a href="#问题二" class="headerlink" title="问题二"></a>问题二</h2><p>类似的，下面的语句会输出什么呢？</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ShallowCopyObject a;</span><br><span class="line">ShallowCopyObject b = a;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"Before changing value of b.refType[6]"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"b.refType[6] "</span> &lt;&lt; b.refType[<span class="number">6</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">b.refType[<span class="number">6</span>] = <span class="number">666</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"After b.refType[6]"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"a.refType[6] "</span> &lt;&lt; a.refType[<span class="number">6</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"b.refType[6] "</span> &lt;&lt; b.refType[<span class="number">6</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br></pre></td></tr></table></figure><p>再试着自己分析一下，上机敲一敲，看看自己的思路对不对。</p><h1 id="输出结果"><a href="#输出结果" class="headerlink" title="输出结果"></a>输出结果</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ShallowCopyObject a;</span><br><span class="line">ShallowCopyObject b = a;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"Before changing value of b.basicType"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"b.basicType "</span> &lt;&lt; b.basicType &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">b.basicType = <span class="number">233</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"After changing value of b.basicType"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"a.basicType "</span> &lt;&lt; a.basicType &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"b.basicType "</span> &lt;&lt; b.basicType &lt;&lt; <span class="built_in">endl</span>;</span><br></pre></td></tr></table></figure><p>第一个问题，也就是上面的代码，会输出如下结果</p><div class="note default">            <p>Before changing value of b.basicType<br>b.basicType 10<br>After changing value of b.basicType<br>a.basicType 10<br>b.basicType 233</p>          </div><p>由此可见，<strong>两个对象基本数据类型的成员变量是相互独立的，不会相互影响</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ShallowCopyObject a;</span><br><span class="line">ShallowCopyObject b = a;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"Before changing value of b.refType[6]"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"b.refType[6] "</span> &lt;&lt; b.refType[<span class="number">6</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">b.refType[<span class="number">6</span>] = <span class="number">666</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"After b.refType[6]"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"a.refType[6] "</span> &lt;&lt; a.refType[<span class="number">6</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"b.refType[6] "</span> &lt;&lt; b.refType[<span class="number">6</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br></pre></td></tr></table></figure><p>而第二个问题，它的结果可能出乎意料：</p><div class="note default">            <p>Before changing value of b.refType[6]<br>b.refType[6] 6<br>After b.refType[6]<br>a.refType[6] 666<br>b.refType[6] 666</p>          </div><p>我们惊奇的发现，对 <code>b</code> 对象的成员变量修改，竟然影响到了 <code>a</code> 对象中的值！</p><p>这一切的原因，都是由于在C++ 中，默认对象之间的拷贝（包括默认复制构造函数和默认赋值语句）是浅拷贝。</p><h1 id="什么是浅拷贝？"><a href="#什么是浅拷贝？" class="headerlink" title="什么是浅拷贝？"></a>什么是浅拷贝？</h1><p>那么，什么是浅拷贝呢？</p><p>这里给出维基百科的定义：</p><blockquote><p>One method of copying an object is the shallow copy. In that case a new object B is created, and the fields values of A are copied over to B. This is also known as a field-by-field copy, field-for-field copy, or field copy. If the field value is a reference to an object (e.g., a memory address) it copies the reference, hence referring to the same object as A does, and if the field value is a primitive type it copies the value of the primitive type. In languages without primitive types (where everything is an object), all fields of the copy B are references to the same objects as the fields of original A. The referenced objects are thus shared, so if one of these objects is modified (from A or B), the change is visible in the other. Shallow copies are simple and typically cheap, as they can be usually implemented by simply copying the bits exactly.</p><p>(<a href="https://en.wikipedia.org/wiki/Object_copying#Shallow_copy" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Object_copying#Shallow_copy</a>)</p></blockquote><p>简单的来说，浅拷贝就是逐个字节的拷贝。也就是说，拷贝后每一个成员变量的值都相同。如果该值是基本数据类型，那么该值被拷贝；如果该值是引用数据类型（如对象、指针等），那么该值（注意：这里的值是指<strong>地址</strong>）也会被拷贝。</p><p>由此可知，针对第一个问题，由于改变的是基本类型的数据，它是独立的一份拷贝，因而另一个对象值的修改并不会影响被拷贝的对象；然而，在第二个问题中，由于浅拷贝，<code>b</code> 中 <code>refType</code> 指向了和 <code>a</code> 对象 <code>refType</code> 相同的位置（因为拷贝了地址），因而在 <code>b</code> 中修改 <code>refType</code> 数组中的值，会影响到对象 <code>a</code> 。</p><div class="note info">            <h2 id="一句话描述"><a href="#一句话描述" class="headerlink" title="一句话描述"></a>一句话描述</h2><p><strong>浅拷贝会共享引用数据类型成员变量（指针指向同一个地址），而不共享原始数据类型的成员变量</strong></p>          </div><h1 id="什么是深拷贝？"><a href="#什么是深拷贝？" class="headerlink" title="什么是深拷贝？"></a>什么是深拷贝？</h1><p>有时候，我们并不希望拷贝对象时，其引用成员变量指向同一个引用数据类型的数据对象，而希望它们指向不同的位置，但是这些位置存储的值是相同的。这就需要用到深拷贝。</p><p>在维基百科中，深拷贝是这样定义的：</p><blockquote><p>An alternative is a deep copy, meaning that fields are dereferenced: rather than references to objects being copied, new copy objects are created for any referenced objects, and references to these placed in B. The result is different from the result a shallow copy gives in that the objects referenced by the copy B are distinct from those referenced by A, and independent. Deep copies are more expensive, due to needing to create additional objects, and can be substantially more complicated, due to references possibly forming a complicated graph.</p><p>(<a href="https://en.wikipedia.org/wiki/Object_copying#Deep_copy" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Object_copying#Deep_copy</a>)</p></blockquote><div class="note info">            <h2 id="一句话描述"><a href="#一句话描述" class="headerlink" title="一句话描述"></a>一句话描述</h2><p><strong>深拷贝不会共享引用数据类型成员变量（它们的指针指向不同地址，但是拷贝后指针指向地址所存储的值是相等的），也不共享原始数据类型的成员变量</strong></p>          </div><h2 id="实现深拷贝"><a href="#实现深拷贝" class="headerlink" title="实现深拷贝"></a>实现深拷贝</h2><p>在 C++ 中可以自定义复制构造函数、重载赋值运算符，实现深拷贝。对于本文开头提出的问题，可以做如下改进。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 自定义复制构造函数</span></span><br><span class="line">DeepCopyObject(<span class="keyword">const</span> DeepCopyObject &amp;obj)</span><br><span class="line">&#123;</span><br><span class="line">    basicType = obj.basicType;</span><br><span class="line">    refType = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];        <span class="comment">// 引用类型成员变量重新申请空间</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)  <span class="comment">// 将值逐个拷贝到新申请的空间中</span></span><br><span class="line">    &#123;</span><br><span class="line">        refType[i] = obj.refType[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 重载赋值运算符</span></span><br><span class="line">DeepCopyObject &amp;<span class="keyword">operator</span>=(<span class="keyword">const</span> DeepCopyObject &amp;obj)</span><br><span class="line">&#123;</span><br><span class="line">    basicType = obj.basicType;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span> == &amp;obj) <span class="comment">// obj = obj; 情况</span></span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">delete</span>[] refType;</span><br><span class="line">    refType = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        refType[i] = obj.refType[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li>浅拷贝会<strong>共享</strong>引用数据类型成员变量（指针指向<strong>同一个地址</strong>），而<strong>不共享</strong>原始数据类型的成员变量</li><li>深拷贝<strong>不会共享</strong>引用数据类型成员变量（它们的指针指向<strong>不同</strong>地址，但是拷贝后指针指向地址所存储的<strong>值是相等的</strong>），也<strong>不共享</strong>原始数据类型的成员变量</li><li>在 C++ 中可以<strong>自定义复制构造函数</strong>、<strong>重载赋值运算符</strong>，<strong>实现深拷贝</strong></li></ul><h1 id="附：实现深拷贝完整代码"><a href="#附：实现深拷贝完整代码" class="headerlink" title="附：实现深拷贝完整代码"></a>附：实现深拷贝完整代码</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DeepCopyObject</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">int</span> basicType;</span><br><span class="line"><span class="keyword">int</span> *refType;</span><br><span class="line"></span><br><span class="line">DeepCopyObject()</span><br><span class="line">&#123;</span><br><span class="line">basicType = <span class="number">10</span>;</span><br><span class="line">refType = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">refType[i] = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">DeepCopyObject(<span class="keyword">const</span> DeepCopyObject &amp;obj)</span><br><span class="line">&#123;</span><br><span class="line">basicType = obj.basicType;</span><br><span class="line">refType = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">refType[i] = obj.refType[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">~DeepCopyObject()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (refType)</span><br><span class="line"><span class="keyword">delete</span>[] refType;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">DeepCopyObject &amp;<span class="keyword">operator</span>=(<span class="keyword">const</span> DeepCopyObject &amp;obj)</span><br><span class="line">&#123;</span><br><span class="line">basicType = obj.basicType;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span> == &amp;obj) <span class="comment">// obj = obj; 情况</span></span><br><span class="line"><span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line"><span class="keyword">delete</span>[] refType;</span><br><span class="line">refType = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">refType[i] = obj.refType[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">DeepCopyObject a;</span><br><span class="line">DeepCopyObject b = a; <span class="comment">// 调用 DeepCopyObject(const DeepCopyObject &amp; obj)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// b = a; // 调用 DeepCopyObject &amp; operator=(const DeepCopyObject &amp; obj)</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"Before changing value of b.basicType"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"b.basicType "</span> &lt;&lt; b.basicType &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">b.basicType = <span class="number">233</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"After changing value of b.basicType"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"a.basicType "</span> &lt;&lt; a.basicType &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"b.basicType "</span> &lt;&lt; b.basicType &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"Before changing value of b.refType[6]"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"b.refType[6] "</span> &lt;&lt; b.refType[<span class="number">6</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">b.refType[<span class="number">6</span>] = <span class="number">666</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"After b.refType[6]"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"a.refType[6] "</span> &lt;&lt; a.refType[<span class="number">6</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"b.refType[6] "</span> &lt;&lt; b.refType[<span class="number">6</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><script src="https://cdn.bootcdn.net/ajax/libs/lightgallery-js/1.2.0/js/lightgallery.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-thumbnail.js@1.2.0/dist/lg-thumbnail.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-zoom.js@1.2.0/dist/lg-zoom.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-autoplay.js@1.2.0/dist/lg-autoplay.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-fullscreen.js@1.2.0/dist/lg-fullscreen.min.js"></script><script src="https://cdn.jsdelivr.net/npm/lg-pager.js@1.0.0/dist/lg-pager.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    <summary type="html">
    
      介绍浅拷贝和深拷贝的含义以及在 C++ 中的实现
    
    </summary>
    
    
      <category term="C++" scheme="https://cosmosning.github.io/categories/C/"/>
    
    
      <category term="C++" scheme="https://cosmosning.github.io/tags/C/"/>
    
      <category term="浅拷贝" scheme="https://cosmosning.github.io/tags/%E6%B5%85%E6%8B%B7%E8%B4%9D/"/>
    
      <category term="深拷贝" scheme="https://cosmosning.github.io/tags/%E6%B7%B1%E6%8B%B7%E8%B4%9D/"/>
    
  </entry>
  
</feed>
